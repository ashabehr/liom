// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: suVPi77vb6vv9K5rYJwyxC

import * as React from "react";
import { hasVariant, ensureGlobalVariants } from "@plasmicapp/react-web";
import { Fragment } from "@/fragment/fragment"; // plasmic-import: ndlOltyewsQb/codeComponent
import { GrowthBook } from "@/fragment/growthbook"; // plasmic-import: EEWwb4qBFl4l/codeComponent
import { Splunk } from "@/fragment/splunk"; // plasmic-import: lER0gVvAHk4k/codeComponent
import { EmbedCss } from "@plasmicpkgs/plasmic-embed-css";
import { AntdConfigProvider } from "@plasmicpkgs/antd5/skinny/registerConfigProvider";
import { CmsCredentialsProvider } from "@plasmicpkgs/plasmic-cms";
import { ParallaxProviderWrapper } from "@plasmicpkgs/react-scroll-parallax";

export interface GlobalContextsProviderProps {
  children?: React.ReactElement;
  fragmentProps?: Partial<
    Omit<React.ComponentProps<typeof Fragment>, "children">
  >;
  growthBookProps?: Partial<
    Omit<React.ComponentProps<typeof GrowthBook>, "children">
  >;
  splunkProps?: Partial<Omit<React.ComponentProps<typeof Splunk>, "children">>;
  embedCssProps?: Partial<
    Omit<React.ComponentProps<typeof EmbedCss>, "children">
  >;
  antdConfigProviderProps?: Partial<
    Omit<React.ComponentProps<typeof AntdConfigProvider>, "children">
  >;
  cmsCredentialsProviderProps?: Partial<
    Omit<React.ComponentProps<typeof CmsCredentialsProvider>, "children">
  >;
  parallaxProviderWrapperProps?: Partial<
    Omit<React.ComponentProps<typeof ParallaxProviderWrapper>, "children">
  >;
}

export default function GlobalContextsProvider(
  props: GlobalContextsProviderProps
) {
  const {
    children,
    fragmentProps,
    growthBookProps,
    splunkProps,
    embedCssProps,
    antdConfigProviderProps,
    cmsCredentialsProviderProps,
    parallaxProviderWrapperProps
  } = props;

  return (
    <Fragment
      {...fragmentProps}
      apiConfig={
        fragmentProps && "apiConfig" in fragmentProps
          ? fragmentProps.apiConfig!
          : undefined
      }
      previewApiConfig={
        fragmentProps && "previewApiConfig" in fragmentProps
          ? fragmentProps.previewApiConfig!
          : undefined
      }
      primaryColor={
        fragmentProps && "primaryColor" in fragmentProps
          ? fragmentProps.primaryColor!
          : "#000000"
      }
      rtl={
        fragmentProps && "rtl" in fragmentProps ? fragmentProps.rtl! : undefined
      }
    >
      <GrowthBook
        {...growthBookProps}
        apiHost={
          growthBookProps && "apiHost" in growthBookProps
            ? growthBookProps.apiHost!
            : undefined
        }
        clientKey={
          growthBookProps && "clientKey" in growthBookProps
            ? growthBookProps.clientKey!
            : undefined
        }
        previewAttributes={
          growthBookProps && "previewAttributes" in growthBookProps
            ? growthBookProps.previewAttributes!
            : undefined
        }
      >
        <Splunk
          {...splunkProps}
          defaultApiHost={
            splunkProps && "defaultApiHost" in splunkProps
              ? splunkProps.defaultApiHost!
              : undefined
          }
          defaultApiKey={
            splunkProps && "defaultApiKey" in splunkProps
              ? splunkProps.defaultApiKey!
              : undefined
          }
        >
          <EmbedCss
            {...embedCssProps}
            css={
              embedCssProps && "css" in embedCssProps
                ? embedCssProps.css!
                : '@font-face {\n  font-family: \'yekan bakh\';\n  src: url(\'https://site-assets.plasmic.app/c58d0b8f205d4a8e1119286e283f8c57.ttf\');\n  font-weight: normal;\n}\n\n@font-face {\n  font-family: \'yekan bakh\';\n  src: url(\'https://site-assets.plasmic.app/f4245c3ba835c7d36591a79a325b23bb.ttf\');\n  font-weight: bold;\n}\n\n@font-face {\n  font-family: \'yekan bakh\';\n  src: url(\'https://site-assets.plasmic.app/3fdc0c37a33abe0cbac6028b62e78c77.ttf\');\n  font-weight: 500;\n}\n\n* {\n  direction: rtl;\n  font-family: \'yekan bakh\' !important;\n  font-feature-settings: \'lnum\' 0, \'tnum\' 0;\n}\n\n@media (max-width: 780px) {\n  body::-webkit-scrollbar {\n    display: none;\n  }\n}\n\n.negative {\n  direction: ltr;\n}\n\n.ant-collapse-arrow {\n  transform: scaleX(-1);\n  position: relative;\n  top: 50%;\n}\n\n.bioritmbox .ant-progress-inner {\n  width: 90px !important;\n  height: 90px !important;\n}\n\n.bioritmbox .ant-progress-text {\n  position: relative 1 !important;\n  top: 75% !important;\n  opacity: 0;\n}\n\n.food .ant-progress-text {\n  position: relative 1 !important;\n  top: 75% !important;\n  opacity: 0;\n}\n\n.ant-progress-text {\n  margin-inline-start: 5px !important;\n  color: rgba(221, 145, 30, 0.88) !important;\n}\n\n.ant-progress-show-info .ant-progress-outer {\n  margin-right: calc(-2em + 20px) !important;\n  padding-right: calc(2em - 20px) !important;\n}\n\n.hamyarBioritm .ant-progress-inner .ant-progress-bg {\n  height: 25px !important;\n}\n\n.hamyarBioritm .ant-progress-text {\n  display: none;\n}\n\n.ant-input {\n  border: none !important;\n  max-height: 100px !important;\n}\n\n:where(.css-j5cnp7).ant-input:focus,\n:where(.css-j5cnp7).ant-input:focus-within {\n  border: none !important;\n  box-shadow: none !important;\n}\n\n#fileInput {\n  display: none;\n}\n\n.ant-slider-handle.ant-slider-handle-1 {\n  display: none !important;\n}\n\n.ant-slider-track {\n  left: 0px !important;\n}\n\ninput[type="number"] {\n  direction: ltr !important;\n}\n\n.ant-input-number-input {\n  text-align: center !important;\n  color: #7444BC !important;\n}\n\n.ant-input-number {\n  width: 100% !important;\n}\n\ninput[type="tel"] {\n  direction: ltr !important;\n}\n.picker-dark .rmc-picker-mask {\n background-image: \n        -webkit-gradient(linear, left top, left bottom, from(hsla(0, 0%, 50%, 0.3)), to(hsla(0, 0%, 50%, 0.1))),\n        -webkit-gradient(linear, left bottom, left top, from(hsla(0, 0%, 50%, 0.3)), to(hsla(0, 0%, 50%, 0.1))) !important;\n    background-image: \n        linear-gradient(180deg, hsla(0, 0%, 50%, 0.3), hsla(0, 0%, 50%, 0.1)),\n        linear-gradient(0deg, hsla(0, 0%, 50%, 0.3), hsla(0, 0%, 50%, 0.1)) !important;\n    background-position: top, bottom !important;\n}\n.input-dark .ant-input {\n  background-color: #212121 !important;\n  color: #ffffff!important;\n}\n\n[id^="inputMobile"],\n[id^="inputMobile"]:hover,\n[id^="inputMobile"]:focus,\n[id^="inputMobile"]:active,\n[id^="inputMobile"]:disabled,\n[id^="inputMobile"]:checked,\n[id^="inputMobile"]:visited,\n[id^="inputMobile"]:required,\n[id^="inputMobile"]:valid,\n[id^="inputMobile"]:invalid,\n[id^="inputMobile"]:read-only,\n[id^="inputMobile"]:empty,\n[id^="inputMobile"]:not(:placeholder-shown),\n[id^="inputMobile"]:first-child,\n[id^="inputMobile"]:last-child,\n[id^="inputMobile"]::placeholder,\n[id^="inputMobile"]:focus-within {\n  border: none !important;\n  background-color: transparent !important;\n  width: 100% !important;\n  box-sizing: border-box;\n  outline: none !important;\n  box-shadow: none !important;\n}\n\n.progress_man_peragnency .ant-progress-inner{\n  width: 160px !important;\n  height: 160px !important;\n}\n.progress_man_peragnencyM .ant-progress-inner{\n  width: 110px !important;\n  height: 110px !important;\n}\n@keyframes bounce {\n  0% {\n    transform: translateY(0); /* \u0634\u0631\u0648\u0639 \u062f\u0631 \u0645\u0648\u0642\u0639\u06cc\u062a \u0627\u0648\u0644\u06cc\u0647 */\n  }\n  60% {\n    transform: translateY(-15px); /* \u067e\u0631\u0634 \u0628\u0647 \u0628\u0627\u0644\u0627 */\n  }\n    90% {\n    transform: translateY(0); /* \u067e\u0627\u06cc\u0627\u0646 \u062f\u0631 \u0645\u0648\u0642\u0639\u06cc\u062a \u0627\u0648\u0644\u06cc\u0647 */\n  }\n  100% {\n    transform: translateY(0); /* \u067e\u0627\u06cc\u0627\u0646 \u062f\u0631 \u0645\u0648\u0642\u0639\u06cc\u062a \u0627\u0648\u0644\u06cc\u0647 */\n  }\n}\n.bounce {\n  display: inline-block;\n  animation: bounce 1s ease infinite; /* \u0627\u0646\u06cc\u0645\u06cc\u0634\u0646 1 \u062b\u0627\u0646\u06cc\u0647\u200c\u0627\u06cc \u0648 \u062a\u06a9\u0631\u0627\u0631 \u0628\u06cc\u200c\u0646\u0647\u0627\u06cc\u062a */\n}    @keyframes pulse-animation {\n      0% {\n        transform: scale(1);\n        opacity: 1;\n      }\n      50% {\n        transform: scale(1.1);\n        opacity: 0.8;\n      }\n      100% {\n        transform: scale(1);\n        opacity: 1;\n      }\n    }\n    .pulse-animation {\n  display: inline-block;\n  animation: pulse-animation 1s ease infinite; /* \u0627\u0646\u06cc\u0645\u06cc\u0634\u0646 1 \u062b\u0627\u0646\u06cc\u0647\u200c\u0627\u06cc \u0648 \u062a\u06a9\u0631\u0627\u0631 \u0628\u06cc\u200c\u0646\u0647\u0627\u06cc\u062a */\n}\n.animashen {\n            display: inline-block;\n            animation: pulse 1s infinite;\n        }\n\n        @keyframes pulse {\n            0% {\n                transform: scale(1);\n                opacity: 1;\n            }\n            50% {\n                transform: scale(1.1);\n                opacity: 1;\n            }\n            100% {\n                transform: scale(1);\n                opacity: 1;\n            }\n        }\n\n@keyframes zoom {\n  0% {\n    transform: scale(1.2); /* \u0634\u0631\u0648\u0639 \u0627\u0632 \u0635\u0641\u0631 */\n    opacity: 0;         /* \u0645\u062e\u0641\u06cc \u0628\u0648\u062f\u0646 \u062f\u0631 \u0627\u0628\u062a\u062f\u0627 */\n  }\n  50% {\n    opacity: 1;           /* \u0638\u0627\u0647\u0631 \u0634\u062f\u0646 \u06a9\u0627\u0645\u0644 */\n  }\n  80% {\n    transform: scale(0.9); /* \u0632\u0648\u0645 \u0628\u0647 \u0627\u0646\u062f\u0627\u0632\u0647 1.5 */\n    opacity: 1;           /* \u0638\u0627\u0647\u0631 \u0634\u062f\u0646 \u06a9\u0627\u0645\u0644 */\n  }\n    100% {\n    transform: scale(1); /* \u0632\u0648\u0645 \u0628\u0647 \u0627\u0646\u062f\u0627\u0632\u0647 1.5 */\n    opacity: 1;           /* \u0638\u0627\u0647\u0631 \u0634\u062f\u0646 \u06a9\u0627\u0645\u0644 */\n  }\n}\n\n.zoom-animation {\n  animation: zoom 0.5s ease-out forwards;\n}\n\n'
            }
          >
            <AntdConfigProvider
              {...antdConfigProviderProps}
              borderRadius={
                antdConfigProviderProps &&
                "borderRadius" in antdConfigProviderProps
                  ? antdConfigProviderProps.borderRadius!
                  : 6
              }
              colorBgBase={
                antdConfigProviderProps &&
                "colorBgBase" in antdConfigProviderProps
                  ? antdConfigProviderProps.colorBgBase!
                  : "#ffffff"
              }
              colorError={
                antdConfigProviderProps &&
                "colorError" in antdConfigProviderProps
                  ? antdConfigProviderProps.colorError!
                  : "#ff4d4f"
              }
              colorInfo={
                antdConfigProviderProps &&
                "colorInfo" in antdConfigProviderProps
                  ? antdConfigProviderProps.colorInfo!
                  : "#1677ff"
              }
              colorPrimary={
                antdConfigProviderProps &&
                "colorPrimary" in antdConfigProviderProps
                  ? antdConfigProviderProps.colorPrimary!
                  : "#7444BC"
              }
              colorSuccess={
                antdConfigProviderProps &&
                "colorSuccess" in antdConfigProviderProps
                  ? antdConfigProviderProps.colorSuccess!
                  : "#52c41a"
              }
              colorWarning={
                antdConfigProviderProps &&
                "colorWarning" in antdConfigProviderProps
                  ? antdConfigProviderProps.colorWarning!
                  : "#faad14"
              }
              controlHeight={
                antdConfigProviderProps &&
                "controlHeight" in antdConfigProviderProps
                  ? antdConfigProviderProps.controlHeight!
                  : 32
              }
              defaultDark={
                antdConfigProviderProps &&
                "defaultDark" in antdConfigProviderProps
                  ? antdConfigProviderProps.defaultDark!
                  : false
              }
              lineWidth={
                antdConfigProviderProps &&
                "lineWidth" in antdConfigProviderProps
                  ? antdConfigProviderProps.lineWidth!
                  : 1
              }
              loadingText={
                antdConfigProviderProps &&
                "loadingText" in antdConfigProviderProps
                  ? antdConfigProviderProps.loadingText!
                  : "."
              }
              removeLoading={
                antdConfigProviderProps &&
                "removeLoading" in antdConfigProviderProps
                  ? antdConfigProviderProps.removeLoading!
                  : false
              }
              sizeStep={
                antdConfigProviderProps && "sizeStep" in antdConfigProviderProps
                  ? antdConfigProviderProps.sizeStep!
                  : 4
              }
              sizeUnit={
                antdConfigProviderProps && "sizeUnit" in antdConfigProviderProps
                  ? antdConfigProviderProps.sizeUnit!
                  : 4
              }
              themeStyles={
                antdConfigProviderProps &&
                "themeStyles" in antdConfigProviderProps
                  ? antdConfigProviderProps.themeStyles!
                  : true
                  ? {
                      fontFamily: "Roboto",
                      fontSize: "14px",
                      fontWeight: "normal",
                      lineHeight: "1.5",
                      color: "#535353",
                      letterSpacing: "normal"
                    }
                  : undefined
              }
              wireframe={
                antdConfigProviderProps &&
                "wireframe" in antdConfigProviderProps
                  ? antdConfigProviderProps.wireframe!
                  : false
              }
            >
              <CmsCredentialsProvider
                {...cmsCredentialsProviderProps}
                databaseId={
                  cmsCredentialsProviderProps &&
                  "databaseId" in cmsCredentialsProviderProps
                    ? cmsCredentialsProviderProps.databaseId!
                    : undefined
                }
                databaseToken={
                  cmsCredentialsProviderProps &&
                  "databaseToken" in cmsCredentialsProviderProps
                    ? cmsCredentialsProviderProps.databaseToken!
                    : undefined
                }
                host={
                  cmsCredentialsProviderProps &&
                  "host" in cmsCredentialsProviderProps
                    ? cmsCredentialsProviderProps.host!
                    : "https://data.plasmic.app"
                }
                locale={
                  cmsCredentialsProviderProps &&
                  "locale" in cmsCredentialsProviderProps
                    ? cmsCredentialsProviderProps.locale!
                    : undefined
                }
              >
                <ParallaxProviderWrapper
                  {...parallaxProviderWrapperProps}
                  scrollAxis={
                    parallaxProviderWrapperProps &&
                    "scrollAxis" in parallaxProviderWrapperProps
                      ? parallaxProviderWrapperProps.scrollAxis!
                      : undefined
                  }
                >
                  {children}
                </ParallaxProviderWrapper>
              </CmsCredentialsProvider>
            </AntdConfigProvider>
          </EmbedCss>
        </Splunk>
      </GrowthBook>
    </Fragment>
  );
}
