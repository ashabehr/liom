// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: suVPi77vb6vv9K5rYJwyxC
// Component: sERPxqzz7wf3

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import { ApiRequest } from "@/fragment/components/api-request"; // plasmic-import: GNNZ3K7lFVGd/codeComponent
import Button from "../../Button"; // plasmic-import: ErJEaLhimwjN/component

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "../todo_mvc_app/plasmic.module.css"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/projectcss
import sty from "./PlasmicSelfSmsPage.module.css"; // plasmic-import: sERPxqzz7wf3/css

import CheckSvgIcon from "../todo_mvc_app/icons/PlasmicIcon__CheckSvg"; // plasmic-import: rMWZc9fpVIkj/icon
import Icon115Icon from "./icons/PlasmicIcon__Icon115"; // plasmic-import: _FBld6r6XP7e/icon

createPlasmicElementProxy;

export type PlasmicSelfSmsPage__VariantMembers = {};
export type PlasmicSelfSmsPage__VariantsArgs = {};
type VariantPropType = keyof PlasmicSelfSmsPage__VariantsArgs;
export const PlasmicSelfSmsPage__VariantProps = new Array<VariantPropType>();

export type PlasmicSelfSmsPage__ArgsType = {};
type ArgPropType = keyof PlasmicSelfSmsPage__ArgsType;
export const PlasmicSelfSmsPage__ArgProps = new Array<ArgPropType>();

export type PlasmicSelfSmsPage__OverridesType = {
  root?: Flex__<"div">;
  getSub?: Flex__<typeof ApiRequest>;
  button?: Flex__<typeof Button>;
  img?: Flex__<typeof PlasmicImg__>;
};

export interface DefaultSelfSmsPageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicSelfSmsPage__RenderFunc(props: {
  variants: PlasmicSelfSmsPage__VariantsArgs;
  args: PlasmicSelfSmsPage__ArgsType;
  overrides: PlasmicSelfSmsPage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "button.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "getSub.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "getSub.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "getSub.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__s7Ms7)}>
            <ApiRequest
              data-plasmic-name={"getSub"}
              data-plasmic-override={overrides.getSub}
              body={(() => {
                try {
                  return {
                    Authorization: $ctx.query.token,
                    sub: "selfHamyarSmsSubStatus"
                  };
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
              className={classNames("__wab_instance", sty.getSub)}
              errorDisplay={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__jd33
                  )}
                >
                  {"Error fetching data"}
                </div>
              }
              loadingDisplay={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mTyaj
                  )}
                >
                  {"Loading..."}
                </div>
              }
              method={"POST"}
              onError={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, ["getSub", "error"]).apply(
                  null,
                  eventArgs
                );
              }}
              onLoading={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, ["getSub", "loading"]).apply(
                  null,
                  eventArgs
                );
              }}
              onSuccess={async (...eventArgs: any) => {
                generateStateOnChangeProp($state, ["getSub", "data"]).apply(
                  null,
                  eventArgs
                );
              }}
              url={"https://n8n.staas.ir/webhook-test/sub"}
            />

            <div className={classNames(projectcss.all, sty.freeBox___05HGg)}>
              <div className={classNames(projectcss.all, sty.freeBox__kbF6)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qbI5J
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        " \u0622\u06af\u0627\u0647\u06cc \u0627\u0632 \u0686\u0631\u062e\u0647 \u0642\u0627\u0639\u062f\u06af\u06cc\u200c\u0627\u062a \u0645\u06cc\u062a\u0648\u0646\u0647 \u062a\u0623\u062b\u06cc\u0631\u0627\u062a \u0645\u062b\u0628\u062a\u06cc \u0631\u0648\u06cc \u0633\u0644\u0627\u0645\u062a\u062a \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u0647."
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {
                        " \u0628\u062f\u0646\u062a \u0628\u0627\u0647\u0627\u062a \u062d\u0631\u0641 \u0645\u06cc\u0632\u0646\u0647"
                      }
                    </span>
                    <React.Fragment>
                      {
                        "\u061b \u0628\u0627 \u06af\u0648\u0634 \u062f\u0627\u062f\u0646 \u0628\u0647\u0634\u060c "
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"\u0633\u0627\u0644\u0645\u200c\u062a\u0631"}
                    </span>
                    <React.Fragment>{" \u0648 "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"\u0634\u0627\u062f\u062a\u0631"}
                    </span>
                    <React.Fragment>
                      {" \u0628\u0627\u0634.\n\u0628\u0627 "}
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{
                        fontWeight: 700,
                        color: "var(--token-55cSeNPovQFh)"
                      }}
                    >
                      {
                        "\u00a0\u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u0627\u0631\u0633\u0627\u0644 \u067e\u06cc\u0627\u0645\u06a9 \u0628\u0647 \u062e\u0648\u062f"
                      }
                    </span>
                    <React.Fragment>
                      {
                        "\u00a0 \u0645\u06cc\u062a\u0648\u0646\u06cc \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0647\u0627\u06cc \u062f\u0648\u0631\u062a \u0631\u0648 \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u06cc \u0648  \u062f\u0631 \u062c\u0631\u06cc\u0627\u0646 \u0648\u0636\u0639\u06cc\u062a \u0686\u0631\u062e\u0647 \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627\u0634\u06cc.\n\n\u0628\u0647 \u0637\u0648\u0631 \u06a9\u0644\u06cc \u0686\u0631\u062e\u0647 \u0642\u0627\u0639\u062f\u06af\u06cc \u0628\u0647 "
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 500 }}
                    >
                      {"\u0686\u0647\u0627\u0631"}
                    </span>
                    <React.Fragment>
                      {
                        " \u0645\u0631\u062d\u0644\u0647 \u062a\u0642\u0633\u06cc\u0645 \u0645\u06cc\u200c\u0634\u0648\u062f:"
                      }
                    </React.Fragment>
                  </React.Fragment>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__vw2Q)}>
                  <ul
                    className={classNames(
                      projectcss.all,
                      projectcss.ul,
                      sty.ul__p75F1
                    )}
                  >
                    <li
                      className={classNames(
                        projectcss.all,
                        projectcss.li,
                        sty.li__cvkGu
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__uYnqz
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dBsYg
                          )}
                        >
                          <React.Fragment>
                            <React.Fragment>{""}</React.Fragment>
                            {
                              <ul
                                className={classNames(
                                  projectcss.all,
                                  projectcss.ul,
                                  sty.ul__eceL4
                                )}
                              >
                                <li
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.li,
                                    projectcss.__wab_text,
                                    sty.li__iqCDt
                                  )}
                                >
                                  <React.Fragment>
                                    <span
                                      className={
                                        "plasmic_default__all plasmic_default__span"
                                      }
                                      style={{ fontWeight: 500 }}
                                    >
                                      {"\u0642\u0627\u0639\u062f\u06af\u06cc"}
                                    </span>
                                    <React.Fragment>
                                      {
                                        ": \u0632\u0645\u0627\u0646 \u0627\u0633\u062a\u0631\u0627\u062d\u062a \u0648 \u062a\u063a\u0630\u06cc\u0647 \u0645\u0646\u0627\u0633\u0628"
                                      }
                                    </React.Fragment>
                                  </React.Fragment>
                                </li>
                              </ul>
                            }
                            <React.Fragment>{""}</React.Fragment>
                          </React.Fragment>
                        </div>
                      </div>
                    </li>
                  </ul>
                  <ul
                    className={classNames(
                      projectcss.all,
                      projectcss.ul,
                      sty.ul__hskj
                    )}
                  >
                    <li
                      className={classNames(
                        projectcss.all,
                        projectcss.li,
                        sty.li__wjBi6
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__i1Opm
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fq8G9
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 500 }}
                            >
                              {
                                "\u0641\u0648\u0644\u06cc\u06a9\u0648\u0644\u0627\u0631"
                              }
                            </span>
                            <React.Fragment>
                              {
                                ": \u062f\u0648\u0631\u0647\u200c\u0627\u06cc \u0628\u0631\u0627\u06cc \u0634\u0631\u0648\u0639 \u0641\u0639\u0627\u0644\u06cc\u062a\u200c\u0647\u0627\u06cc  \u0648 \u067e\u0631\u0627\u0646\u0631\u0698\u06cc"
                              }
                            </React.Fragment>
                          </React.Fragment>
                        </div>
                      </div>
                    </li>
                  </ul>
                  <ul
                    className={classNames(
                      projectcss.all,
                      projectcss.ul,
                      sty.ul__rrg2B
                    )}
                  >
                    <li
                      className={classNames(
                        projectcss.all,
                        projectcss.li,
                        sty.li__k60EL
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___5In2E
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__or0X1
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 500 }}
                            >
                              {
                                "\u062a\u062e\u0645\u06a9\u200c\u06af\u0630\u0627\u0631\u06cc"
                              }
                            </span>
                            <React.Fragment>
                              {
                                ": \u0627\u0648\u062c \u0627\u0646\u0631\u0698\u06cc\u061b \u0645\u0646\u0627\u0633\u0628 \u0628\u0631\u0627\u06cc \u0641\u0639\u0627\u0644\u06cc\u062a\u200c\u0647\u0627\u06cc \u0627\u062c\u062a\u0645\u0627\u0639\u06cc \u0648 \u062a\u0645\u0631\u06cc\u0646 \u0634\u062f\u06cc\u062f"
                              }
                            </React.Fragment>
                          </React.Fragment>
                        </div>
                      </div>
                    </li>
                  </ul>
                  <ul
                    className={classNames(
                      projectcss.all,
                      projectcss.ul,
                      sty.ul__bNpGs
                    )}
                  >
                    <li
                      className={classNames(
                        projectcss.all,
                        projectcss.li,
                        sty.li__ecUcs
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___4WxZ1
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kz9ZQ
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ fontWeight: 500 }}
                            >
                              {"\u0644\u0648\u062a\u0626\u0627\u0644"}
                            </span>
                            <React.Fragment>
                              {
                                ": \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0627\u0633\u062a\u0631\u0627\u062d\u062a\u061b \u0648\u0631\u0632\u0634 \u0633\u0628\u06a9 \u0648 \u062a\u063a\u0630\u06cc\u0647 \u0645\u0642\u0648\u06cc"
                              }
                            </React.Fragment>
                          </React.Fragment>
                        </div>
                      </div>
                    </li>
                  </ul>
                </div>
                <Button
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames("__wab_instance", sty.button)}
                  color={generateStateValueProp($state, ["button", "color"])}
                  onColorChange={async (...eventArgs: any) => {
                    ((...eventArgs) => {
                      generateStateOnChangeProp($state, ["button", "color"])(
                        eventArgs[0]
                      );
                    }).apply(null, eventArgs);

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  size={"compact"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yTdjn
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {
                          "\u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u067e\u06cc\u0627\u0645 \u0628\u0647 \u062e\u0648\u062f"
                        }
                      </span>
                    </React.Fragment>
                  </div>
                </Button>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qXZx
                  )}
                >
                  {
                    "\u0686\u0647 \u067e\u06cc\u0627\u0645 \u0647\u0627\u06cc\u06cc \u0628\u0631\u0627\u0645 \u0627\u0631\u0633\u0627\u0644 \u0645\u06cc\u0634\u0647\u061f"
                  }
                </div>
                <PlasmicImg__
                  data-plasmic-name={"img"}
                  data-plasmic-override={overrides.img}
                  alt={""}
                  className={classNames(sty.img)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/liom_hamyar/images/image78.svg",
                    fullWidth: 720,
                    fullHeight: 720,
                    aspectRatio: 1
                  }}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "getSub", "button", "img"],
  getSub: ["getSub"],
  button: ["button"],
  img: ["img"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  getSub: typeof ApiRequest;
  button: typeof Button;
  img: typeof PlasmicImg__;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicSelfSmsPage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicSelfSmsPage__VariantsArgs;
    args?: PlasmicSelfSmsPage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicSelfSmsPage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicSelfSmsPage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicSelfSmsPage__ArgProps,
          internalVariantPropNames: PlasmicSelfSmsPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicSelfSmsPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSelfSmsPage";
  } else {
    func.displayName = `PlasmicSelfSmsPage.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "suVPi77vb6vv9K5rYJwyxC"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicSelfSmsPage = Object.assign(
  // Top-level PlasmicSelfSmsPage renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    getSub: makeNodeComponent("getSub"),
    button: makeNodeComponent("button"),
    img: makeNodeComponent("img"),

    // Metadata about props expected for PlasmicSelfSmsPage
    internalVariantProps: PlasmicSelfSmsPage__VariantProps,
    internalArgProps: PlasmicSelfSmsPage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicSelfSmsPage;
/* prettier-ignore-end */
