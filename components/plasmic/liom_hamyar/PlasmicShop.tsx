// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: suVPi77vb6vv9K5rYJwyxC
// Component: aqM8xdUvFVmZ

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import HeaderLiom from "../../HeaderLiom"; // plasmic-import: wNUwxS5tO1GX/component
import { Timer } from "@plasmicpkgs/plasmic-basic-components";
import Star from "../../Star"; // plasmic-import: i69c2Ujsm_H6/component
import { AntdSingleCollapse } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { singleCollapseHelpers as AntdSingleCollapse_Helpers } from "@plasmicpkgs/antd5/skinny/registerCollapse";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "../todo_mvc_app/plasmic.module.css"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/projectcss
import sty from "./PlasmicShop.module.css"; // plasmic-import: aqM8xdUvFVmZ/css

import Icon141Icon from "./icons/PlasmicIcon__Icon141"; // plasmic-import: AP97-wr5VCl4/icon
import Icon142Icon from "./icons/PlasmicIcon__Icon142"; // plasmic-import: SJsM-_NDX4Yl/icon

createPlasmicElementProxy;

export type PlasmicShop__VariantMembers = {};
export type PlasmicShop__VariantsArgs = {};
type VariantPropType = keyof PlasmicShop__VariantsArgs;
export const PlasmicShop__VariantProps = new Array<VariantPropType>();

export type PlasmicShop__ArgsType = {};
type ArgPropType = keyof PlasmicShop__ArgsType;
export const PlasmicShop__ArgProps = new Array<ArgPropType>();

export type PlasmicShop__OverridesType = {
  root?: Flex__<"div">;
  section?: Flex__<"section">;
  headerLiom?: Flex__<typeof HeaderLiom>;
  timer?: Flex__<typeof Timer>;
  star?: Flex__<typeof Star>;
  collapseMother?: Flex__<typeof AntdSingleCollapse>;
};

export interface DefaultShopProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicShop__RenderFunc(props: {
  variants: PlasmicShop__VariantsArgs;
  args: PlasmicShop__ArgsType;
  overrides: PlasmicShop__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "name",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "discountBox",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "facilities",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc",
            Special: true
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          }
        ]
      },
      {
        path: "comments",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            rate: 4,
            text: "\u0633\u0628\u06a9 \u0632\u0646\u062f\u06af\u06cc\u062a \u0631\u0648 \u0627\u0635\u0644\u0627\u062d \u0645\u06cc\u06a9\u0646\u0645 \u0648 \u0628\u0627 \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0645\u0646\u0627\u0633\u0628 \u06a9\u0645\u06a9\u062a \u0645\u06cc\u06a9\u0646\u0645 \u06a9\u0647 \u062a\u0646\u0628\u0644\u06cc \u062a\u062e\u0645\u062f\u0627\u0646\u062a \u06a9\u0645 \u06a9\u0645 \u06a9\u0646\u062a\u0631\u0644 \u0648 \u0631\u0641\u0639 \u0628\u0634\u0647",
            name: "khshshmxx"
          },
          {
            rate: 4,
            text: "\u0633\u0628\u06a9 \u0632\u0646\u062f\u06af\u06cc\u062a \u0631\u0648 \u0627\u0635\u0644\u0627\u062d \u0645\u06cc\u06a9\u0646\u0645 \u0648 \u0628\u0627 \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0645\u0646\u0627\u0633\u0628 \u06a9\u0645\u06a9\u062a \u0645\u06cc\u06a9\u0646\u0645 \u06a9\u0647 \u062a\u0646\u0628\u0644\u06cc \u062a\u062e\u0645\u062f\u0627\u0646\u062a \u06a9\u0645 \u06a9\u0645 \u06a9\u0646\u062a\u0631\u0644 \u0648 \u0631\u0641\u0639 \u0628\u0634\u0647",
            name: "khshshmxx"
          },
          {
            rate: 5,
            text: "\u0633\u0628\u06a9 \u0632\u0646\u062f\u06af\u06cc\u062a \u0631\u0648 \u0627\u0635\u0644\u0627\u062d \u0645\u06cc\u06a9\u0646\u0645 \u0648 \u0628\u0627 \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0645\u0646\u0627\u0633\u0628 \u06a9\u0645\u06a9\u062a \u0645\u06cc\u06a9\u0646\u0645 \u06a9\u0647 \u062a\u0646\u0628\u0644\u06cc \u062a\u062e\u0645\u062f\u0627\u0646\u062a \u06a9\u0645 \u06a9\u0645 \u06a9\u0646\u062a\u0631\u0644 \u0648 \u0631\u0641\u0639 \u0628\u0634\u0647",
            name: "khshshmxx"
          },
          {
            rate: 4,
            text: "\u0633\u0628\u06a9 \u0632\u0646\u062f\u06af\u06cc\u062a \u0631\u0648 \u0627\u0635\u0644\u0627\u062d \u0645\u06cc\u06a9\u0646\u0645 \u0648 \u0628\u0627 \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0645\u0646\u0627\u0633\u0628 \u06a9\u0645\u06a9\u062a \u0645\u06cc\u06a9\u0646\u0645 \u06a9\u0647 \u062a\u0646\u0628\u0644\u06cc \u062a\u062e\u0645\u062f\u0627\u0646\u062a \u06a9\u0645 \u06a9\u0645 \u06a9\u0646\u062a\u0631\u0644 \u0648 \u0631\u0641\u0639 \u0628\u0634\u0647",
            name: "khshshmxx"
          }
        ]
      },
      {
        path: "index",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "useful",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc",
            Special: true
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          }
        ]
      },
      {
        path: "collapseMother[].open",
        type: "private",
        variableType: "boolean",

        onMutate: generateOnMutateForSpec("open", AntdSingleCollapse_Helpers)
      },
      {
        path: "question",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc",
            Special: true
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          }
        ]
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            {(() => {
              try {
                return true;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return true;
                }
                throw e;
              }
            })() ? (
              <HeaderLiom
                data-plasmic-name={"headerLiom"}
                data-plasmic-override={overrides.headerLiom}
                className={classNames("__wab_instance", sty.headerLiom)}
              />
            ) : null}
          </section>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__gf9Nm)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__u2M5M)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__vKrv)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/liom_hamyar/images/image70.svg",
                  fullWidth: 457,
                  fullHeight: 172,
                  aspectRatio: 2.656977
                }}
              />

              <div className={classNames(projectcss.all, sty.freeBox__ugHiK)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__c84PF)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__e0Wqm)}
                  >
                    <Icon141Icon
                      className={classNames(projectcss.all, sty.svg__jpK1)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tvOdf
                      )}
                    >
                      {
                        "\u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u0648\u06cc\u0698\u0647\r"
                      }
                    </div>
                  </Stack__>
                  <Stack__
                    as={"ul"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.ul,
                      sty.ul__n2TEt
                    )}
                  >
                    {(_par =>
                      !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                      (() => {
                        try {
                          return $state.facilities;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    ).map((__plasmic_item_0, __plasmic_idx_0) => {
                      const currentItem = __plasmic_item_0;
                      const currentIndex = __plasmic_idx_0;
                      return (
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            sty.li__slFfN
                          )}
                          key={currentIndex}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__llvki
                            )}
                            style={(() => {
                              try {
                                return {
                                  "border-bottom":
                                    currentItem.Special == true
                                      ? "solid 1px #e0e0e0"
                                      : "none"
                                };
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__otfMt
                              )}
                            >
                              {
                                "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9\r"
                              }
                            </div>
                            <Icon142Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___6RjT
                              )}
                              role={"img"}
                            />
                          </Stack__>
                        </li>
                      );
                    })}
                  </Stack__>
                </Stack__>
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.freeBox__wvtzn,
                "parent"
              )}
              overflow={``}
              position={``}
            >
              <div className={classNames(projectcss.all, sty.freeBox__i1DH)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__neu21
                  )}
                >
                  {"\u0631\u0636\u0627\u06cc\u062a \u0634\u0645\u0627:"}
                </div>
                <Timer
                  data-plasmic-name={"timer"}
                  data-plasmic-override={overrides.timer}
                  className={classNames("__wab_instance", sty.timer)}
                  intervalSeconds={5}
                  isRunning={true}
                  onTick={async () => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                if ($state.index < $state.comments.length - 1)
                                  $state.index++;
                                else $state.index = 0;
                                var comments =
                                  document.getElementById("commentBox");
                                comments.classList.remove("slide-in");
                                void comments.offsetWidth;
                                return comments.classList.add("slide-in");
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                  runWhileEditing={true}
                />
              </div>
              {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                (() => {
                  try {
                    return $state.comments[$state.index];
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()
              ).map((__plasmic_item_0, __plasmic_idx_0) => {
                const commentItem = __plasmic_item_0;
                const commentIndex = __plasmic_idx_0;
                return (
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.freeBox__zyTzf,
                      "slide-in"
                    )}
                    id={"commentBox"}
                    key={commentIndex}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__kdyi8)}
                    >
                      {(_par =>
                        !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                        (() => {
                          try {
                            return [5, 4, 3, 2, 1];
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return [];
                            }
                            throw e;
                          }
                        })()
                      ).map((__plasmic_item_1, __plasmic_idx_1) => {
                        const currentItem = __plasmic_item_1;
                        const currentIndex = __plasmic_idx_1;
                        return (
                          <Star
                            data-plasmic-name={"star"}
                            data-plasmic-override={overrides.star}
                            action={(() => {
                              try {
                                return currentItem <= commentItem.rate;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return [];
                                }
                                throw e;
                              }
                            })()}
                            className={classNames("__wab_instance", sty.star)}
                            key={currentIndex}
                          />
                        );
                      })}
                    </Stack__>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__gjtvL)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hxyvq
                        )}
                      >
                        <React.Fragment>
                          {(() => {
                            try {
                              return commentItem.text;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vUhXl
                        )}
                      >
                        <React.Fragment>
                          {(() => {
                            try {
                              return commentItem.name;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return "";
                              }
                              throw e;
                            }
                          })()}
                        </React.Fragment>
                      </div>
                    </div>
                  </Stack__>
                );
              })}
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.freeBox__pkOYm,
                "parent"
              )}
              overflow={``}
              position={``}
            >
              <div className={classNames(projectcss.all, sty.freeBox__nmKiv)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3JvTq
                  )}
                >
                  {
                    "\u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u0627\u06a9\u0627\u0646\u062a \u0648\u06cc\u0698\u0647 \u0686\u0647 \u0633\u0648\u062f\u06cc \u0628\u0631\u0627\u0645 \u062f\u0627\u0631\u0647\u061f\r"
                  }
                </div>
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___6YPir)}
              >
                <Stack__
                  as={"ul"}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    projectcss.ul,
                    sty.ul___3JJrw
                  )}
                >
                  {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                    (() => {
                      try {
                        return $state.useful;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  ).map((__plasmic_item_0, __plasmic_idx_0) => {
                    const currentItem = __plasmic_item_0;
                    const currentIndex = __plasmic_idx_0;
                    return (
                      <li
                        className={classNames(
                          projectcss.all,
                          projectcss.li,
                          sty.li__r05
                        )}
                        key={currentIndex}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__dvxYz
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yCFh
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return currentItem.title;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7Vl3E
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return currentItem.text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </li>
                    );
                  })}
                </Stack__>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.freeBox__diiUf,
                "parent"
              )}
              overflow={``}
              position={``}
            >
              <div className={classNames(projectcss.all, sty.freeBox__abn9W)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__suykh
                  )}
                >
                  {
                    "\u0633\u0648\u0627\u0644\u0627\u062a \u0645\u062a\u062f\u0627\u0648\u0644"
                  }
                </div>
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__sknCg)}
              >
                {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                  (() => {
                    try {
                      return $state.question;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                ).map((__plasmic_item_0, __plasmic_idx_0) => {
                  const currentItem = __plasmic_item_0;
                  const currentIndex = __plasmic_idx_0;
                  return (() => {
                    const child$Props = {
                      bordered: true,
                      className: classNames(
                        "__wab_instance",
                        sty.collapseMother
                      ),
                      expandIcon: (
                        <React.Fragment>
                          {(() => {
                            try {
                              return !$state.collapseMother[currentIndex].open;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return true;
                              }
                              throw e;
                            }
                          })() ? (
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img__eBsyD)}
                              displayHeight={"auto"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"15px"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/liom_hamyar/images/image32.svg",
                                fullWidth: 16,
                                fullHeight: 16,
                                aspectRatio: 1
                              }}
                            />
                          ) : null}
                          {(() => {
                            try {
                              return $state.collapseMother[currentIndex].open;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return true;
                              }
                              throw e;
                            }
                          })() ? (
                            <PlasmicImg__
                              alt={""}
                              className={classNames(sty.img___4R17Y)}
                              displayHeight={"auto"}
                              displayMaxHeight={"none"}
                              displayMaxWidth={"100%"}
                              displayMinHeight={"0"}
                              displayMinWidth={"0"}
                              displayWidth={"25px"}
                              loading={"lazy"}
                              src={{
                                src: "/plasmic/liom_hamyar/images/image31.svg",
                                fullWidth: 16,
                                fullHeight: 16,
                                aspectRatio: 1
                              }}
                            />
                          ) : null}
                        </React.Fragment>
                      ),
                      expandIconPosition: "end",
                      ghost: true,
                      headerClass: classNames({
                        [sty["pcls_6gHfjq6Nj9km"]]: true
                      }),
                      key: currentIndex,
                      label2: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__fd2Xz
                          )}
                          style={(() => {
                            try {
                              return {
                                "border-bottom": $state.collapseMother[
                                  currentIndex
                                ].open
                                  ? "none"
                                  : "solid 1px #e0e0e0"
                              };
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()}
                        >
                          <React.Fragment>
                            {(() => {
                              try {
                                return currentItem.title;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "\u0635\u062d\u0628\u062a \u0628\u0627 \u0645\u0627\u062f\u0631";
                                }
                                throw e;
                              }
                            })()}
                          </React.Fragment>
                        </div>
                      ),
                      onChange: async (...eventArgs: any) => {
                        generateStateOnChangePropForCodeComponents(
                          $state,
                          "open",
                          ["collapseMother", __plasmic_idx_0, "open"],
                          AntdSingleCollapse_Helpers
                        ).apply(null, eventArgs);
                      },
                      open: generateStateValueProp($state, [
                        "collapseMother",
                        __plasmic_idx_0,
                        "open"
                      ]),
                      showArrow: true,
                      size: "small"
                    };
                    initializeCodeComponentStates(
                      $state,
                      [
                        {
                          name: "open",
                          plasmicStateName: "collapseMother[].open"
                        }
                      ],
                      [__plasmic_idx_0],
                      AntdSingleCollapse_Helpers ?? {},
                      child$Props
                    );
                    initializePlasmicStates(
                      $state,
                      [
                        {
                          name: "collapseMother[].open",
                          initFunc: ({ $props, $state, $queries }) => undefined
                        }
                      ],
                      [__plasmic_idx_0]
                    );
                    return (
                      <AntdSingleCollapse
                        data-plasmic-name={"collapseMother"}
                        data-plasmic-override={overrides.collapseMother}
                        {...child$Props}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aqd5C
                          )}
                        >
                          <React.Fragment>
                            {(() => {
                              try {
                                return currentItem.text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "";
                                }
                                throw e;
                              }
                            })()}
                          </React.Fragment>
                        </div>
                      </AntdSingleCollapse>
                    );
                  })();
                })}
              </Stack__>
            </Stack__>
          </Stack__>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "section", "headerLiom", "timer", "star", "collapseMother"],
  section: ["section", "headerLiom"],
  headerLiom: ["headerLiom"],
  timer: ["timer"],
  star: ["star"],
  collapseMother: ["collapseMother"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  section: "section";
  headerLiom: typeof HeaderLiom;
  timer: typeof Timer;
  star: typeof Star;
  collapseMother: typeof AntdSingleCollapse;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicShop__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicShop__VariantsArgs;
    args?: PlasmicShop__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicShop__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicShop__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicShop__ArgProps,
          internalVariantPropNames: PlasmicShop__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicShop__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicShop";
  } else {
    func.displayName = `PlasmicShop.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "suVPi77vb6vv9K5rYJwyxC"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicShop = Object.assign(
  // Top-level PlasmicShop renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    section: makeNodeComponent("section"),
    headerLiom: makeNodeComponent("headerLiom"),
    timer: makeNodeComponent("timer"),
    star: makeNodeComponent("star"),
    collapseMother: makeNodeComponent("collapseMother"),

    // Metadata about props expected for PlasmicShop
    internalVariantProps: PlasmicShop__VariantProps,
    internalArgProps: PlasmicShop__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicShop;
/* prettier-ignore-end */
