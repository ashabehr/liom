/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: suVPi77vb6vv9K5rYJwyxC
// Component: 7zVUeewG8mP-

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";

import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import { SideEffect } from "@plasmicpkgs/plasmic-basic-components";
import HeaderLiom from "../../HeaderLiom"; // plasmic-import: wNUwxS5tO1GX/component
import RadioGrop from "../../RadioGrop"; // plasmic-import: mcNKMbL_6N75/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal";
import { ApiRequest } from "@/fragment/components/api-request"; // plasmic-import: GNNZ3K7lFVGd/codeComponent
import Button from "../../Button"; // plasmic-import: ErJEaLhimwjN/component
import Dialog from "../../Dialog"; // plasmic-import: 6XHfwWx1PCn8/component
import Subscription from "../../Subscription"; // plasmic-import: RkqUeSl2AMb8/component
import { AntdInput } from "@plasmicpkgs/antd5/skinny/registerInput";
import { inputHelpers as AntdInput_Helpers } from "@plasmicpkgs/antd5/skinny/registerInput";
import MobileDialog from "../../MobileDialog"; // plasmic-import: h7ceF9lBthFF/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import { AntdModal } from "@plasmicpkgs/antd5/skinny/registerModal";
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/styleTokensProvider
import { _useStyleTokens as useStyleTokens_antd_5_hostless } from "../antd_5_hostless/PlasmicStyleTokensProvider"; // plasmic-import: ohDidvG9XsCeFumugENU3J/styleTokensProvider
import { _useStyleTokens as useStyleTokens_plasmic_rich_components } from "../plasmic_rich_components/PlasmicStyleTokensProvider"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/projectcss
import sty from "./PlasmicShop3.module.css"; // plasmic-import: 7zVUeewG8mP-/css

import XIcon from "./icons/PlasmicIcon__X"; // plasmic-import: oNIrT_jmAMSE/icon
import Icon214Icon from "./icons/PlasmicIcon__Icon214"; // plasmic-import: gfITgruAsqTI/icon
import CheckSvgIcon from "./icons/PlasmicIcon__CheckSvg"; // plasmic-import: rMWZc9fpVIkj/icon
import Icon12Icon from "./icons/PlasmicIcon__Icon12"; // plasmic-import: H9d2pdUvXD_1/icon
import Icon115Icon from "./icons/PlasmicIcon__Icon115"; // plasmic-import: _FBld6r6XP7e/icon
import Icon215Icon from "./icons/PlasmicIcon__Icon215"; // plasmic-import: VvAUQSc8cOrq/icon
import Icon232Icon from "./icons/PlasmicIcon__Icon232"; // plasmic-import: 9HSTZmkns_1_/icon

import { differenceInHours as __lib_dateFns__differenceInHours } from "date-fns";

createPlasmicElementProxy;

export type PlasmicShop3__VariantMembers = {};
export type PlasmicShop3__VariantsArgs = {};
type VariantPropType = keyof PlasmicShop3__VariantsArgs;
export const PlasmicShop3__VariantProps = new Array<VariantPropType>();

export type PlasmicShop3__ArgsType = {};
type ArgPropType = keyof PlasmicShop3__ArgsType;
export const PlasmicShop3__ArgProps = new Array<ArgPropType>();

export type PlasmicShop3__OverridesType = {
  root?: Flex__<"div">;
  sideEffect?: Flex__<typeof SideEffect>;
  headerLiom?: Flex__<typeof HeaderLiom>;
  getData?: Flex__<typeof ApiRequest>;
  button8?: Flex__<typeof Button>;
  button11?: Flex__<typeof Button>;
  button9?: Flex__<typeof Button>;
  p?: Flex__<"p">;
  dialog2?: Flex__<typeof Dialog>;
  subscription3?: Flex__<typeof Subscription>;
  button14?: Flex__<typeof Button>;
  button10?: Flex__<typeof Button>;
  input5?: Flex__<typeof AntdInput>;
  button13?: Flex__<typeof Button>;
  shopDialog?: Flex__<typeof ApiRequest>;
  mobileDialog?: Flex__<typeof MobileDialog>;
  embedHtml?: Flex__<typeof Embed>;
  info?: Flex__<typeof AntdModal>;
  button?: Flex__<typeof Button>;
};

export interface DefaultShop3Props {}

const $$ = {
  dateFns: {
    differenceInHours: __lib_dateFns__differenceInHours
  }
};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicShop3__RenderFunc(props: {
  variants: PlasmicShop3__VariantsArgs;
  args: PlasmicShop3__ArgsType;
  overrides: PlasmicShop3__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = _useGlobalVariants();

  const $globalActions = useGlobalActions?.();

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "name",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "discountBox",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "facilities",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc",
            Special: true
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          }
        ]
      },
      {
        path: "comments",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.getData.data.result.socialProofBox.items;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [
                  {
                    rate: 4,
                    text: "\u0633\u0628\u06a9 \u0632\u0646\u062f\u06af\u06cc\u062a \u0631\u0648 \u0627\u0635\u0644\u0627\u062d \u0645\u06cc\u06a9\u0646\u0645 \u0648 \u0628\u0627 \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0645\u0646\u0627\u0633\u0628 \u06a9\u0645\u06a9\u062a \u0645\u06cc\u06a9\u0646\u0645 \u06a9\u0647 \u062a\u0646\u0628\u0644\u06cc \u062a\u062e\u0645\u062f\u0627\u0646\u062a \u06a9\u0645 \u06a9\u0645 \u06a9\u0646\u062a\u0631\u0644 \u0648 \u0631\u0641\u0639 \u0628\u0634\u0647",
                    name: "khshshmxx"
                  },
                  {
                    rate: 4,
                    text: "\u0633\u0628\u06a9 \u0632\u0646\u062f\u06af\u06cc\u062a \u0631\u0648 \u0627\u0635\u0644\u0627\u062d \u0645\u06cc\u06a9\u0646\u0645 \u0648 \u0628\u0627 \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0645\u0646\u0627\u0633\u0628 \u06a9\u0645\u06a9\u062a \u0645\u06cc\u06a9\u0646\u0645 \u06a9\u0647 \u062a\u0646\u0628\u0644\u06cc \u062a\u062e\u0645\u062f\u0627\u0646\u062a \u06a9\u0645 \u06a9\u0645 \u06a9\u0646\u062a\u0631\u0644 \u0648 \u0631\u0641\u0639 \u0628\u0634\u0647",
                    name: "khshshmxx"
                  },
                  {
                    rate: 5,
                    text: "\u0633\u0628\u06a9 \u0632\u0646\u062f\u06af\u06cc\u062a \u0631\u0648 \u0627\u0635\u0644\u0627\u062d \u0645\u06cc\u06a9\u0646\u0645 \u0648 \u0628\u0627 \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0645\u0646\u0627\u0633\u0628 \u06a9\u0645\u06a9\u062a \u0645\u06cc\u06a9\u0646\u0645 \u06a9\u0647 \u062a\u0646\u0628\u0644\u06cc \u062a\u062e\u0645\u062f\u0627\u0646\u062a \u06a9\u0645 \u06a9\u0645 \u06a9\u0646\u062a\u0631\u0644 \u0648 \u0631\u0641\u0639 \u0628\u0634\u0647",
                    name: "khshshmxx"
                  },
                  {
                    rate: 4,
                    text: "\u0633\u0628\u06a9 \u0632\u0646\u062f\u06af\u06cc\u062a \u0631\u0648 \u0627\u0635\u0644\u0627\u062d \u0645\u06cc\u06a9\u0646\u0645 \u0648 \u0628\u0627 \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0645\u0646\u0627\u0633\u0628 \u06a9\u0645\u06a9\u062a \u0645\u06cc\u06a9\u0646\u0645 \u06a9\u0647 \u062a\u0646\u0628\u0644\u06cc \u062a\u062e\u0645\u062f\u0627\u0646\u062a \u06a9\u0645 \u06a9\u0645 \u06a9\u0646\u062a\u0631\u0644 \u0648 \u0631\u0641\u0639 \u0628\u0634\u0647",
                    name: "khshshmxx"
                  }
                ];
              }
              throw e;
            }
          })()
      },
      {
        path: "index",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "useful",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc",
            Special: true
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          }
        ]
      },
      {
        path: "question",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc",
            Special: true
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          },
          {
            title:
              "\u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u062f\u0648\u0631\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9",
            text: "\u062e\u0648\u062f\u062a \u0645\u0631\u0627\u0642\u0628 \u062e\u0648\u062f\u062a \u0628\u0627\u0634 . \u0645\u0627 \u0647\u0631 \u0645\u0627\u0647 \u0628\u0647\u062a \u0634\u0631\u0648\u0639 \u062f\u0648\u0631\u0647 \u067e\u0631\u06cc\u0648\u062f \u0648 pms \u0648 \u062a\u062e\u0645\u06a9 \u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639 \u0645\u06cc\u062f\u06cc\u0645 \u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u0641\u0631\u0627\u0645\u0648\u0634 \u0646\u06a9\u0646\u06cc"
          }
        ]
      },
      {
        path: "startX",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      },
      {
        path: "timer",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "getData.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "getData.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "getData.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "modalData",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({})
      },
      {
        path: "shopDialog.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "shopDialog.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "shopDialog.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "button8.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "dialog2.opendialog",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "subscription3[].clickitem",
        type: "private",
        variableType: "boolean"
      },
      {
        path: "subscription3[].title",
        type: "private",
        variableType: "text"
      },
      {
        path: "subscription3[].price",
        type: "private",
        variableType: "number"
      },
      {
        path: "subscription3[].discount",
        type: "private",
        variableType: "text"
      },
      {
        path: "subscription3[].fullprice",
        type: "private",
        variableType: "number"
      },
      {
        path: "shopSelected",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.getData.data.result.shopList.filter(
                item => item.selected == 1
              );
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return {};
              }
              throw e;
            }
          })()
      },
      {
        path: "variable",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "selectShop",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.getData.data.result.shopList.filter(
                item => item.selected == 1
              )[0];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return {};
              }
              throw e;
            }
          })()
      },
      {
        path: "button9.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "perper"
      },
      {
        path: "variable2",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "takhfif",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "discount",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "discountCode",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "button10.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "perper"
      },
      {
        path: "input5.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", AntdInput_Helpers)
      },
      {
        path: "button13.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "redirectUrl",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return `https://apps.liom.app/shopResult?buyId=${
                $state.selectShop.id
              }&?offCode=${
                $state.discountCode
              }&token=hjk812${localStorage.getItem("token")}jkp&redirectUrl=${
                window.document.referrer
              }`;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "loadingBtn",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "button14.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "mobileDialog.selectShop",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "mobileDialog.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return (() => {})();
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return false;
              }
              throw e;
            }
          })()
      },
      {
        path: "shopPage",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "allowanceUser",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return JSON.parse(window.localStorage.getItem("allowanceUser"));
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "token",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjAwN2VmNTA1LTY0ZTItNGU1Yy1iMmFmLTAwZDBjYTQzZTM1ZSIsInR5cGUiOiJzZXNzaW9uIiwiaWF0IjoxNzQzNDA5NzY1fQ.clzjX_16yS0C3c5kIqaTArB2T9iMEMN-4-dQrFsKHK8"
      },
      {
        path: "paramsObject",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({})
      },
      {
        path: "info.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "button.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "itemSelect",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => []
      },
      {
        path: "button11.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "items",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({
          success: true,
          result: {
            list: [
              {
                sectionName: null,
                partitions: 1,
                data: [
                  {
                    text: "\u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0627\u0646\u062c\u0627\u0645 <b>\u062e\u0648\u062f\u0622\u0632\u0645\u0627\u06cc\u06cc \u0633\u0631\u0637\u0627\u0646 \u0633\u06cc\u0646\u0647</b>",
                    hint: "<b>\u062a\u0627\u06cc\u0645 \u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc</b> \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u062e\u0648\u062f\u0622\u0632\u0645\u0627\u06cc\u06cc \u0631\u0648 \u0628\u0647\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645 \u062a\u0627 \u062d\u0648\u0627\u0633\u062a \u0628\u0647 \u062e\u0648\u062f\u062a \u0628\u0627\u0634\u0647",
                    id: "92bc0061-5edd-414f-8f3a-618ed010e6fd",
                    active: false,
                    time: {
                      year: 2025,
                      month: 3,
                      day: 9,
                      hour: 17,
                      minute: 8,
                      second: 28,
                      nanosecond: 802000000,
                      timeZoneOffsetSeconds: 0
                    },
                    always: false,
                    type: "breast_cancer_sms",
                    items: [
                      {
                        topBadgeBgColor: "#000000",
                        portion: 1,
                        section: "customPage",
                        type: "breast_cancer_sms",
                        title:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0627\u0646\u062c\u0627\u0645 <b>\u062e\u0648\u062f\u0622\u0632\u0645\u0627\u06cc\u06cc \u0633\u0631\u0637\u0627\u0646 \u0633\u06cc\u0646\u0647</b>",
                        timer: "",
                        createdAt: {
                          year: 2024,
                          month: 12,
                          day: 12,
                          hour: 13,
                          minute: 49,
                          second: 54,
                          nanosecond: 115000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "self_hamyar_sms",
                          "pcos_sub",
                          "husband_sms",
                          "irregular"
                        ],
                        smsSub: true,
                        price: 16000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 38,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f2 \u0645\u0627\u0647\u0647",
                        id: "8862e720-3977-4a82-a07b-2fbfd0b7ce03",
                        percentItem: 50,
                        value: 2,
                        order: 3,
                        image:
                          "https://liom.storage.c2.liara.space/config/self_care/icon_brest_cancer.png",
                        buyCount: 33,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        hint: "<b>\u062a\u0627\u06cc\u0645 \u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc</b> \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u062e\u0648\u062f\u0622\u0632\u0645\u0627\u06cc\u06cc \u0631\u0648 \u0628\u0647\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645 \u062a\u0627 \u062d\u0648\u0627\u0633\u062a \u0628\u0647 \u062e\u0648\u062f\u062a \u0628\u0627\u0634\u0647",
                        name: "\u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0627\u0646\u062c\u0627\u0645 <b>\u062e\u0648\u062f\u0622\u0632\u0645\u0627\u06cc\u06cc \u0633\u0631\u0637\u0627\u0646 \u0633\u06cc\u0646\u0647</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  8,000 \u062a\u0648\u0645\u0627\u0646"
                      },
                      {
                        topBadgeBgColor: "#000000",
                        topBadge:
                          "\u067e\u0631\u0641\u0631\u0648\u0634 \u062a\u0631\u06cc\u0646",
                        portion: 1,
                        section: "customPage",
                        fullPrice: 24000,
                        type: "breast_cancer_sms",
                        title:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0627\u0646\u062c\u0627\u0645 <b>\u062e\u0648\u062f\u0622\u0632\u0645\u0627\u06cc\u06cc \u0633\u0631\u0637\u0627\u0646 \u0633\u06cc\u0646\u0647</b>",
                        timer: "",
                        createdAt: {
                          year: 2024,
                          month: 12,
                          day: 12,
                          hour: 13,
                          minute: 49,
                          second: 57,
                          nanosecond: 430000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "self_hamyar_sms",
                          "pcos_sub",
                          "husband_sms",
                          "irregular"
                        ],
                        smsSub: true,
                        price: 19000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 37,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f3 \u0645\u0627\u0647\u0647",
                        id: "b34ea769-ee91-4913-ba30-0fb78cf5e4a9",
                        percentItem: 50,
                        value: 3,
                        order: 3,
                        image:
                          "https://liom.storage.c2.liara.space/config/self_care/icon_brest_cancer.png",
                        buyCount: 13,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        badge: "20%",
                        hint: "<b>\u062a\u0627\u06cc\u0645 \u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc</b> \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u062e\u0648\u062f\u0622\u0632\u0645\u0627\u06cc\u06cc \u0631\u0648 \u0628\u0647\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645 \u062a\u0627 \u062d\u0648\u0627\u0633\u062a \u0628\u0647 \u062e\u0648\u062f\u062a \u0628\u0627\u0634\u0647",
                        name: "\u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0627\u0646\u062c\u0627\u0645 <b>\u062e\u0648\u062f\u0622\u0632\u0645\u0627\u06cc\u06cc \u0633\u0631\u0637\u0627\u0646 \u0633\u06cc\u0646\u0647</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  6,300 \u062a\u0648\u0645\u0627\u0646"
                      },
                      {
                        topBadgeBgColor: "#000000",
                        topBadge:
                          "\ud83c\udf37 \u0628\u0647 \u0635\u0631\u0641\u0647 \u062a\u0631\u06cc\u0646\ud83c\udf37",
                        portion: 1,
                        section: "customPage",
                        fullPrice: 48000,
                        type: "breast_cancer_sms",
                        title:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0627\u0646\u062c\u0627\u0645 <b>\u062e\u0648\u062f\u0622\u0632\u0645\u0627\u06cc\u06cc \u0633\u0631\u0637\u0627\u0646 \u0633\u06cc\u0646\u0647</b>",
                        timer: "",
                        createdAt: {
                          year: 2024,
                          month: 12,
                          day: 12,
                          hour: 13,
                          minute: 50,
                          second: 3,
                          nanosecond: 301000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "self_hamyar_sms",
                          "pcos_sub",
                          "husband_sms",
                          "irregular"
                        ],
                        smsSub: true,
                        price: 29000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 36,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f6 \u0645\u0627\u0647\u0647",
                        id: "92bc0061-5edd-414f-8f3a-618ed010e6fd",
                        percentItem: 50,
                        value: 6,
                        selected: 1,
                        order: 3,
                        image:
                          "https://liom.storage.c2.liara.space/config/self_care/icon_brest_cancer.png",
                        buyCount: 183,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        badge: "40%",
                        hint: "<b>\u062a\u0627\u06cc\u0645 \u0647\u0627\u06cc \u0637\u0644\u0627\u06cc\u06cc</b> \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u062e\u0648\u062f\u0622\u0632\u0645\u0627\u06cc\u06cc \u0631\u0648 \u0628\u0647\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645 \u062a\u0627 \u062d\u0648\u0627\u0633\u062a \u0628\u0647 \u062e\u0648\u062f\u062a \u0628\u0627\u0634\u0647",
                        name: "\u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0627\u0646\u062c\u0627\u0645 <b>\u062e\u0648\u062f\u0622\u0632\u0645\u0627\u06cc\u06cc \u0633\u0631\u0637\u0627\u0646 \u0633\u06cc\u0646\u0647</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  4,800 \u062a\u0648\u0645\u0627\u0646"
                      }
                    ]
                  },
                  {
                    text: "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0647\u0645\u0633\u0631 \u0634\u0645\u0627</b>",
                    hint: "\u0632\u0645\u0627\u0646 \u0634\u0631\u0648\u0639 \u0642\u0627\u0639\u062f\u06af\u06cc \u0648 pms \u0631\u0627 \u0628\u0647 \u0647\u0645\u0633\u0631\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645 \u06a9\u0647 \u0628\u0627\u0639\u062b \u0645\u06cc\u0634\u0647  <b>\u0628\u06cc\u0634\u062a\u0631 \u062f\u0631\u06a9 \u0628\u0634\u06cc\u062f \u0648 \u0631\u0648\u0627\u0628\u0637 \u0628\u0647\u062a\u0631\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\u062f</b>",
                    id: "5318b234-02c2-49b2-8d81-8b8861f0bba5",
                    active: false,
                    time: {
                      year: 2025,
                      month: 3,
                      day: 9,
                      hour: 17,
                      minute: 8,
                      second: 28,
                      nanosecond: 802000000,
                      timeZoneOffsetSeconds: 0
                    },
                    always: false,
                    type: "husband_sms",
                    items: [
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          "\u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        portion: 1,
                        section: "customPage",
                        type: "husband_sms",
                        title:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0647\u0645\u0633\u0631 \u0634\u0645\u0627</b>",
                        timer: "",
                        createdAt: {
                          year: 2024,
                          month: 12,
                          day: 15,
                          hour: 12,
                          minute: 43,
                          second: 26,
                          nanosecond: 880000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "need_therapy_sub",
                          "self_hamyar_sms",
                          "hair_care_sub"
                        ],
                        smsSub: true,
                        price: 19000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 31,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f1 \u0645\u0627\u0647\u0647",
                        id: "a3037587-69d2-45f2-b191-66cba4e12457",
                        sku: "husband_sms-1",
                        percentItem: 50,
                        value: 1,
                        order: 1,
                        image:
                          "https://liom.storage.c2.liara.space/config/self_care/icon_hamyar.png",
                        buyCount: 551,
                        upsellingIds: [
                          "58fd0b44-8903-4987-aa76-142c0af8c02f",
                          "79a2b4f7-10fd-4349-b180-f68b0cc6587b",
                          "90b88592-6b84-4bc6-b431-075e59b86c3b"
                        ],
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        hint: "\u0632\u0645\u0627\u0646 \u0634\u0631\u0648\u0639 \u0642\u0627\u0639\u062f\u06af\u06cc \u0648 pms \u0631\u0627 \u0628\u0647 \u0647\u0645\u0633\u0631\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645 \u06a9\u0647 \u0628\u0627\u0639\u062b \u0645\u06cc\u0634\u0647  <b>\u0628\u06cc\u0634\u062a\u0631 \u062f\u0631\u06a9 \u0628\u0634\u06cc\u062f \u0648 \u0631\u0648\u0627\u0628\u0637 \u0628\u0647\u062a\u0631\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\u062f</b>",
                        name: "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0647\u0645\u0633\u0631 \u0634\u0645\u0627</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  19,000 \u062a\u0648\u0645\u0627\u0646"
                      },
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          "\u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        topBadge:
                          "\u067e\u0631\u0641\u0631\u0648\u0634 \u062a\u0631\u06cc\u0646",
                        portion: 1,
                        section: "customPage",
                        fullPrice: 54000,
                        type: "husband_sms",
                        title:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0647\u0645\u0633\u0631 \u0634\u0645\u0627</b>",
                        timer: "",
                        createdAt: {
                          year: 2024,
                          month: 12,
                          day: 15,
                          hour: 12,
                          minute: 43,
                          second: 47,
                          nanosecond: 876000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "need_therapy_sub",
                          "self_hamyar_sms",
                          "hair_care_sub"
                        ],
                        smsSub: true,
                        price: 44000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 30,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f3 \u0645\u0627\u0647\u0647",
                        id: "1b803c3f-c4d3-44fd-98aa-fcc782cca297",
                        sku: "husband_sms-3",
                        percentItem: 50,
                        value: 3,
                        order: 1,
                        image:
                          "https://liom.storage.c2.liara.space/config/self_care/icon_hamyar.png",
                        buyCount: 476,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        badge: "18%",
                        hint: "\u0632\u0645\u0627\u0646 \u0634\u0631\u0648\u0639 \u0642\u0627\u0639\u062f\u06af\u06cc \u0648 pms \u0631\u0627 \u0628\u0647 \u0647\u0645\u0633\u0631\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645 \u06a9\u0647 \u0628\u0627\u0639\u062b \u0645\u06cc\u0634\u0647  <b>\u0628\u06cc\u0634\u062a\u0631 \u062f\u0631\u06a9 \u0628\u0634\u06cc\u062f \u0648 \u0631\u0648\u0627\u0628\u0637 \u0628\u0647\u062a\u0631\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\u062f</b>",
                        name: "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0647\u0645\u0633\u0631 \u0634\u0645\u0627</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  14,700 \u062a\u0648\u0645\u0627\u0646"
                      },
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          "\u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        topBadge:
                          "\ud83c\udf37 \u0628\u0647 \u0635\u0631\u0641\u0647 \u062a\u0631\u06cc\u0646\ud83c\udf37",
                        portion: 1,
                        section: "customPage",
                        fullPrice: 115000,
                        type: "husband_sms",
                        title:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0647\u0645\u0633\u0631 \u0634\u0645\u0627</b>",
                        timer: "",
                        createdAt: {
                          year: 2024,
                          month: 12,
                          day: 15,
                          hour: 12,
                          minute: 43,
                          second: 56,
                          nanosecond: 789000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "need_therapy_sub",
                          "self_hamyar_sms",
                          "hair_care_sub"
                        ],
                        smsSub: true,
                        price: 69000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 29,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f6 \u0645\u0627\u0647\u0647",
                        id: "5318b234-02c2-49b2-8d81-8b8861f0bba5",
                        sku: "husband_sms-6",
                        percentItem: 50,
                        value: 6,
                        selected: 1,
                        order: 1,
                        image:
                          "https://liom.storage.c2.liara.space/config/self_care/icon_hamyar.png",
                        buyCount: 795,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        badge: "40%",
                        hint: "\u0632\u0645\u0627\u0646 \u0634\u0631\u0648\u0639 \u0642\u0627\u0639\u062f\u06af\u06cc \u0648 pms \u0631\u0627 \u0628\u0647 \u0647\u0645\u0633\u0631\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645 \u06a9\u0647 \u0628\u0627\u0639\u062b \u0645\u06cc\u0634\u0647  <b>\u0628\u06cc\u0634\u062a\u0631 \u062f\u0631\u06a9 \u0628\u0634\u06cc\u062f \u0648 \u0631\u0648\u0627\u0628\u0637 \u0628\u0647\u062a\u0631\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\u062f</b>",
                        name: "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0647\u0645\u0633\u0631 \u0634\u0645\u0627</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  11,500 \u062a\u0648\u0645\u0627\u0646"
                      }
                    ]
                  },
                  {
                    text: "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0645\u0627\u062f\u0631 \u0634\u0645\u0627</b>",
                    hint: "\u0632\u0645\u0627\u0646 \u0634\u0631\u0648\u0639 \u0642\u0627\u0639\u062f\u06af\u06cc \u0648 pms \u0631\u0627 \u0628\u0647 \u0645\u0627\u062f\u0631\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645 \u06a9\u0647 \u0628\u0627\u0639\u062b \u0645\u06cc\u0634\u0647  <b>\u0628\u06cc\u0634\u062a\u0631 \u062f\u0631\u06a9 \u0628\u0634\u06cc\u062f \u0648 \u0631\u0648\u0627\u0628\u0637 \u0628\u0647\u062a\u0631\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\u062f</b>",
                    id: "6e5bbe5c-281b-44b3-9a63-837c7f5f9726",
                    active: false,
                    time: {
                      year: 2025,
                      month: 3,
                      day: 9,
                      hour: 17,
                      minute: 8,
                      second: 28,
                      nanosecond: 802000000,
                      timeZoneOffsetSeconds: 0
                    },
                    always: false,
                    type: "mother_sms",
                    items: [
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          "\u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        portion: 1,
                        section: "customPage",
                        type: "mother_sms",
                        title:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0645\u0627\u062f\u0631 \u0634\u0645\u0627</b>",
                        timer: "",
                        createdAt: {
                          year: 2025,
                          month: 2,
                          day: 5,
                          hour: 10,
                          minute: 4,
                          second: 18,
                          nanosecond: 682000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "skin_care_sub",
                          "self_hamyar_sms",
                          "hair_care_sub",
                          "adhd_sub"
                        ],
                        smsSub: true,
                        price: 19000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 66,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f1 \u0645\u0627\u0647\u0647",
                        id: "07d77b7d-2e99-4e2a-817d-54e7d12a1ab7",
                        sku: "mother_sms-1",
                        percentItem: 50,
                        value: 1,
                        order: 1,
                        image:
                          "https://liom.storage.c2.liara.space/config/self_care/icon_hamyar.png",
                        buyCount: 14,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        hint: "\u0632\u0645\u0627\u0646 \u0634\u0631\u0648\u0639 \u0642\u0627\u0639\u062f\u06af\u06cc \u0648 pms \u0631\u0627 \u0628\u0647 \u0645\u0627\u062f\u0631\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645 \u06a9\u0647 \u0628\u0627\u0639\u062b \u0645\u06cc\u0634\u0647  <b>\u0628\u06cc\u0634\u062a\u0631 \u062f\u0631\u06a9 \u0628\u0634\u06cc\u062f \u0648 \u0631\u0648\u0627\u0628\u0637 \u0628\u0647\u062a\u0631\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\u062f</b>",
                        name: "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0645\u0627\u062f\u0631 \u0634\u0645\u0627</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  19,000 \u062a\u0648\u0645\u0627\u0646"
                      },
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          "\u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        topBadge:
                          "\u067e\u0631\u0641\u0631\u0648\u0634 \u062a\u0631\u06cc\u0646",
                        portion: 1,
                        section: "customPage",
                        title:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0645\u0627\u062f\u0631 \u0634\u0645\u0627</b>",
                        type: "mother_sms",
                        fullPrice: 54000,
                        timer: "",
                        createdAt: {
                          year: 2025,
                          month: 2,
                          day: 5,
                          hour: 10,
                          minute: 4,
                          second: 22,
                          nanosecond: 29000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "skin_care_sub",
                          "self_hamyar_sms",
                          "hair_care_sub",
                          "adhd_sub"
                        ],
                        smsSub: true,
                        price: 44000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 67,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f3 \u0645\u0627\u0647\u0647",
                        id: "31a7ef66-4d18-41e7-979a-68fc67bbebed",
                        sku: "mother_sms-3",
                        percentItem: 50,
                        value: 3,
                        order: 1,
                        image:
                          "https://liom.storage.c2.liara.space/config/self_care/icon_hamyar.png",
                        buyCount: 14,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        badge: "18%",
                        topBadgeTextColor: "#ffffff",
                        hint: "\u0632\u0645\u0627\u0646 \u0634\u0631\u0648\u0639 \u0642\u0627\u0639\u062f\u06af\u06cc \u0648 pms \u0631\u0627 \u0628\u0647 \u0645\u0627\u062f\u0631\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645 \u06a9\u0647 \u0628\u0627\u0639\u062b \u0645\u06cc\u0634\u0647  <b>\u0628\u06cc\u0634\u062a\u0631 \u062f\u0631\u06a9 \u0628\u0634\u06cc\u062f \u0648 \u0631\u0648\u0627\u0628\u0637 \u0628\u0647\u062a\u0631\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\u062f</b>",
                        name: "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0645\u0627\u062f\u0631 \u0634\u0645\u0627</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  14,700 \u062a\u0648\u0645\u0627\u0646"
                      },
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          "\u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        topBadge:
                          "\ud83c\udf37 \u0628\u0647 \u0635\u0631\u0641\u0647 \u062a\u0631\u06cc\u0646\ud83c\udf37",
                        portion: 1,
                        section: "customPage",
                        type: "mother_sms",
                        title:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0645\u0627\u062f\u0631 \u0634\u0645\u0627</b>",
                        fullPrice: 115000,
                        timer: "",
                        createdAt: {
                          year: 2025,
                          month: 2,
                          day: 5,
                          hour: 10,
                          minute: 4,
                          second: 30,
                          nanosecond: 121000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "skin_care_sub",
                          "self_hamyar_sms",
                          "hair_care_sub",
                          "adhd_sub"
                        ],
                        smsSub: true,
                        price: 69000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 68,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f6 \u0645\u0627\u0647\u0647",
                        id: "6e5bbe5c-281b-44b3-9a63-837c7f5f9726",
                        sku: "mother_sms-6",
                        percentItem: 50,
                        value: 6,
                        selected: 1,
                        order: 1,
                        image:
                          "https://liom.storage.c2.liara.space/config/self_care/icon_hamyar.png",
                        buyCount: 43,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        badge: "44%",
                        topBadgeTextColor: "#ffffff",
                        hint: "\u0632\u0645\u0627\u0646 \u0634\u0631\u0648\u0639 \u0642\u0627\u0639\u062f\u06af\u06cc \u0648 pms \u0631\u0627 \u0628\u0647 \u0645\u0627\u062f\u0631\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645 \u06a9\u0647 \u0628\u0627\u0639\u062b \u0645\u06cc\u0634\u0647  <b>\u0628\u06cc\u0634\u062a\u0631 \u062f\u0631\u06a9 \u0628\u0634\u06cc\u062f \u0648 \u0631\u0648\u0627\u0628\u0637 \u0628\u0647\u062a\u0631\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc\u062f</b>",
                        name: "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc <b>\u0628\u0647 \u0645\u0627\u062f\u0631 \u0634\u0645\u0627</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  11,500 \u062a\u0648\u0645\u0627\u0646"
                      }
                    ]
                  },
                  {
                    text: "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc  <b>\u0628\u0647 \u062e\u0648\u062f\u062a</b>",
                    hint: "\u0686\u0646\u062f \u0631\u0648\u0632 \u0642\u0628\u0644 \u0627\u0632 \u0648\u0631\u0648\u062f \u0628\u0647 \u0648\u0636\u0639\u06cc\u062a \u067e\u0631\u06cc\u0648\u062f\u06cc \u06cc\u0627 pms \u0628\u0647\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645  <b>\u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u063a\u0627\u0641\u0644\u06af\u06cc\u0631 \u0646\u0634\u06cc</b>",
                    id: "d6d364f7-3e02-4e92-b8d3-ba559d61d64e",
                    active: false,
                    time: {
                      year: 2025,
                      month: 3,
                      day: 9,
                      hour: 17,
                      minute: 8,
                      second: 28,
                      nanosecond: 802000000,
                      timeZoneOffsetSeconds: 0
                    },
                    always: false,
                    type: "self_hamyar_sms",
                    items: [
                      {
                        topBadgeBgColor: "#000000",
                        portion: 1,
                        section: "customPage",
                        type: "self_hamyar_sms",
                        title:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc  <b>\u0628\u0647 \u062e\u0648\u062f\u062a</b>",
                        timer: "",
                        createdAt: {
                          year: 2024,
                          month: 12,
                          day: 12,
                          hour: 13,
                          minute: 53,
                          second: 25,
                          nanosecond: 833000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "skin_care_sub",
                          "mother_sms",
                          "hair_care_sub",
                          "adhd_sub"
                        ],
                        titel:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0628\u0647 \u062e\u0648\u062f\u0645",
                        smsSub: true,
                        price: 16000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 35,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f1 \u0645\u0627\u0647\u0647",
                        id: "90d0b109-ff19-4e54-a04f-9172519708d3",
                        percentItem: 50,
                        value: 1,
                        order: 2,
                        image:
                          "https://liom.storage.c2.liara.space/config/self_care/icon_hamyar.png",
                        buyCount: 202,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        hint: "\u0686\u0646\u062f \u0631\u0648\u0632 \u0642\u0628\u0644 \u0627\u0632 \u0648\u0631\u0648\u062f \u0628\u0647 \u0648\u0636\u0639\u06cc\u062a \u067e\u0631\u06cc\u0648\u062f\u06cc \u06cc\u0627 pms \u0628\u0647\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645  <b>\u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u063a\u0627\u0641\u0644\u06af\u06cc\u0631 \u0646\u0634\u06cc</b>",
                        name: "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc  <b>\u0628\u0647 \u062e\u0648\u062f\u062a</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  16,000 \u062a\u0648\u0645\u0627\u0646"
                      },
                      {
                        topBadgeBgColor: "#000000",
                        topBadge:
                          "\u067e\u0631\u0641\u0631\u0648\u0634 \u062a\u0631\u06cc\u0646",
                        portion: 1,
                        section: "customPage",
                        fullPrice: 45000,
                        type: "self_hamyar_sms",
                        title:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc  <b>\u0628\u0647 \u062e\u0648\u062f\u062a</b>",
                        timer: "",
                        createdAt: {
                          year: 2024,
                          month: 12,
                          day: 12,
                          hour: 13,
                          minute: 53,
                          second: 27,
                          nanosecond: 941000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "skin_care_sub",
                          "mother_sms",
                          "hair_care_sub",
                          "adhd_sub"
                        ],
                        titel:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0628\u0647 \u062e\u0648\u062f\u0645",
                        smsSub: true,
                        price: 36000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 34,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f3 \u0645\u0627\u0647\u0647",
                        id: "aecbacb7-9ba4-4881-9fe3-943dba24610c",
                        percentItem: 50,
                        value: 3,
                        order: 2,
                        image:
                          "https://liom.storage.c2.liara.space/config/self_care/icon_hamyar.png",
                        buyCount: 137,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        badge: "20%",
                        hint: "\u0686\u0646\u062f \u0631\u0648\u0632 \u0642\u0628\u0644 \u0627\u0632 \u0648\u0631\u0648\u062f \u0628\u0647 \u0648\u0636\u0639\u06cc\u062a \u067e\u0631\u06cc\u0648\u062f\u06cc \u06cc\u0627 pms \u0628\u0647\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645  <b>\u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u063a\u0627\u0641\u0644\u06af\u06cc\u0631 \u0646\u0634\u06cc</b>",
                        name: "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc  <b>\u0628\u0647 \u062e\u0648\u062f\u062a</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  12,000 \u062a\u0648\u0645\u0627\u0646"
                      },
                      {
                        topBadgeBgColor: "#000000",
                        topBadge:
                          "\ud83c\udf37 \u0628\u0647 \u0635\u0631\u0641\u0647 \u062a\u0631\u06cc\u0646\ud83c\udf37",
                        portion: 1,
                        section: "customPage",
                        fullPrice: 90000,
                        type: "self_hamyar_sms",
                        title:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc  <b>\u0628\u0647 \u062e\u0648\u062f\u062a</b>",
                        timer: "",
                        createdAt: {
                          year: 2024,
                          month: 12,
                          day: 12,
                          hour: 13,
                          minute: 53,
                          second: 39,
                          nanosecond: 700000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "skin_care_sub",
                          "mother_sms",
                          "hair_care_sub",
                          "adhd_sub"
                        ],
                        titel:
                          "\u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0628\u0647 \u062e\u0648\u062f\u0645",
                        smsSub: true,
                        price: 54000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 33,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f6 \u0645\u0627\u0647\u0647",
                        id: "d6d364f7-3e02-4e92-b8d3-ba559d61d64e",
                        percentItem: 50,
                        value: 6,
                        selected: 1,
                        order: 2,
                        image:
                          "https://liom.storage.c2.liara.space/config/self_care/icon_hamyar.png",
                        buyCount: 460,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        badge: "40%",
                        hint: "\u0686\u0646\u062f \u0631\u0648\u0632 \u0642\u0628\u0644 \u0627\u0632 \u0648\u0631\u0648\u062f \u0628\u0647 \u0648\u0636\u0639\u06cc\u062a \u067e\u0631\u06cc\u0648\u062f\u06cc \u06cc\u0627 pms \u0628\u0647\u062a \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u06cc\u0627\u062f\u0622\u0648\u0631\u06cc \u0645\u06cc\u06a9\u0646\u06cc\u0645  <b>\u062a\u0627 \u0647\u06cc\u0686\u0648\u0642\u062a \u063a\u0627\u0641\u0644\u06af\u06cc\u0631 \u0646\u0634\u06cc</b>",
                        name: "\u067e\u06cc\u0627\u0645\u06a9 \u0627\u0637\u0644\u0627\u0639\u200c\u0631\u0633\u0627\u0646\u06cc \u062f\u0648\u0631\u0627\u0646 \u0642\u0627\u0639\u062f\u06af\u06cc  <b>\u0628\u0647 \u062e\u0648\u062f\u062a</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  9,000 \u062a\u0648\u0645\u0627\u0646"
                      }
                    ]
                  }
                ]
              },
              {
                sectionName: null,
                partitions: 0,
                data: [
                  {
                    text: " \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0648\u06cc\u0698\u0647 \u0648 <b>\u0634\u062e\u0635\u06cc \u0633\u0627\u0632\u06cc \u0634\u062f\u0647</b>",
                    hint: "\u0628\u0627 \u0634\u0646\u0627\u062e\u062a\u06cc \u06a9\u0647 \u0627\u0632\u062a \u062f\u0627\u0631\u06cc\u0645\u060c \u0628\u0647\u062a\u0631\u06cc\u0646 \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u06a9\u0647 \u0644\u0627\u0632\u0645 \u062f\u0627\u0631\u06cc \u0631\u0648 \u0628\u0647\u062a \u0646\u0634\u0648\u0646 \u0645\u06cc\u062f\u06cc\u0645 \u0648 <b>\u0627\u0632 \u0646\u0638\u0631 \u0631\u0648\u062d\u06cc \u0648 \u062c\u0633\u0645\u06cc \u0645\u0631\u0627\u0642\u0628\u062a \u0647\u0633\u062a\u06cc\u0645</b>",
                    id: "9bfe33a2-77c5-4252-a200-185a6139bdd3",
                    separator: true,
                    active: false,
                    time: {
                      year: 2025,
                      month: 3,
                      day: 9,
                      hour: 17,
                      minute: 8,
                      second: 28,
                      nanosecond: 802000000,
                      timeZoneOffsetSeconds: 0
                    },
                    always: false,
                    type: "special_advice",
                    items: [
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          "\u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        portion: 0,
                        section: "customPage",
                        type: "special_advice",
                        title:
                          " \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0648\u06cc\u0698\u0647 \u0648 <b>\u0634\u062e\u0635\u06cc \u0633\u0627\u0632\u06cc \u0634\u062f\u0647</b>",
                        timer: "",
                        createdAt: {
                          year: 2024,
                          month: 12,
                          day: 15,
                          hour: 12,
                          minute: 48,
                          second: 23,
                          nanosecond: 471000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "adhd_sub",
                          "self_hamyar_sms",
                          "hair_care_sub",
                          "skin_care_sub"
                        ],
                        price: 15000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 28,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f1 \u0645\u0627\u0647\u0647",
                        id: "23e605d7-117d-413c-b0d2-09e7aab7b716",
                        sku: "special_advice-1",
                        percentItem: 50,
                        value: 1,
                        order: 4,
                        image:
                          "https://files.devliom.ir/config/premium/gem4.png",
                        buyCount: 96,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        separator: true,
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        hint: "\u0628\u0627 \u0634\u0646\u0627\u062e\u062a\u06cc \u06a9\u0647 \u0627\u0632\u062a \u062f\u0627\u0631\u06cc\u0645\u060c \u0628\u0647\u062a\u0631\u06cc\u0646 \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u06a9\u0647 \u0644\u0627\u0632\u0645 \u062f\u0627\u0631\u06cc \u0631\u0648 \u0628\u0647\u062a \u0646\u0634\u0648\u0646 \u0645\u06cc\u062f\u06cc\u0645 \u0648 <b>\u0627\u0632 \u0646\u0638\u0631 \u0631\u0648\u062d\u06cc \u0648 \u062c\u0633\u0645\u06cc \u0645\u0631\u0627\u0642\u0628\u062a \u0647\u0633\u062a\u06cc\u0645</b>",
                        name: " \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0648\u06cc\u0698\u0647 \u0648 <b>\u0634\u062e\u0635\u06cc \u0633\u0627\u0632\u06cc \u0634\u062f\u0647</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  15,000 \u062a\u0648\u0645\u0627\u0646"
                      },
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          "\u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        topBadge:
                          "\u067e\u0631\u0641\u0631\u0648\u0634 \u062a\u0631\u06cc\u0646",
                        portion: 0,
                        section: "customPage",
                        fullPrice: 45000,
                        type: "special_advice",
                        title:
                          " \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0648\u06cc\u0698\u0647 \u0648 <b>\u0634\u062e\u0635\u06cc \u0633\u0627\u0632\u06cc \u0634\u062f\u0647</b>",
                        timer: "",
                        createdAt: {
                          year: 2024,
                          month: 12,
                          day: 15,
                          hour: 12,
                          minute: 48,
                          second: 30,
                          nanosecond: 265000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "adhd_sub",
                          "self_hamyar_sms",
                          "hair_care_sub",
                          "skin_care_sub"
                        ],
                        price: 36000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 27,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f3 \u0645\u0627\u0647\u0647",
                        id: "84fb150e-fd30-43d9-8c01-b1d31c9fccbb",
                        sku: "special_advice-3",
                        percentItem: 50,
                        value: 3,
                        order: 4,
                        image:
                          "https://files.devliom.ir/config/premium/gem4.png",
                        buyCount: 57,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        separator: true,
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        badge: "20%",
                        hint: "\u0628\u0627 \u0634\u0646\u0627\u062e\u062a\u06cc \u06a9\u0647 \u0627\u0632\u062a \u062f\u0627\u0631\u06cc\u0645\u060c \u0628\u0647\u062a\u0631\u06cc\u0646 \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u06a9\u0647 \u0644\u0627\u0632\u0645 \u062f\u0627\u0631\u06cc \u0631\u0648 \u0628\u0647\u062a \u0646\u0634\u0648\u0646 \u0645\u06cc\u062f\u06cc\u0645 \u0648 <b>\u0627\u0632 \u0646\u0638\u0631 \u0631\u0648\u062d\u06cc \u0648 \u062c\u0633\u0645\u06cc \u0645\u0631\u0627\u0642\u0628\u062a \u0647\u0633\u062a\u06cc\u0645</b>",
                        name: " \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0648\u06cc\u0698\u0647 \u0648 <b>\u0634\u062e\u0635\u06cc \u0633\u0627\u0632\u06cc \u0634\u062f\u0647</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  12,000 \u062a\u0648\u0645\u0627\u0646"
                      },
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          "\u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        topBadge:
                          "\ud83c\udf37 \u0628\u0647 \u0635\u0631\u0641\u0647 \u062a\u0631\u06cc\u0646\ud83c\udf37",
                        portion: 0,
                        section: "customPage",
                        fullPrice: 90000,
                        type: "special_advice",
                        title:
                          " \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0648\u06cc\u0698\u0647 \u0648 <b>\u0634\u062e\u0635\u06cc \u0633\u0627\u0632\u06cc \u0634\u062f\u0647</b>",
                        timer: "",
                        createdAt: {
                          year: 2024,
                          month: 12,
                          day: 15,
                          hour: 12,
                          minute: 48,
                          second: 36,
                          nanosecond: 800000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "adhd_sub",
                          "self_hamyar_sms",
                          "hair_care_sub",
                          "skin_care_sub"
                        ],
                        price: 54000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 26,
                        text: "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06f6 \u0645\u0627\u0647\u0647",
                        id: "9bfe33a2-77c5-4252-a200-185a6139bdd3",
                        sku: "special_advice-6",
                        percentItem: 50,
                        value: 6,
                        selected: 1,
                        order: 4,
                        image:
                          "https://files.devliom.ir/config/premium/gem4.png",
                        buyCount: 240,
                        pregnancy: false,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        separator: true,
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        badge: "40%",
                        hint: "\u0628\u0627 \u0634\u0646\u0627\u062e\u062a\u06cc \u06a9\u0647 \u0627\u0632\u062a \u062f\u0627\u0631\u06cc\u0645\u060c \u0628\u0647\u062a\u0631\u06cc\u0646 \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u06a9\u0647 \u0644\u0627\u0632\u0645 \u062f\u0627\u0631\u06cc \u0631\u0648 \u0628\u0647\u062a \u0646\u0634\u0648\u0646 \u0645\u06cc\u062f\u06cc\u0645 \u0648 <b>\u0627\u0632 \u0646\u0638\u0631 \u0631\u0648\u062d\u06cc \u0648 \u062c\u0633\u0645\u06cc \u0645\u0631\u0627\u0642\u0628\u062a \u0647\u0633\u062a\u06cc\u0645</b>",
                        name: " \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0648\u06cc\u0698\u0647 \u0648 <b>\u0634\u062e\u0635\u06cc \u0633\u0627\u0632\u06cc \u0634\u062f\u0647</b>",
                        otherItem: true,
                        per_month_text:
                          "\u0645\u0627\u0647\u06cc\u0627\u0646\u0647  9,000 \u062a\u0648\u0645\u0627\u0646"
                      }
                    ]
                  },
                  {
                    text: "<b>\u0645\u0634\u0627\u0648\u0631\u0647 \u0628\u0627 \u06a9\u0627\u0631\u0634\u0646\u0627\u0633 \u0644\u06cc\u0648\u0645</b>",
                    hint: "\u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 \u0628\u06cc\u0646 \u06a9\u0627\u0631\u0634\u0646\u0627\u0633\u0627\u0646 \u062f\u0631 \u062d\u0648\u0632\u0647 \u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641 \u0628\u0627 \u06cc\u06a9 \u0634\u062e\u0635 \u0628\u0647 \u0635\u0648\u0631\u062a \u06a9\u0627\u0645\u0644\u0627 \u0645\u062d\u0631\u0645\u0627\u0646\u0647 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0631\u0642\u0631\u0627\u0631 \u06a9\u0646\u06cc\u062f",
                    id: "563e47c6-83ea-4c71-81fc-9b987b05b7d0",
                    active: false,
                    time: null,
                    always: false,
                    type: "therapy",
                    items: [
                      {
                        topBadgeBgColor: "#000000",
                        portion: 0,
                        section: "customPage",
                        type: "therapy",
                        title:
                          "<b>\u0645\u0634\u0627\u0648\u0631\u0647 \u0628\u0627 \u06a9\u0627\u0631\u0634\u0646\u0627\u0633 \u0644\u06cc\u0648\u0645</b>",
                        timer: "",
                        createdAt: {
                          year: 2025,
                          month: 3,
                          day: 14,
                          hour: 20,
                          minute: 49,
                          second: 35,
                          nanosecond: 802000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "adhd_sub",
                          "special_advice",
                          "husband_sms"
                        ],
                        smsSub: true,
                        price: 99000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        int_id: 60,
                        text: "\u0645\u0634\u0627\u0648\u0631\u0647 \u0628\u0627 \u06a9\u0627\u0631\u0634\u0646\u0627\u0633 \u0644\u06cc\u0648\u0645",
                        id: "563e47c6-83ea-4c71-81fc-9b987b05b7d0",
                        percentItem: 50,
                        value: 1,
                        order: 3,
                        image:
                          "https://liom.storage.c2.liara.space/icon_clinik.png",
                        buyCount: 52,
                        pregnancy: true,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        topBadgeTextColor: "#ffffff",
                        hint: "\u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u06cc\u062f \u0627\u0632 \u0628\u06cc\u0646 \u06a9\u0627\u0631\u0634\u0646\u0627\u0633\u0627\u0646 \u062f\u0631 \u062d\u0648\u0632\u0647 \u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641 \u0628\u0627 \u06cc\u06a9 \u0634\u062e\u0635 \u0628\u0647 \u0635\u0648\u0631\u062a \u06a9\u0627\u0645\u0644\u0627 \u0645\u062d\u0631\u0645\u0627\u0646\u0647 \u0627\u0631\u062a\u0628\u0627\u0637 \u0628\u0631\u0642\u0631\u0627\u0631 \u06a9\u0646\u06cc\u062f",
                        name: "<b>\u0645\u0634\u0627\u0648\u0631\u0647 \u0628\u0627 \u06a9\u0627\u0631\u0634\u0646\u0627\u0633 \u0644\u06cc\u0648\u0645</b>"
                      }
                    ]
                  }
                ]
              },
              {
                sectionName: null,
                partitions: 2,
                data: [
                  {
                    text: "\u062a\u0634\u062e\u06cc\u0635 ADHD \u0628\u0631 \u0627\u0633\u0627\u0633 \u0639\u0644\u0627\u0626\u0645 ",
                    hint: "\u0628\u0627 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u062a\u0633\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0645\u06cc\u062a\u0648\u0646\u06cc\u062f \u0645\u062a\u0648\u062c\u0647 \u0628\u0634\u06cc\u062f \u06a9\u0647 \u0622\u06cc\u0627 \u062f\u0686\u0627\u0631 ADHD \u0647\u0633\u062a\u06cc\u062f \u06cc\u0627 \u062e\u06cc\u0631\u061f.",
                    id: "9542a85f-bf4d-426d-90e2-2ae436c410c2",
                    active: false,
                    time: null,
                    always: false,
                    type: "adhd_sub",
                    items: [
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          " \u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        topBadge:
                          "\u2b50\ufe0f \u062a\u062e\u0641\u06cc\u0641 \u0627\u0633\u062a\u062b\u0646\u0627\u06cc\u06cc \u2b50\ufe0f",
                        portion: 2,
                        section: "customPage",
                        title:
                          "\u062a\u0634\u062e\u06cc\u0635 ADHD \u0628\u0631 \u0627\u0633\u0627\u0633 \u0639\u0644\u0627\u0626\u0645 ",
                        type: "adhd_sub",
                        fullPrice: 42000,
                        timer: "",
                        createdAt: {
                          year: 2025,
                          month: 3,
                          day: 27,
                          hour: 8,
                          minute: 32,
                          second: 1,
                          nanosecond: 861000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "need_therapy_sub",
                          "self_hamyar_sms",
                          "special_advice"
                        ],
                        price: 29000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        lable:
                          "\u06cc\u06a9\u0628\u0627\u0631 \u062e\u0631\u06cc\u062f",
                        int_id: 79,
                        text: "\u0628\u0627 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u062a\u0633\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0645\u06cc\u062a\u0648\u0646\u06cc\u062f \u0645\u062a\u0648\u062c\u0647 \u0628\u0634\u06cc\u062f \u06a9\u0647 \u0622\u06cc\u0627 \u062f\u0686\u0627\u0631 ADHD \u0647\u0633\u062a\u06cc\u062f \u06cc\u0627 \u062e\u06cc\u0631\u061f.",
                        id: "9542a85f-bf4d-426d-90e2-2ae436c410c2",
                        sku: "adhd_sub-sub-1",
                        value: 1,
                        percentItem: 40,
                        order: 6,
                        image: "https://liom.storage.c2.liara.space/adhd.png",
                        buyCount: 115,
                        pregnancy: true,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        badge: "30%",
                        topBadgeTextColor: "#ffffff",
                        hint: "\u0628\u0627 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u062a\u0633\u062a \u0622\u0646\u0644\u0627\u06cc\u0646 \u0645\u06cc\u062a\u0648\u0646\u06cc\u062f \u0645\u062a\u0648\u062c\u0647 \u0628\u0634\u06cc\u062f \u06a9\u0647 \u0622\u06cc\u0627 \u062f\u0686\u0627\u0631 ADHD \u0647\u0633\u062a\u06cc\u062f \u06cc\u0627 \u062e\u06cc\u0631\u061f.",
                        name: "\u062a\u0634\u062e\u06cc\u0635 ADHD \u0628\u0631 \u0627\u0633\u0627\u0633 \u0639\u0644\u0627\u0626\u0645 "
                      }
                    ]
                  },
                  {
                    text: "\u062f\u0631\u0645\u0627\u0646 ADHD",
                    hint: "\u0628\u0627 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647 \u0648 \u0645\u0631\u0627\u062d\u0644 \u06af\u0641\u062a\u0647\u200c\u0634\u062f\u0647 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc ADHD \u0631\u0648 \u062f\u0631\u0645\u0627\u0646 \u06a9\u0646\u06cc",
                    id: "1d50af4e-265e-42c9-b7a4-babb7bf71472",
                    active: false,
                    time: null,
                    always: false,
                    type: "adhd_treatment_sub",
                    items: [
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          " \u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        topBadge:
                          "\u2b50\ufe0f \u062a\u062e\u0641\u06cc\u0641 \u0627\u0633\u062a\u062b\u0646\u0627\u06cc\u06cc \u2b50\ufe0f",
                        portion: 2,
                        section: "customPage",
                        title: "\u062f\u0631\u0645\u0627\u0646 ADHD",
                        type: "adhd_treatment_sub",
                        fullPrice: 100000,
                        timer: "",
                        createdAt: {
                          year: 2025,
                          month: 5,
                          day: 5,
                          hour: 6,
                          minute: 29,
                          second: 4,
                          nanosecond: 595000000,
                          timeZoneOffsetSeconds: 0
                        },
                        price: 69000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        lable:
                          "\u06cc\u06a9\u0628\u0627\u0631 \u062e\u0631\u06cc\u062f",
                        int_id: 65,
                        id: "1d50af4e-265e-42c9-b7a4-babb7bf71472",
                        text: "\u0628\u0627 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647 \u0648 \u0645\u0631\u0627\u062d\u0644 \u06af\u0641\u062a\u0647\u200c\u0634\u062f\u0647 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc ADHD \u0631\u0648 \u062f\u0631\u0645\u0627\u0646 \u06a9\u0646\u06cc",
                        sku: "adhd-treatment-sub-1",
                        value: 1,
                        percentItem: 40,
                        order: 6,
                        image:
                          "https://files.devliom.ir/config/premium/gem4.png",
                        buyCount: 22,
                        pregnancy: true,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        badge: "30%",
                        topBadgeTextColor: "#ffffff",
                        hint: "\u0628\u0627 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647 \u0648 \u0645\u0631\u0627\u062d\u0644 \u06af\u0641\u062a\u0647\u200c\u0634\u062f\u0647 \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc ADHD \u0631\u0648 \u062f\u0631\u0645\u0627\u0646 \u06a9\u0646\u06cc",
                        name: "\u062f\u0631\u0645\u0627\u0646 ADHD"
                      }
                    ]
                  },
                  {
                    text: "\u0631\u0648\u062a\u06cc\u0646 \u0645\u0648",
                    hint: "\u0628\u0627 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647  \u0645\u06cc\u062a\u0648\u0646\u06cc : \u0646\u0648\u0639 \u0645\u0648\u062a \u0631\u0648 \u0628\u0634\u0646\u0627\u0633\u06cc\u060c \u0627\u0632  \u0645\u0648\u062e\u0648\u0631\u0647 \u0648 \u062e\u0634\u06a9\u06cc \u0645\u0648 \u062c\u0644\u0648\u06af\u06cc\u0631\u06cc \u06a9\u0646\u06cc\u060c \u0631\u06cc\u0632\u0634 \u0645\u0648\u0647\u0627\u062a \u0631\u0648 \u062f\u0631\u0645\u0627\u0646 \u06a9\u0646\u06cc \u0648 \u0645\u0648\u0647\u0627\u062a \u0648 \u062a\u0642\u0648\u06cc\u062a \u06a9\u0646\u06cc \u0648 \u2026",
                    id: "a2e72870-bb7e-4384-a5c7-d467bcac42b8",
                    active: false,
                    time: null,
                    always: false,
                    type: "hair_care_sub",
                    items: [
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          " \u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        topBadge:
                          "\u2b50\ufe0f \u062a\u062e\u0641\u06cc\u0641 \u0627\u0633\u062a\u062b\u0646\u0627\u06cc\u06cc \u2b50\ufe0f",
                        portion: 2,
                        section: "customPage",
                        title: "\u0631\u0648\u062a\u06cc\u0646 \u0645\u0648",
                        type: "hair_care_sub",
                        fullPrice: 100000,
                        timer: "",
                        createdAt: {
                          year: 2025,
                          month: 4,
                          day: 7,
                          hour: 6,
                          minute: 49,
                          second: 55,
                          nanosecond: 558000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "pcos_sub",
                          "self_hamyar_sms",
                          "skin_care_sub",
                          "adhd_sub"
                        ],
                        price: 69000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        lable:
                          "\u06cc\u06a9\u0628\u0627\u0631 \u062e\u0631\u06cc\u062f",
                        int_id: 80,
                        text: "\u0628\u0627 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647  \u0645\u06cc\u062a\u0648\u0646\u06cc : \u0646\u0648\u0639 \u0645\u0648\u062a \u0631\u0648 \u0628\u0634\u0646\u0627\u0633\u06cc\u060c \u0627\u0632  \u0645\u0648\u062e\u0648\u0631\u0647 \u0648 \u062e\u0634\u06a9\u06cc \u0645\u0648 \u062c\u0644\u0648\u06af\u06cc\u0631\u06cc \u06a9\u0646\u06cc\u060c \u0631\u06cc\u0632\u0634 \u0645\u0648\u0647\u0627\u062a \u0631\u0648 \u062f\u0631\u0645\u0627\u0646 \u06a9\u0646\u06cc \u0648 \u0645\u0648\u0647\u0627\u062a \u0648 \u062a\u0642\u0648\u06cc\u062a \u06a9\u0646\u06cc \u0648 \u2026",
                        id: "a2e72870-bb7e-4384-a5c7-d467bcac42b8",
                        sku: "hair-care-sub-1",
                        value: 1,
                        percentItem: 40,
                        order: 6,
                        image:
                          "https://files.devliom.ir/config/premium/gem4.png",
                        buyCount: 68,
                        pregnancy: true,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        badge: "31%",
                        topBadgeTextColor: "#ffffff",
                        hint: "\u0628\u0627 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647  \u0645\u06cc\u062a\u0648\u0646\u06cc : \u0646\u0648\u0639 \u0645\u0648\u062a \u0631\u0648 \u0628\u0634\u0646\u0627\u0633\u06cc\u060c \u0627\u0632  \u0645\u0648\u062e\u0648\u0631\u0647 \u0648 \u062e\u0634\u06a9\u06cc \u0645\u0648 \u062c\u0644\u0648\u06af\u06cc\u0631\u06cc \u06a9\u0646\u06cc\u060c \u0631\u06cc\u0632\u0634 \u0645\u0648\u0647\u0627\u062a \u0631\u0648 \u062f\u0631\u0645\u0627\u0646 \u06a9\u0646\u06cc \u0648 \u0645\u0648\u0647\u0627\u062a \u0648 \u062a\u0642\u0648\u06cc\u062a \u06a9\u0646\u06cc \u0648 \u2026",
                        name: "\u0631\u0648\u062a\u06cc\u0646 \u0645\u0648"
                      }
                    ]
                  },
                  {
                    text: "\u0622\u06cc\u0627 \u0646\u06cc\u0627\u0632 \u0628\u0647 \u062a\u0631\u0627\u067e\u06cc\u0633\u062a \u062f\u0627\u0631\u0645\u061f",
                    hint: "\u0628\u0647 \u06a9\u0645\u06a9 \u0627\u06cc\u0646 \u062a\u0633\u062a \u0633\u0637\u062d \u0633\u0644\u0627\u0645\u062a \u0631\u0648\u0627\u0646\u06cc \u0634\u0645\u0627 \u0628\u0631\u0631\u0633\u06cc \u0645\u06cc\u200c\u0634\u0648\u062f \u0648 \u062f\u0631 \u0646\u0647\u0627\u06cc\u062a \u067e\u0627\u0633\u062e \u0645\u06cc\u200c\u062f\u0647\u062f \u06a9\u0647 \u0622\u06cc\u0627 \u0634\u0645\u0627 \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0627\u06cc\u0646 \u062f\u0627\u0631\u06cc\u062f \u06a9\u0647 \u0628\u0647 \u0631\u0648\u0627\u0646\u0634\u0646\u0627\u0633 \u0628\u0631\u0627\u06cc \u0628\u0647\u0628\u0648\u062f \u0648\u0636\u0639\u06cc\u062a \u062e\u0648\u062f\u062a\u0627\u0646 \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f \u06cc\u0627 \u062e\u06cc\u0631\u061f",
                    id: "754c1145-c03a-4fc4-80a3-e43e5e9faea5",
                    active: false,
                    time: null,
                    always: false,
                    type: "need_therapy_sub",
                    items: [
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          " \u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        topBadge:
                          "\u2b50\ufe0f \u062a\u062e\u0641\u06cc\u0641 \u0627\u0633\u062a\u062b\u0646\u0627\u06cc\u06cc \u2b50\ufe0f",
                        portion: 2,
                        section: "customPage",
                        title:
                          "\u0622\u06cc\u0627 \u0646\u06cc\u0627\u0632 \u0628\u0647 \u062a\u0631\u0627\u067e\u06cc\u0633\u062a \u062f\u0627\u0631\u0645\u061f",
                        type: "need_therapy_sub",
                        fullPrice: 50000,
                        timer: "",
                        createdAt: {
                          year: 2025,
                          month: 4,
                          day: 26,
                          hour: 6,
                          minute: 5,
                          second: 14,
                          nanosecond: 969000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "special_advice",
                          "adhd_sub",
                          "hair_care_sub",
                          "skin_care_sub"
                        ],
                        price: 39000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        lable:
                          "\u06cc\u06a9\u0628\u0627\u0631 \u062e\u0631\u06cc\u062f",
                        int_id: 64,
                        text: "\u0628\u0647 \u06a9\u0645\u06a9 \u0627\u06cc\u0646 \u062a\u0633\u062a \u0633\u0637\u062d \u0633\u0644\u0627\u0645\u062a \u0631\u0648\u0627\u0646\u06cc \u0634\u0645\u0627 \u0628\u0631\u0631\u0633\u06cc \u0645\u06cc\u200c\u0634\u0648\u062f \u0648 \u062f\u0631 \u0646\u0647\u0627\u06cc\u062a \u067e\u0627\u0633\u062e \u0645\u06cc\u200c\u062f\u0647\u062f \u06a9\u0647 \u0622\u06cc\u0627 \u0634\u0645\u0627 \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0627\u06cc\u0646 \u062f\u0627\u0631\u06cc\u062f \u06a9\u0647 \u0628\u0647 \u0631\u0648\u0627\u0646\u0634\u0646\u0627\u0633 \u0628\u0631\u0627\u06cc \u0628\u0647\u0628\u0648\u062f \u0648\u0636\u0639\u06cc\u062a \u062e\u0648\u062f\u062a\u0627\u0646 \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f \u06cc\u0627 \u062e\u06cc\u0631\u061f",
                        id: "754c1145-c03a-4fc4-80a3-e43e5e9faea5",
                        sku: "need_therapy-sub-1",
                        value: 1,
                        percentItem: 40,
                        order: 6,
                        image:
                          "https://liom.storage.c2.liara.space/needTrasphy.png",
                        buyCount: 44,
                        pregnancy: true,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        badge: "22%",
                        topBadgeTextColor: "#ffffff",
                        hint: "\u0628\u0647 \u06a9\u0645\u06a9 \u0627\u06cc\u0646 \u062a\u0633\u062a \u0633\u0637\u062d \u0633\u0644\u0627\u0645\u062a \u0631\u0648\u0627\u0646\u06cc \u0634\u0645\u0627 \u0628\u0631\u0631\u0633\u06cc \u0645\u06cc\u200c\u0634\u0648\u062f \u0648 \u062f\u0631 \u0646\u0647\u0627\u06cc\u062a \u067e\u0627\u0633\u062e \u0645\u06cc\u200c\u062f\u0647\u062f \u06a9\u0647 \u0622\u06cc\u0627 \u0634\u0645\u0627 \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0627\u06cc\u0646 \u062f\u0627\u0631\u06cc\u062f \u06a9\u0647 \u0628\u0647 \u0631\u0648\u0627\u0646\u0634\u0646\u0627\u0633 \u0628\u0631\u0627\u06cc \u0628\u0647\u0628\u0648\u062f \u0648\u0636\u0639\u06cc\u062a \u062e\u0648\u062f\u062a\u0627\u0646 \u0645\u0631\u0627\u062c\u0639\u0647 \u06a9\u0646\u06cc\u062f \u06cc\u0627 \u062e\u06cc\u0631\u061f",
                        name: "\u0622\u06cc\u0627 \u0646\u06cc\u0627\u0632 \u0628\u0647 \u062a\u0631\u0627\u067e\u06cc\u0633\u062a \u062f\u0627\u0631\u0645\u061f"
                      }
                    ]
                  },
                  {
                    text: "\u0631\u0648\u062a\u06cc\u0646 \u067e\u0648\u0633\u062a\u06cc",
                    hint: "\u0628\u0627 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647 \u0648 \u0645\u0631\u0627\u062d\u0644 \u06af\u0641\u062a\u0647\u200c\u0634\u062f\u0647\u060c \u06a9\u0647 \u0628\u0631 \u0627\u0633\u0627\u0633 \u062f\u0648\u0631\u0647 \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0637\u0631\u0627\u062d\u06cc \u0634\u062f\u0647\u060c \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0627\u0632 \u067e\u0648\u0633\u062a\u062a \u0645\u0631\u0627\u0642\u0628\u062a \u06a9\u0646\u06cc \u0648 \u067e\u0648\u0633\u062a\u06cc \u0634\u0627\u062f\u0627\u0628 \u0648 \u062c\u0648\u0627\u0646 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc.",
                    id: "8q78w67rw83-5634-48a8-b59b-d3wq4w54wfe5",
                    active: false,
                    time: null,
                    always: false,
                    type: "skin_care_sub",
                    items: [
                      {
                        topBadgeBgColor: "#000000",
                        descc:
                          "\u0628\u0631\u0627\u06cc \u062e\u0631\u06cc\u062f \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u06a9\u0644\u06cc\u06a9 \u06a9\u0646\u06cc\u062f",
                        topBadge:
                          "\u2b50\ufe0f \u062a\u062e\u0641\u06cc\u0641 \u0627\u0633\u062a\u062b\u0646\u0627\u06cc\u06cc \u2b50\ufe0f",
                        portion: 2,
                        section: "customPage",
                        title:
                          "\u0631\u0648\u062a\u06cc\u0646 \u067e\u0648\u0633\u062a\u06cc",
                        type: "skin_care_sub",
                        fullPrice: 70000,
                        timer: "",
                        createdAt: {
                          year: 2025,
                          month: 3,
                          day: 10,
                          hour: 12,
                          minute: 2,
                          second: 48,
                          nanosecond: 659000000,
                          timeZoneOffsetSeconds: 0
                        },
                        upsellingTypes: [
                          "pcos_sub",
                          "self_hamyar_sms",
                          "hair_care_sub",
                          "adhd_sub"
                        ],
                        price: 44000,
                        fullscreenBanner:
                          "https://liom.storage.c2.liara.space/banner1specialoffr.png",
                        lable:
                          "\u06cc\u06a9\u0628\u0627\u0631 \u062e\u0631\u06cc\u062f",
                        int_id: 57,
                        id: "8q78w67rw83-5634-48a8-b59b-d3wq4w54wfe5",
                        text: "\u0628\u0627 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647 \u0648 \u0645\u0631\u0627\u062d\u0644 \u06af\u0641\u062a\u0647\u200c\u0634\u062f\u0647\u060c \u06a9\u0647 \u0628\u0631 \u0627\u0633\u0627\u0633 \u062f\u0648\u0631\u0647 \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0637\u0631\u0627\u062d\u06cc \u0634\u062f\u0647\u060c \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0627\u0632 \u067e\u0648\u0633\u062a\u062a \u0645\u0631\u0627\u0642\u0628\u062a \u06a9\u0646\u06cc \u0648 \u067e\u0648\u0633\u062a\u06cc \u0634\u0627\u062f\u0627\u0628 \u0648 \u062c\u0648\u0627\u0646 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc.",
                        sku: "skin-care-sub-1",
                        value: 1,
                        percentItem: 40,
                        order: 6,
                        image: "https://liom.storage.c2.liara.space/skin3.png",
                        buyCount: 213,
                        pregnancy: true,
                        isVisible: true,
                        timeBgColor: "#000000",
                        timerTextColor: "#ffffff",
                        quality: "customPage",
                        badge: "23%",
                        topBadgeTextColor: "#ffffff",
                        hint: "\u0628\u0627 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646 \u0628\u0631\u0646\u0627\u0645\u0647 \u0648 \u0645\u0631\u0627\u062d\u0644 \u06af\u0641\u062a\u0647\u200c\u0634\u062f\u0647\u060c \u06a9\u0647 \u0628\u0631 \u0627\u0633\u0627\u0633 \u062f\u0648\u0631\u0647 \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0637\u0631\u0627\u062d\u06cc \u0634\u062f\u0647\u060c \u0645\u06cc\u200c\u062a\u0648\u0646\u06cc \u0627\u0632 \u067e\u0648\u0633\u062a\u062a \u0645\u0631\u0627\u0642\u0628\u062a \u06a9\u0646\u06cc \u0648 \u067e\u0648\u0633\u062a\u06cc \u0634\u0627\u062f\u0627\u0628 \u0648 \u062c\u0648\u0627\u0646 \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634\u06cc.",
                        name: "\u0631\u0648\u062a\u06cc\u0646 \u067e\u0648\u0633\u062a\u06cc"
                      }
                    ]
                  }
                ]
              }
            ],
            text: "\u2764\ufe0f \u062a\u062e\u0641\u06cc\u0641 \u0628\u06cc\u0634\u062a\u0631 \u0628\u0647 \u0645\u0646\u0627\u0633\u0628\u062a \u0631\u0648\u0632 \u062f\u062e\u062a\u0631 \ud83d\udc96",
            desc: "\u0628\u0647 \u06a9\u062f\u0627\u0645 \u06cc\u06a9 \u0627\u0632 \u0648\u06cc\u0698\u06af\u06cc\u200c\u0647\u0627\u06cc \u0632\u06cc\u0631 \u0646\u06cc\u0627\u0632 \u062f\u0627\u0631\u06cc\u062f\u061f \u0645\u0648\u0627\u0631\u062f \u062f\u0644\u062e\u0648\u0627\u0647 \u062e\u0648\u062f \u0631\u0627 \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc\u062f \u0648 \u0633\u067e\u0633 \u0631\u0648\u06cc \u062f\u06a9\u0645\u0647 \u067e\u0631\u062f\u0627\u062e\u062a \u062f\u0631 \u067e\u0627\u06cc\u06cc\u0646 \u0635\u0641\u062d\u0647 \u0628\u0632\u0646\u06cc\u062f.",
            image: "https://liom.storage.c2.liara.space/offCustomItems.JPG",
            selectAll: false,
            timer: null,
            timeBgColor: "#ab1d72",
            timerTextColor: "#000000",
            dialogText:
              "\u0648\u06cc\u0698\u06af\u06cc \u0627\u06cc \u06a9\u0647 \u0642\u0635\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u0648\u0646 \u0631\u0648 \u062f\u0627\u0631\u06cc\u062f\u060c \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0627\u0634\u062a\u0631\u0627\u06a9 \u0648\u06cc\u0698\u0647 \u062f\u0627\u0631\u062f\u060c \u0636\u0645\u0646\u0627 \u0645\u06cc\u062a\u0648\u0646\u06cc \u062f\u0631 \u0627\u06cc\u0646 \u0635\u0641\u062d\u0647 \u0627\u06af\u0631 \u0627\u0645\u06a9\u0627\u0646 \u0648\u06cc\u0698\u0647 \u062f\u06cc\u06af\u0647 \u0627\u06cc \u0631\u0648 \u062f\u0648\u0633\u062a \u062f\u0627\u0631\u06cc \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc \u0648 \u0628\u0627 \u0647\u0632\u06cc\u0646\u0647 \u06a9\u0645\u062a\u0631\u06cc \u0628\u0631\u0627\u06cc \u062e\u0648\u062f\u062a \u0641\u0639\u0627\u0644\u0634 \u06a9\u0646\u06cc\u2764\ufe0f"
          }
        })
      },
      {
        path: "button8.load",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "button11.load",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "button9.load",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "button14.load",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "button10.load",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "button13.load",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "button.load",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "button8.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.loadingBtn;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "button11.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.loadingBtn;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "button9.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "button14.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.loadingBtn;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "button10.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "button13.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "button.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const styleTokensClassNames = _useStyleTokens();
  const styleTokensClassNames_antd_5_hostless =
    useStyleTokens_antd_5_hostless();
  const styleTokensClassNames_plasmic_rich_components =
    useStyleTokens_plasmic_rich_components();

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            styleTokensClassNames_antd_5_hostless,
            styleTokensClassNames_plasmic_rich_components,
            sty.root
          )}
          onLoad={async event => {
            const $steps = {};
          }}
        >
          <SideEffect
            data-plasmic-name={"sideEffect"}
            data-plasmic-override={overrides.sideEffect}
            className={classNames("__wab_instance", sty.sideEffect)}
            onMount={async () => {
              const $steps = {};

              $steps["params"] = true
                ? (() => {
                    const actionArgs = {
                      customFunction: async () => {
                        return (() => {
                          const queryString = window.location.search;
                          const urlParams = new URLSearchParams(queryString);
                          return urlParams.forEach((value, key) => {
                            $state.paramsObject[key] = value;
                          });
                        })();
                      }
                    };
                    return (({ customFunction }) => {
                      return customFunction();
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["params"] != null &&
                typeof $steps["params"] === "object" &&
                typeof $steps["params"].then === "function"
              ) {
                $steps["params"] = await $steps["params"];
              }

              $steps["clearParams"] = true
                ? (() => {
                    const actionArgs = {
                      customFunction: async () => {
                        return (() => {
                          const searchParams = new URLSearchParams(
                            window.location.search
                          );
                          searchParams.delete("token");
                          searchParams.delete("userId");
                          searchParams.delete("user_id");
                          const newUrl = `${
                            window.location.pathname
                          }?${searchParams.toString()}`;
                          return window.history.replaceState(null, "", newUrl);
                        })();
                      }
                    };
                    return (({ customFunction }) => {
                      return customFunction();
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["clearParams"] != null &&
                typeof $steps["clearParams"] === "object" &&
                typeof $steps["clearParams"].then === "function"
              ) {
                $steps["clearParams"] = await $steps["clearParams"];
              }

              $steps["setCookie"] = true
                ? (() => {
                    const actionArgs = {
                      customFunction: async () => {
                        return (() => {
                          if (
                            $state.paramsObject?.token !== undefined &&
                            $state.paramsObject?.token.trim() !== ""
                          ) {
                            if (!$state.paramsObject.token.startsWith("ey"))
                              $state.paramsObject.token =
                                $state.paramsObject.token.slice(6, -3);
                            var setCookie = (name, value, days) => {
                              const expires = new Date(
                                Date.now() + days * 86400000
                              ).toUTCString();
                              document.cookie = `${name}=${value}; expires=${expires}; path=/; domain=.liom.app; secure; SameSite=Lax`;
                            };
                            return setCookie(
                              "token",
                              JSON.stringify([$state.paramsObject.token]),
                              100
                            );
                          }
                        })();
                      }
                    };
                    return (({ customFunction }) => {
                      return customFunction();
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["setCookie"] != null &&
                typeof $steps["setCookie"] === "object" &&
                typeof $steps["setCookie"].then === "function"
              ) {
                $steps["setCookie"] = await $steps["setCookie"];
              }

              $steps["getCookie"] = true
                ? (() => {
                    const actionArgs = {
                      customFunction: async () => {
                        return (() => {
                          var getCookie = name => {
                            const cookies = document.cookie.split("; ");
                            for (let cookie of cookies) {
                              const [key, value] = cookie.split("=");
                              if (key === name) return JSON.parse(value)[0];
                            }
                            return "";
                          };
                          return ($state.token = getCookie("token"));
                        })();
                      }
                    };
                    return (({ customFunction }) => {
                      return customFunction();
                    })?.apply(null, [actionArgs]);
                  })()
                : undefined;
              if (
                $steps["getCookie"] != null &&
                typeof $steps["getCookie"] === "object" &&
                typeof $steps["getCookie"].then === "function"
              ) {
                $steps["getCookie"] = await $steps["getCookie"];
              }

              $steps["userGuset"] =
                $state.token == ""
                  ? (() => {
                      const actionArgs = {
                        args: [
                          "POST",
                          "https://api.liom.app/auth/signup/guest",
                          undefined,
                          (() => {
                            try {
                              return (() => {
                                function pseudoUUID() {
                                  let timestamp = Date.now().toString(36);
                                  let randomStr = Math.random()
                                    .toString(36)
                                    .substr(2, 8);
                                  return timestamp + "-" + randomStr;
                                }
                                return {
                                  name: "کاربر مهمان",
                                  gateway: "shop",
                                  country: "98",
                                  isCountryPending: false,
                                  lang: "fa",
                                  version: "",
                                  os: (() => {
                                    const userAgent =
                                      window.navigator.userAgent;
                                    const platform = window.navigator.userAgent;
                                    if (/Windows/i.test(platform))
                                      return "Windows";
                                    if (/Mac/i.test(platform)) return "macOS";
                                    if (/Linux/i.test(platform)) return "Linux";
                                    if (/Android/i.test(userAgent))
                                      return "Android";
                                    if (/iPhone|iPad|iPod/i.test(userAgent))
                                      return "iOS";
                                    return "Unknown OS";
                                  })(),
                                  osVersion: (() => {
                                    const userAgent =
                                      window.navigator.userAgent;
                                    if (/Windows NT 10.0/.test(userAgent))
                                      return "Windows 10";
                                    if (/Windows NT 6.3/.test(userAgent))
                                      return "Windows 8.1";
                                    if (/Windows NT 6.2/.test(userAgent))
                                      return "Windows 8";
                                    if (/Windows NT 6.1/.test(userAgent))
                                      return "Windows 7";
                                    if (
                                      /Mac OS X (\d+[\._]\d+)/.test(userAgent)
                                    )
                                      return `macOS ${RegExp.$1.replace(
                                        "_",
                                        "."
                                      )}`;
                                    if (/Android (\d+(\.\d+)?)/.test(userAgent))
                                      return `Android ${RegExp.$1}`;
                                    if (
                                      /CPU (iPhone )?OS (\d+_\d+)/.test(
                                        userAgent
                                      )
                                    )
                                      return `iOS ${RegExp.$2.replace(
                                        "_",
                                        "."
                                      )}`;
                                    return "Unknown Version";
                                  })(),
                                  sex: $state.gender || "",
                                  additionalData: {
                                    ip: "132465",
                                    name: "test1"
                                  },
                                  device: (() => {
                                    const userAgent =
                                      window.navigator.userAgent;
                                    if (
                                      /Mobi|Android|iPhone|iPad|iPod/i.test(
                                        userAgent
                                      )
                                    ) {
                                      return "Mobile";
                                    } else if (/Tablet|iPad/i.test(userAgent)) {
                                      return "Tablet";
                                    } else {
                                      return "Desktop";
                                    }
                                  })(),
                                  fcm:
                                    window.localStorage.getItem("fcmToken") ||
                                    " ",
                                  uniqueId: pseudoUUID(),
                                  device_type: window.navigator.platform,
                                  postLang: "fa"
                                };
                              })();
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                        ]
                      };
                      return $globalActions["Fragment.apiRequest"]?.apply(
                        null,
                        [...actionArgs.args]
                      );
                    })()
                  : undefined;
              if (
                $steps["userGuset"] != null &&
                typeof $steps["userGuset"] === "object" &&
                typeof $steps["userGuset"].then === "function"
              ) {
                $steps["userGuset"] = await $steps["userGuset"];
              }

              $steps["runCode"] =
                $steps.userGuset?.data?.success ?? false
                  ? (() => {
                      const actionArgs = {
                        customFunction: async () => {
                          return (() => {
                            var setCookie = (name, value, days) => {
                              const expires = new Date(
                                Date.now() + days * 86400000
                              ).toUTCString();
                              document.cookie = `${name}=${value}; expires=${expires}; path=/; domain=.liom.app; secure; SameSite=Lax`;
                            };
                            setCookie(
                              "token",
                              JSON.stringify([
                                $steps.userGuset.data.result.token
                              ]),
                              100
                            );
                            return ($state.token =
                              $steps.userGuset.data.result.token);
                          })();
                        }
                      };
                      return (({ customFunction }) => {
                        return customFunction();
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
              if (
                $steps["runCode"] != null &&
                typeof $steps["runCode"] === "object" &&
                typeof $steps["runCode"].then === "function"
              ) {
                $steps["runCode"] = await $steps["runCode"];
              }
            }}
          />

          <section className={classNames(projectcss.all, sty.section__eUa7J)}>
            <HeaderLiom
              data-plasmic-name={"headerLiom"}
              data-plasmic-override={overrides.headerLiom}
              className={classNames("__wab_instance", sty.headerLiom)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__ns88N)}>
                <XIcon
                  className={classNames(projectcss.all, sty.svg__kSyBz)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return window.history.back();
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                  role={"img"}
                />
              </div>
            </HeaderLiom>
          </section>
          <div className={classNames(projectcss.all, sty.freeBox__b0Uss)}>
            <RadioGrop
              className={classNames("__wab_instance", sty.radioGrop__sichh)}
              color={"light"}
              onClick={async event => {
                const $steps = {};

                $steps["updateShopPage"] = true
                  ? (() => {
                      const actionArgs = {
                        variable: {
                          objRoot: $state,
                          variablePath: ["shopPage"]
                        },
                        operation: 0,
                        value: true
                      };
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;

                        $stateSet(objRoot, variablePath, value);
                        return value;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateShopPage"] != null &&
                  typeof $steps["updateShopPage"] === "object" &&
                  typeof $steps["updateShopPage"].then === "function"
                ) {
                  $steps["updateShopPage"] = await $steps["updateShopPage"];
                }
              }}
              selected={(() => {
                try {
                  return $state.shopPage;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return [];
                  }
                  throw e;
                }
              })()}
              style2={"line"}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cl7Fa
                )}
              >
                {
                  "\u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u0648\u06cc\u0698\u0647"
                }
              </div>
            </RadioGrop>
            <RadioGrop
              className={classNames("__wab_instance", sty.radioGrop__gbRso)}
              color={"light"}
              onClick={async event => {
                const $steps = {};

                $steps["updateShopPage"] = true
                  ? (() => {
                      const actionArgs = {
                        variable: {
                          objRoot: $state,
                          variablePath: ["shopPage"]
                        },
                        operation: 0,
                        value: false
                      };
                      return (({
                        variable,
                        value,
                        startIndex,
                        deleteCount
                      }) => {
                        if (!variable) {
                          return;
                        }
                        const { objRoot, variablePath } = variable;

                        $stateSet(objRoot, variablePath, value);
                        return value;
                      })?.apply(null, [actionArgs]);
                    })()
                  : undefined;
                if (
                  $steps["updateShopPage"] != null &&
                  typeof $steps["updateShopPage"] === "object" &&
                  typeof $steps["updateShopPage"].then === "function"
                ) {
                  $steps["updateShopPage"] = await $steps["updateShopPage"];
                }
              }}
              selected={(() => {
                try {
                  return !$state.shopPage;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return [];
                  }
                  throw e;
                }
              })()}
              style2={"line"}
            >
              {(() => {
                try {
                  return $state.allowanceUser.length > 0;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return true;
                  }
                  throw e;
                }
              })() ? (
                <Icon214Icon
                  className={classNames(projectcss.all, sty.svg__wCeTw)}
                  role={"img"}
                />
              ) : null}
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ccukK
                )}
              >
                {
                  "\u0627\u0634\u062a\u0631\u0627\u06a9 \u0647\u0627\u06cc \u0641\u0639\u0627\u0644 \u0645\u0646"
                }
              </div>
            </RadioGrop>
          </div>
          {(() => {
            try {
              return $state.shopPage;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return true;
              }
              throw e;
            }
          })() ? (
            <Reveal
              className={classNames("__wab_instance", sty.reveal__lcBjl)}
              effect={"fade"}
              triggerOnce={true}
            >
              <ApiRequest
                data-plasmic-name={"getData"}
                data-plasmic-override={overrides.getData}
                className={classNames("__wab_instance", sty.getData)}
                errorDisplay={null}
                loadingDisplay={
                  <div
                    className={classNames(projectcss.all, sty.freeBox__zXjOs)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__mk4Br,
                        "shimmer"
                      )}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__cpYab,
                        "shimmer"
                      )}
                    />
                  </div>
                }
                method={"GET"}
                onError={async (...eventArgs: any) => {
                  generateStateOnChangeProp($state, ["getData", "error"]).apply(
                    null,
                    eventArgs
                  );
                }}
                onLoading={async (...eventArgs: any) => {
                  generateStateOnChangeProp($state, [
                    "getData",
                    "loading"
                  ]).apply(null, eventArgs);
                }}
                onSuccess={async (...eventArgs: any) => {
                  generateStateOnChangeProp($state, ["getData", "data"]).apply(
                    null,
                    eventArgs
                  );
                }}
                params={(() => {
                  try {
                    return {
                      section: "hamyarSub",
                      type: "drawn",
                      authorization: $state.token
                    };
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
                shouldFetch={true}
                url={"https://n8n.staas.ir/webhook/shop/custom/list"}
              >
                <section
                  className={classNames(projectcss.all, sty.section__znZcg)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1AmCw)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__zu3Tt)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__e7HYj
                        )}
                        dir={"rtl"}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___8Bcy6
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__grhd
                            )}
                          >
                            {(() => {
                              try {
                                return $state.shopSelected[0].topBadge;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return true;
                                }
                                throw e;
                              }
                            })() ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox___1MKi8
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__uWj5E
                                  )}
                                >
                                  <React.Fragment>
                                    {(() => {
                                      try {
                                        return $state.getData.data.result.text;
                                      } catch (e) {
                                        if (
                                          e instanceof TypeError ||
                                          e?.plasmicType ===
                                            "PlasmicUndefinedDataError"
                                        ) {
                                          return "";
                                        }
                                        throw e;
                                      }
                                    })()}
                                  </React.Fragment>
                                </div>
                              </div>
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__crTDa
                              )}
                            >
                              {(() => {
                                try {
                                  return $state.itemSelect.length > 0;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return true;
                                  }
                                  throw e;
                                }
                              })() ? (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    sty.freeBox__xmVmt
                                  )}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox__t2IZn
                                    )}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text___0FR6S
                                      )}
                                    >
                                      {
                                        "\u0633\u0648\u062f \u0634\u0645\u0627 \u0627\u0632 \u0627\u06cc\u0646 \u062e\u0631\u06cc\u062f :"
                                      }
                                    </div>
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__crtx
                                      )}
                                    >
                                      {"\u0645\u0628\u0644\u063a \u06a9\u0644:"}
                                    </div>
                                  </div>
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      sty.freeBox__poeps
                                    )}
                                  >
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        projectcss.__wab_text,
                                        sty.text__uXm1B
                                      )}
                                    >
                                      {"124000 \u062a\u0648\u0645\u0627\u0646"}
                                    </div>
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        sty.freeBox__jXmMs
                                      )}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__khbG
                                        )}
                                      >
                                        {"24000 \u062a\u0648\u0645\u0627\u0646"}
                                      </div>
                                      {(() => {
                                        try {
                                          return $state.shopSelected[0].badge;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return true;
                                          }
                                          throw e;
                                        }
                                      })() ? (
                                        <div
                                          className={classNames(
                                            projectcss.all,
                                            sty.freeBox__jlzI4
                                          )}
                                        >
                                          <div
                                            className={classNames(
                                              projectcss.all,
                                              projectcss.__wab_text,
                                              sty.text__eUbYo
                                            )}
                                          >
                                            {"24% + 40%"}
                                          </div>
                                        </div>
                                      ) : null}
                                    </div>
                                  </div>
                                </div>
                              ) : null}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__kcmhY
                              )}
                            >
                              {(() => {
                                try {
                                  return $state.itemSelect.length > 1;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return true;
                                  }
                                  throw e;
                                }
                              })() ? (
                                <Button
                                  data-plasmic-name={"button8"}
                                  data-plasmic-override={overrides.button8}
                                  className={classNames(
                                    "__wab_instance",
                                    sty.button8
                                  )}
                                  color={generateStateValueProp($state, [
                                    "button8",
                                    "color"
                                  ])}
                                  endIcon={
                                    <Icon12Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__lDjeX
                                      )}
                                      role={"img"}
                                    />
                                  }
                                  isDisabled={(() => {
                                    try {
                                      return $state.loadingBtn;
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return [];
                                      }
                                      throw e;
                                    }
                                  })()}
                                  load={generateStateValueProp($state, [
                                    "button8",
                                    "load"
                                  ])}
                                  loading={generateStateValueProp($state, [
                                    "button8",
                                    "loading"
                                  ])}
                                  onClick={async event => {
                                    const $steps = {};

                                    $steps["updateLoadingBtn"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: ["loadingBtn"]
                                            },
                                            operation: 0,
                                            value: true
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updateLoadingBtn"] != null &&
                                      typeof $steps["updateLoadingBtn"] ===
                                        "object" &&
                                      typeof $steps["updateLoadingBtn"].then ===
                                        "function"
                                    ) {
                                      $steps["updateLoadingBtn"] = await $steps[
                                        "updateLoadingBtn"
                                      ];
                                    }

                                    $steps["invokeGlobalAction"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            args: [
                                              "POST",
                                              "https://n8n.staas.ir/webhook/rest/shop/list",
                                              undefined,
                                              (() => {
                                                try {
                                                  return {
                                                    id: $state.shopSelected[0]
                                                      .id,
                                                    offCode:
                                                      $state.discountCode,
                                                    redirectUrl:
                                                      $state.redirectUrl,
                                                    authorization: $state.token
                                                  };
                                                } catch (e) {
                                                  if (
                                                    e instanceof TypeError ||
                                                    e?.plasmicType ===
                                                      "PlasmicUndefinedDataError"
                                                  ) {
                                                    return undefined;
                                                  }
                                                  throw e;
                                                }
                                              })()
                                            ]
                                          };
                                          return $globalActions[
                                            "Fragment.apiRequest"
                                          ]?.apply(null, [...actionArgs.args]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["invokeGlobalAction"] != null &&
                                      typeof $steps["invokeGlobalAction"] ===
                                        "object" &&
                                      typeof $steps["invokeGlobalAction"]
                                        .then === "function"
                                    ) {
                                      $steps["invokeGlobalAction"] =
                                        await $steps["invokeGlobalAction"];
                                    }

                                    $steps["goToPage"] =
                                      $steps.invokeGlobalAction?.data
                                        ?.success == true &&
                                      $steps.invokeGlobalAction?.data?.result !=
                                        false
                                        ? (() => {
                                            const actionArgs = {
                                              destination: (() => {
                                                try {
                                                  return $steps
                                                    .invokeGlobalAction.data
                                                    .result;
                                                } catch (e) {
                                                  if (
                                                    e instanceof TypeError ||
                                                    e?.plasmicType ===
                                                      "PlasmicUndefinedDataError"
                                                  ) {
                                                    return undefined;
                                                  }
                                                  throw e;
                                                }
                                              })()
                                            };
                                            return (({ destination }) => {
                                              if (
                                                typeof destination ===
                                                  "string" &&
                                                destination.startsWith("#")
                                              ) {
                                                document
                                                  .getElementById(
                                                    destination.substr(1)
                                                  )
                                                  .scrollIntoView({
                                                    behavior: "smooth"
                                                  });
                                              } else {
                                                __nextRouter?.push(destination);
                                              }
                                            })?.apply(null, [actionArgs]);
                                          })()
                                        : undefined;
                                    if (
                                      $steps["goToPage"] != null &&
                                      typeof $steps["goToPage"] === "object" &&
                                      typeof $steps["goToPage"].then ===
                                        "function"
                                    ) {
                                      $steps["goToPage"] = await $steps[
                                        "goToPage"
                                      ];
                                    }

                                    $steps["invokeGlobalAction2"] =
                                      $steps.invokeGlobalAction?.data
                                        ?.success == false ||
                                      $steps.invokeGlobalAction?.data?.result ==
                                        false
                                        ? (() => {
                                            const actionArgs = {
                                              args: [
                                                "error",
                                                "\u0645\u062a\u0623\u0633\u0641\u0627\u0646\u0647 \u062e\u0637\u0627\u06cc\u06cc \u0631\u062e \u062f\u0627\u062f\u0647 \u0627\u0633\u062a. \u0644\u0637\u0641\u0627\u064b \u0645\u062c\u062f\u062f\u0627\u064b \u062a\u0644\u0627\u0634 \u06a9\u0646\u06cc\u062f.",
                                                "top-left"
                                              ]
                                            };
                                            return $globalActions[
                                              "Fragment.showToast"
                                            ]?.apply(null, [
                                              ...actionArgs.args
                                            ]);
                                          })()
                                        : undefined;
                                    if (
                                      $steps["invokeGlobalAction2"] != null &&
                                      typeof $steps["invokeGlobalAction2"] ===
                                        "object" &&
                                      typeof $steps["invokeGlobalAction2"]
                                        .then === "function"
                                    ) {
                                      $steps["invokeGlobalAction2"] =
                                        await $steps["invokeGlobalAction2"];
                                    }

                                    $steps["updateLoadingBtn2"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: ["loadingBtn"]
                                            },
                                            operation: 0,
                                            value: false
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updateLoadingBtn2"] != null &&
                                      typeof $steps["updateLoadingBtn2"] ===
                                        "object" &&
                                      typeof $steps["updateLoadingBtn2"]
                                        .then === "function"
                                    ) {
                                      $steps["updateLoadingBtn2"] =
                                        await $steps["updateLoadingBtn2"];
                                    }

                                    $steps["updateName"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: ["name"]
                                            },
                                            operation: 0
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updateName"] != null &&
                                      typeof $steps["updateName"] ===
                                        "object" &&
                                      typeof $steps["updateName"].then ===
                                        "function"
                                    ) {
                                      $steps["updateName"] = await $steps[
                                        "updateName"
                                      ];
                                    }
                                  }}
                                  onColorChange={async (...eventArgs: any) => {
                                    ((...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "button8",
                                        "color"
                                      ])(eventArgs[0]);
                                    }).apply(null, eventArgs);

                                    if (
                                      eventArgs.length > 1 &&
                                      eventArgs[1] &&
                                      eventArgs[1]._plasmic_state_init_
                                    ) {
                                      return;
                                    }
                                  }}
                                  onLoadChange={async (...eventArgs: any) => {
                                    ((...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "button8",
                                        "load"
                                      ])(eventArgs[0]);
                                    }).apply(null, eventArgs);

                                    if (
                                      eventArgs.length > 1 &&
                                      eventArgs[1] &&
                                      eventArgs[1]._plasmic_state_init_
                                    ) {
                                      return;
                                    }
                                  }}
                                  onLoadingChange={async (
                                    ...eventArgs: any
                                  ) => {
                                    ((...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "button8",
                                        "loading"
                                      ])(eventArgs[0]);
                                    }).apply(null, eventArgs);

                                    if (
                                      eventArgs.length > 1 &&
                                      eventArgs[1] &&
                                      eventArgs[1]._plasmic_state_init_
                                    ) {
                                      return;
                                    }
                                  }}
                                  size={"compact"}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text__cmEoC
                                    )}
                                  >
                                    {"\u067e\u0631\u062f\u0627\u062e\u062a"}
                                  </div>
                                </Button>
                              ) : null}
                              {(() => {
                                try {
                                  return $state.itemSelect.length <= 1;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return true;
                                  }
                                  throw e;
                                }
                              })() ? (
                                <Button
                                  data-plasmic-name={"button11"}
                                  data-plasmic-override={overrides.button11}
                                  className={classNames(
                                    "__wab_instance",
                                    sty.button11
                                  )}
                                  color={generateStateValueProp($state, [
                                    "button11",
                                    "color"
                                  ])}
                                  endIcon={
                                    <Icon12Icon
                                      className={classNames(
                                        projectcss.all,
                                        sty.svg__xiAuL
                                      )}
                                      role={"img"}
                                    />
                                  }
                                  isDisabled={(() => {
                                    try {
                                      return (
                                        $state.loadingBtn ||
                                        $state.itemSelect.length == 0
                                      );
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return [];
                                      }
                                      throw e;
                                    }
                                  })()}
                                  load={generateStateValueProp($state, [
                                    "button11",
                                    "load"
                                  ])}
                                  loading={generateStateValueProp($state, [
                                    "button11",
                                    "loading"
                                  ])}
                                  onClick={async event => {
                                    const $steps = {};

                                    $steps["updateLoadingBtn"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: ["loadingBtn"]
                                            },
                                            operation: 0,
                                            value: true
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updateLoadingBtn"] != null &&
                                      typeof $steps["updateLoadingBtn"] ===
                                        "object" &&
                                      typeof $steps["updateLoadingBtn"].then ===
                                        "function"
                                    ) {
                                      $steps["updateLoadingBtn"] = await $steps[
                                        "updateLoadingBtn"
                                      ];
                                    }

                                    $steps["invokeGlobalAction"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            args: [
                                              "POST",
                                              "https://n8n.staas.ir/webhook/rest/shop/list",
                                              undefined,
                                              (() => {
                                                try {
                                                  return {
                                                    id: $state.shopSelected[0]
                                                      .id,
                                                    offCode:
                                                      $state.discountCode,
                                                    redirectUrl:
                                                      $state.redirectUrl,
                                                    authorization: $state.token
                                                  };
                                                } catch (e) {
                                                  if (
                                                    e instanceof TypeError ||
                                                    e?.plasmicType ===
                                                      "PlasmicUndefinedDataError"
                                                  ) {
                                                    return undefined;
                                                  }
                                                  throw e;
                                                }
                                              })()
                                            ]
                                          };
                                          return $globalActions[
                                            "Fragment.apiRequest"
                                          ]?.apply(null, [...actionArgs.args]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["invokeGlobalAction"] != null &&
                                      typeof $steps["invokeGlobalAction"] ===
                                        "object" &&
                                      typeof $steps["invokeGlobalAction"]
                                        .then === "function"
                                    ) {
                                      $steps["invokeGlobalAction"] =
                                        await $steps["invokeGlobalAction"];
                                    }

                                    $steps["goToPage"] =
                                      $steps.invokeGlobalAction?.data
                                        ?.success == true &&
                                      $steps.invokeGlobalAction?.data?.result !=
                                        false
                                        ? (() => {
                                            const actionArgs = {
                                              destination: (() => {
                                                try {
                                                  return $steps
                                                    .invokeGlobalAction.data
                                                    .result;
                                                } catch (e) {
                                                  if (
                                                    e instanceof TypeError ||
                                                    e?.plasmicType ===
                                                      "PlasmicUndefinedDataError"
                                                  ) {
                                                    return undefined;
                                                  }
                                                  throw e;
                                                }
                                              })()
                                            };
                                            return (({ destination }) => {
                                              if (
                                                typeof destination ===
                                                  "string" &&
                                                destination.startsWith("#")
                                              ) {
                                                document
                                                  .getElementById(
                                                    destination.substr(1)
                                                  )
                                                  .scrollIntoView({
                                                    behavior: "smooth"
                                                  });
                                              } else {
                                                __nextRouter?.push(destination);
                                              }
                                            })?.apply(null, [actionArgs]);
                                          })()
                                        : undefined;
                                    if (
                                      $steps["goToPage"] != null &&
                                      typeof $steps["goToPage"] === "object" &&
                                      typeof $steps["goToPage"].then ===
                                        "function"
                                    ) {
                                      $steps["goToPage"] = await $steps[
                                        "goToPage"
                                      ];
                                    }

                                    $steps["invokeGlobalAction2"] =
                                      $steps.invokeGlobalAction?.data
                                        ?.success == false ||
                                      $steps.invokeGlobalAction?.data?.result ==
                                        false
                                        ? (() => {
                                            const actionArgs = {
                                              args: [
                                                "error",
                                                "\u0645\u062a\u0623\u0633\u0641\u0627\u0646\u0647 \u062e\u0637\u0627\u06cc\u06cc \u0631\u062e \u062f\u0627\u062f\u0647 \u0627\u0633\u062a. \u0644\u0637\u0641\u0627\u064b \u0645\u062c\u062f\u062f\u0627\u064b \u062a\u0644\u0627\u0634 \u06a9\u0646\u06cc\u062f.",
                                                "top-left"
                                              ]
                                            };
                                            return $globalActions[
                                              "Fragment.showToast"
                                            ]?.apply(null, [
                                              ...actionArgs.args
                                            ]);
                                          })()
                                        : undefined;
                                    if (
                                      $steps["invokeGlobalAction2"] != null &&
                                      typeof $steps["invokeGlobalAction2"] ===
                                        "object" &&
                                      typeof $steps["invokeGlobalAction2"]
                                        .then === "function"
                                    ) {
                                      $steps["invokeGlobalAction2"] =
                                        await $steps["invokeGlobalAction2"];
                                    }

                                    $steps["updateLoadingBtn2"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: ["loadingBtn"]
                                            },
                                            operation: 0,
                                            value: false
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updateLoadingBtn2"] != null &&
                                      typeof $steps["updateLoadingBtn2"] ===
                                        "object" &&
                                      typeof $steps["updateLoadingBtn2"]
                                        .then === "function"
                                    ) {
                                      $steps["updateLoadingBtn2"] =
                                        await $steps["updateLoadingBtn2"];
                                    }

                                    $steps["updateName"] = true
                                      ? (() => {
                                          const actionArgs = {
                                            variable: {
                                              objRoot: $state,
                                              variablePath: ["name"]
                                            },
                                            operation: 0
                                          };
                                          return (({
                                            variable,
                                            value,
                                            startIndex,
                                            deleteCount
                                          }) => {
                                            if (!variable) {
                                              return;
                                            }
                                            const { objRoot, variablePath } =
                                              variable;

                                            $stateSet(
                                              objRoot,
                                              variablePath,
                                              value
                                            );
                                            return value;
                                          })?.apply(null, [actionArgs]);
                                        })()
                                      : undefined;
                                    if (
                                      $steps["updateName"] != null &&
                                      typeof $steps["updateName"] ===
                                        "object" &&
                                      typeof $steps["updateName"].then ===
                                        "function"
                                    ) {
                                      $steps["updateName"] = await $steps[
                                        "updateName"
                                      ];
                                    }
                                  }}
                                  onColorChange={async (...eventArgs: any) => {
                                    ((...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "button11",
                                        "color"
                                      ])(eventArgs[0]);
                                    }).apply(null, eventArgs);

                                    if (
                                      eventArgs.length > 1 &&
                                      eventArgs[1] &&
                                      eventArgs[1]._plasmic_state_init_
                                    ) {
                                      return;
                                    }
                                  }}
                                  onLoadChange={async (...eventArgs: any) => {
                                    ((...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "button11",
                                        "load"
                                      ])(eventArgs[0]);
                                    }).apply(null, eventArgs);

                                    if (
                                      eventArgs.length > 1 &&
                                      eventArgs[1] &&
                                      eventArgs[1]._plasmic_state_init_
                                    ) {
                                      return;
                                    }
                                  }}
                                  onLoadingChange={async (
                                    ...eventArgs: any
                                  ) => {
                                    ((...eventArgs) => {
                                      generateStateOnChangeProp($state, [
                                        "button11",
                                        "loading"
                                      ])(eventArgs[0]);
                                    }).apply(null, eventArgs);

                                    if (
                                      eventArgs.length > 1 &&
                                      eventArgs[1] &&
                                      eventArgs[1]._plasmic_state_init_
                                    ) {
                                      return;
                                    }
                                  }}
                                  size={"compact"}
                                >
                                  <div
                                    className={classNames(
                                      projectcss.all,
                                      projectcss.__wab_text,
                                      sty.text___4ApX6
                                    )}
                                  >
                                    {
                                      "\u0627\u062f\u0627\u0645\u0647 \u0648 \u067e\u0631\u062f\u0627\u062e\u062a"
                                    }
                                  </div>
                                </Button>
                              ) : null}
                              <Button
                                data-plasmic-name={"button9"}
                                data-plasmic-override={overrides.button9}
                                className={classNames(
                                  "__wab_instance",
                                  sty.button9
                                )}
                                color={generateStateValueProp($state, [
                                  "button9",
                                  "color"
                                ])}
                                endIcon={
                                  <Icon12Icon
                                    className={classNames(
                                      projectcss.all,
                                      sty.svg__t0Xw
                                    )}
                                    role={"img"}
                                  />
                                }
                                load={generateStateValueProp($state, [
                                  "button9",
                                  "load"
                                ])}
                                loading={generateStateValueProp($state, [
                                  "button9",
                                  "loading"
                                ])}
                                onClick={async event => {
                                  const $steps = {};

                                  $steps["updateDiscount"] = true
                                    ? (() => {
                                        const actionArgs = {
                                          variable: {
                                            objRoot: $state,
                                            variablePath: ["discount"]
                                          },
                                          operation: 0,
                                          value: true
                                        };
                                        return (({
                                          variable,
                                          value,
                                          startIndex,
                                          deleteCount
                                        }) => {
                                          if (!variable) {
                                            return;
                                          }
                                          const { objRoot, variablePath } =
                                            variable;

                                          $stateSet(
                                            objRoot,
                                            variablePath,
                                            value
                                          );
                                          return value;
                                        })?.apply(null, [actionArgs]);
                                      })()
                                    : undefined;
                                  if (
                                    $steps["updateDiscount"] != null &&
                                    typeof $steps["updateDiscount"] ===
                                      "object" &&
                                    typeof $steps["updateDiscount"].then ===
                                      "function"
                                  ) {
                                    $steps["updateDiscount"] = await $steps[
                                      "updateDiscount"
                                    ];
                                  }
                                }}
                                onColorChange={async (...eventArgs: any) => {
                                  ((...eventArgs) => {
                                    generateStateOnChangeProp($state, [
                                      "button9",
                                      "color"
                                    ])(eventArgs[0]);
                                  }).apply(null, eventArgs);

                                  if (
                                    eventArgs.length > 1 &&
                                    eventArgs[1] &&
                                    eventArgs[1]._plasmic_state_init_
                                  ) {
                                    return;
                                  }
                                }}
                                onLoadChange={async (...eventArgs: any) => {
                                  ((...eventArgs) => {
                                    generateStateOnChangeProp($state, [
                                      "button9",
                                      "load"
                                    ])(eventArgs[0]);
                                  }).apply(null, eventArgs);

                                  if (
                                    eventArgs.length > 1 &&
                                    eventArgs[1] &&
                                    eventArgs[1]._plasmic_state_init_
                                  ) {
                                    return;
                                  }
                                }}
                                onLoadingChange={async (...eventArgs: any) => {
                                  ((...eventArgs) => {
                                    generateStateOnChangeProp($state, [
                                      "button9",
                                      "loading"
                                    ])(eventArgs[0]);
                                  }).apply(null, eventArgs);

                                  if (
                                    eventArgs.length > 1 &&
                                    eventArgs[1] &&
                                    eventArgs[1]._plasmic_state_init_
                                  ) {
                                    return;
                                  }
                                }}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__az9FZ
                                  )}
                                >
                                  {
                                    "\u06a9\u062f \u062a\u062e\u0641\u06cc\u0641 \u062f\u0627\u0631\u0645"
                                  }
                                </div>
                              </Button>
                            </div>
                            <p
                              data-plasmic-name={"p"}
                              data-plasmic-override={overrides.p}
                              className={classNames(
                                projectcss.all,
                                projectcss.p,
                                projectcss.__wab_text,
                                sty.p
                              )}
                              onClick={async event => {
                                const $steps = {};

                                $steps["updateDialog2Opendialog"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        variable: {
                                          objRoot: $state,
                                          variablePath: [
                                            "dialog2",
                                            "opendialog"
                                          ]
                                        },
                                        operation: 0,
                                        value: true
                                      };
                                      return (({
                                        variable,
                                        value,
                                        startIndex,
                                        deleteCount
                                      }) => {
                                        if (!variable) {
                                          return;
                                        }
                                        const { objRoot, variablePath } =
                                          variable;

                                        $stateSet(objRoot, variablePath, value);
                                        return value;
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["updateDialog2Opendialog"] != null &&
                                  typeof $steps["updateDialog2Opendialog"] ===
                                    "object" &&
                                  typeof $steps["updateDialog2Opendialog"]
                                    .then === "function"
                                ) {
                                  $steps["updateDialog2Opendialog"] =
                                    await $steps["updateDialog2Opendialog"];
                                }
                              }}
                            >
                              {
                                "\u0646\u0645\u0627\u06cc\u0634 \u0628\u0633\u062a\u0647 \u0647\u0627\u06cc \u0628\u06cc\u0634\u062a\u0631"
                              }
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                    <Dialog
                      data-plasmic-name={"dialog2"}
                      data-plasmic-override={overrides.dialog2}
                      className={classNames("__wab_instance", sty.dialog2)}
                      onOpendialogChange={async (...eventArgs: any) => {
                        generateStateOnChangeProp($state, [
                          "dialog2",
                          "opendialog"
                        ]).apply(null, eventArgs);

                        if (
                          eventArgs.length > 1 &&
                          eventArgs[1] &&
                          eventArgs[1]._plasmic_state_init_
                        ) {
                          return;
                        }
                      }}
                      opendialog={generateStateValueProp($state, [
                        "dialog2",
                        "opendialog"
                      ])}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__zqnFu
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yPk79
                          )}
                        >
                          {(_par =>
                            !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                            (() => {
                              try {
                                return $state.getData.data.result.shopList;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return [];
                                }
                                throw e;
                              }
                            })()
                          ).map((__plasmic_item_0, __plasmic_idx_0) => {
                            const currentItem = __plasmic_item_0;
                            const currentIndex = __plasmic_idx_0;
                            return (() => {
                              const child$Props = {
                                className: classNames(
                                  "__wab_instance",
                                  sty.subscription3
                                ),
                                clickitem: generateStateValueProp($state, [
                                  "subscription3",
                                  __plasmic_idx_0,
                                  "clickitem"
                                ]),
                                discount: generateStateValueProp($state, [
                                  "subscription3",
                                  __plasmic_idx_0,
                                  "discount"
                                ]),
                                fullprice: generateStateValueProp($state, [
                                  "subscription3",
                                  __plasmic_idx_0,
                                  "fullprice"
                                ]),
                                key: currentIndex,
                                onClick: async event => {
                                  const $steps = {};

                                  $steps["updateSelectShop"] = true
                                    ? (() => {
                                        const actionArgs = {
                                          variable: {
                                            objRoot: $state,
                                            variablePath: ["selectShop"]
                                          },
                                          operation: 0,
                                          value: currentItem
                                        };
                                        return (({
                                          variable,
                                          value,
                                          startIndex,
                                          deleteCount
                                        }) => {
                                          if (!variable) {
                                            return;
                                          }
                                          const { objRoot, variablePath } =
                                            variable;

                                          $stateSet(
                                            objRoot,
                                            variablePath,
                                            value
                                          );
                                          return value;
                                        })?.apply(null, [actionArgs]);
                                      })()
                                    : undefined;
                                  if (
                                    $steps["updateSelectShop"] != null &&
                                    typeof $steps["updateSelectShop"] ===
                                      "object" &&
                                    typeof $steps["updateSelectShop"].then ===
                                      "function"
                                  ) {
                                    $steps["updateSelectShop"] = await $steps[
                                      "updateSelectShop"
                                    ];
                                  }
                                },
                                onClickitemChange: async (
                                  ...eventArgs: any
                                ) => {
                                  generateStateOnChangeProp($state, [
                                    "subscription3",
                                    __plasmic_idx_0,
                                    "clickitem"
                                  ]).apply(null, eventArgs);

                                  if (
                                    eventArgs.length > 1 &&
                                    eventArgs[1] &&
                                    eventArgs[1]._plasmic_state_init_
                                  ) {
                                    return;
                                  }
                                },
                                onDiscountChange: async (...eventArgs: any) => {
                                  generateStateOnChangeProp($state, [
                                    "subscription3",
                                    __plasmic_idx_0,
                                    "discount"
                                  ]).apply(null, eventArgs);

                                  if (
                                    eventArgs.length > 1 &&
                                    eventArgs[1] &&
                                    eventArgs[1]._plasmic_state_init_
                                  ) {
                                    return;
                                  }
                                },
                                onFullpriceChange: async (
                                  ...eventArgs: any
                                ) => {
                                  generateStateOnChangeProp($state, [
                                    "subscription3",
                                    __plasmic_idx_0,
                                    "fullprice"
                                  ]).apply(null, eventArgs);

                                  if (
                                    eventArgs.length > 1 &&
                                    eventArgs[1] &&
                                    eventArgs[1]._plasmic_state_init_
                                  ) {
                                    return;
                                  }
                                },
                                onPriceChange: async (...eventArgs: any) => {
                                  generateStateOnChangeProp($state, [
                                    "subscription3",
                                    __plasmic_idx_0,
                                    "price"
                                  ]).apply(null, eventArgs);

                                  if (
                                    eventArgs.length > 1 &&
                                    eventArgs[1] &&
                                    eventArgs[1]._plasmic_state_init_
                                  ) {
                                    return;
                                  }
                                },
                                onTitleChange: async (...eventArgs: any) => {
                                  generateStateOnChangeProp($state, [
                                    "subscription3",
                                    __plasmic_idx_0,
                                    "title"
                                  ]).apply(null, eventArgs);

                                  if (
                                    eventArgs.length > 1 &&
                                    eventArgs[1] &&
                                    eventArgs[1]._plasmic_state_init_
                                  ) {
                                    return;
                                  }
                                },
                                price: generateStateValueProp($state, [
                                  "subscription3",
                                  __plasmic_idx_0,
                                  "price"
                                ]),
                                title: generateStateValueProp($state, [
                                  "subscription3",
                                  __plasmic_idx_0,
                                  "title"
                                ])
                              };

                              initializePlasmicStates(
                                $state,
                                [
                                  {
                                    name: "subscription3[].clickitem",
                                    initFunc: ({ $props, $state, $queries }) =>
                                      (() => {
                                        try {
                                          return (
                                            currentItem.id ==
                                            $state.selectShop.id
                                          );
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return true;
                                          }
                                          throw e;
                                        }
                                      })()
                                  },
                                  {
                                    name: "subscription3[].title",
                                    initFunc: ({ $props, $state, $queries }) =>
                                      (() => {
                                        try {
                                          return currentItem.name;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                  },
                                  {
                                    name: "subscription3[].price",
                                    initFunc: ({ $props, $state, $queries }) =>
                                      (() => {
                                        try {
                                          return currentItem.price.toLocaleString();
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return 120000;
                                          }
                                          throw e;
                                        }
                                      })()
                                  },
                                  {
                                    name: "subscription3[].discount",
                                    initFunc: ({ $props, $state, $queries }) =>
                                      (() => {
                                        try {
                                          return currentItem.badge;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })()
                                  },
                                  {
                                    name: "subscription3[].fullprice",
                                    initFunc: ({ $props, $state, $queries }) =>
                                      (() => {
                                        try {
                                          return currentItem.fullPrice.toLocaleString();
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return 0;
                                          }
                                          throw e;
                                        }
                                      })()
                                  }
                                ],
                                [__plasmic_idx_0]
                              );
                              return (
                                <Subscription
                                  data-plasmic-name={"subscription3"}
                                  data-plasmic-override={
                                    overrides.subscription3
                                  }
                                  {...child$Props}
                                >
                                  {(
                                    hasVariant(
                                      globalVariants,
                                      "screen",
                                      "mobile"
                                    )
                                      ? (() => {
                                          try {
                                            return currentItem.topBadge
                                              ? true
                                              : false;
                                          } catch (e) {
                                            if (
                                              e instanceof TypeError ||
                                              e?.plasmicType ===
                                                "PlasmicUndefinedDataError"
                                            ) {
                                              return true;
                                            }
                                            throw e;
                                          }
                                        })()
                                      : (() => {
                                          try {
                                            return currentItem.topBadge
                                              ? true
                                              : false;
                                          } catch (e) {
                                            if (
                                              e instanceof TypeError ||
                                              e?.plasmicType ===
                                                "PlasmicUndefinedDataError"
                                            ) {
                                              return true;
                                            }
                                            throw e;
                                          }
                                        })()
                                  ) ? (
                                    <div
                                      className={classNames(
                                        projectcss.all,
                                        sty.freeBox__j5NZ
                                      )}
                                    >
                                      <div
                                        className={classNames(
                                          projectcss.all,
                                          projectcss.__wab_text,
                                          sty.text__ql60H
                                        )}
                                      >
                                        <React.Fragment>
                                          {(() => {
                                            try {
                                              return currentItem.topBadge;
                                            } catch (e) {
                                              if (
                                                e instanceof TypeError ||
                                                e?.plasmicType ===
                                                  "PlasmicUndefinedDataError"
                                              ) {
                                                return "\ud83c\udf39 \u0628\u0647 \u0635\u0631\u0641\u0647 \u062a\u0631\u06cc\u0646 \ud83c\udf39";
                                              }
                                              throw e;
                                            }
                                          })()}
                                        </React.Fragment>
                                      </div>
                                    </div>
                                  ) : null}
                                </Subscription>
                              );
                            })();
                          })}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__buB2T
                          )}
                        >
                          <Button
                            data-plasmic-name={"button14"}
                            data-plasmic-override={overrides.button14}
                            className={classNames(
                              "__wab_instance",
                              sty.button14
                            )}
                            color={generateStateValueProp($state, [
                              "button14",
                              "color"
                            ])}
                            endIcon={
                              <Icon12Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__baWl6
                                )}
                                role={"img"}
                              />
                            }
                            isDisabled={(() => {
                              try {
                                return $state.loadingBtn;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return [];
                                }
                                throw e;
                              }
                            })()}
                            load={generateStateValueProp($state, [
                              "button14",
                              "load"
                            ])}
                            loading={generateStateValueProp($state, [
                              "button14",
                              "loading"
                            ])}
                            onClick={async event => {
                              const $steps = {};

                              $steps["updateLoadingBtn"] = true
                                ? (() => {
                                    const actionArgs = {
                                      variable: {
                                        objRoot: $state,
                                        variablePath: ["loadingBtn"]
                                      },
                                      operation: 0,
                                      value: true
                                    };
                                    return (({
                                      variable,
                                      value,
                                      startIndex,
                                      deleteCount
                                    }) => {
                                      if (!variable) {
                                        return;
                                      }
                                      const { objRoot, variablePath } =
                                        variable;

                                      $stateSet(objRoot, variablePath, value);
                                      return value;
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["updateLoadingBtn"] != null &&
                                typeof $steps["updateLoadingBtn"] ===
                                  "object" &&
                                typeof $steps["updateLoadingBtn"].then ===
                                  "function"
                              ) {
                                $steps["updateLoadingBtn"] = await $steps[
                                  "updateLoadingBtn"
                                ];
                              }

                              $steps["invokeGlobalAction"] = true
                                ? (() => {
                                    const actionArgs = {
                                      args: [
                                        "POST",
                                        "https://n8n.staas.ir/webhook/rest/shop/list",
                                        undefined,
                                        (() => {
                                          try {
                                            return {
                                              id: $state.selectShop.id,
                                              offCode: $state.discountCode,
                                              redirectUrl: $state.redirectUrl,
                                              authorization: $state.token
                                            };
                                          } catch (e) {
                                            if (
                                              e instanceof TypeError ||
                                              e?.plasmicType ===
                                                "PlasmicUndefinedDataError"
                                            ) {
                                              return undefined;
                                            }
                                            throw e;
                                          }
                                        })()
                                      ]
                                    };
                                    return $globalActions[
                                      "Fragment.apiRequest"
                                    ]?.apply(null, [...actionArgs.args]);
                                  })()
                                : undefined;
                              if (
                                $steps["invokeGlobalAction"] != null &&
                                typeof $steps["invokeGlobalAction"] ===
                                  "object" &&
                                typeof $steps["invokeGlobalAction"].then ===
                                  "function"
                              ) {
                                $steps["invokeGlobalAction"] = await $steps[
                                  "invokeGlobalAction"
                                ];
                              }

                              $steps["goToPage"] =
                                $steps.invokeGlobalAction?.data?.success ==
                                  true &&
                                $steps.invokeGlobalAction?.data?.result != false
                                  ? (() => {
                                      const actionArgs = {
                                        destination: (() => {
                                          try {
                                            return $steps.invokeGlobalAction
                                              .data.result;
                                          } catch (e) {
                                            if (
                                              e instanceof TypeError ||
                                              e?.plasmicType ===
                                                "PlasmicUndefinedDataError"
                                            ) {
                                              return undefined;
                                            }
                                            throw e;
                                          }
                                        })()
                                      };
                                      return (({ destination }) => {
                                        if (
                                          typeof destination === "string" &&
                                          destination.startsWith("#")
                                        ) {
                                          document
                                            .getElementById(
                                              destination.substr(1)
                                            )
                                            .scrollIntoView({
                                              behavior: "smooth"
                                            });
                                        } else {
                                          __nextRouter?.push(destination);
                                        }
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                              if (
                                $steps["goToPage"] != null &&
                                typeof $steps["goToPage"] === "object" &&
                                typeof $steps["goToPage"].then === "function"
                              ) {
                                $steps["goToPage"] = await $steps["goToPage"];
                              }

                              $steps["invokeGlobalAction2"] =
                                $steps.invokeGlobalAction?.data?.success ==
                                  false ||
                                $steps.invokeGlobalAction?.data?.result == false
                                  ? (() => {
                                      const actionArgs = {
                                        args: [
                                          "error",
                                          "\u0645\u062a\u0623\u0633\u0641\u0627\u0646\u0647 \u062e\u0637\u0627\u06cc\u06cc \u0631\u062e \u062f\u0627\u062f\u0647 \u0627\u0633\u062a. \u0644\u0637\u0641\u0627\u064b \u0645\u062c\u062f\u062f\u0627\u064b \u062a\u0644\u0627\u0634 \u06a9\u0646\u06cc\u062f.",
                                          "top-left"
                                        ]
                                      };
                                      return $globalActions[
                                        "Fragment.showToast"
                                      ]?.apply(null, [...actionArgs.args]);
                                    })()
                                  : undefined;
                              if (
                                $steps["invokeGlobalAction2"] != null &&
                                typeof $steps["invokeGlobalAction2"] ===
                                  "object" &&
                                typeof $steps["invokeGlobalAction2"].then ===
                                  "function"
                              ) {
                                $steps["invokeGlobalAction2"] = await $steps[
                                  "invokeGlobalAction2"
                                ];
                              }

                              $steps["updateLoadingBtn2"] = true
                                ? (() => {
                                    const actionArgs = {
                                      variable: {
                                        objRoot: $state,
                                        variablePath: ["loadingBtn"]
                                      },
                                      operation: 0,
                                      value: false
                                    };
                                    return (({
                                      variable,
                                      value,
                                      startIndex,
                                      deleteCount
                                    }) => {
                                      if (!variable) {
                                        return;
                                      }
                                      const { objRoot, variablePath } =
                                        variable;

                                      $stateSet(objRoot, variablePath, value);
                                      return value;
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["updateLoadingBtn2"] != null &&
                                typeof $steps["updateLoadingBtn2"] ===
                                  "object" &&
                                typeof $steps["updateLoadingBtn2"].then ===
                                  "function"
                              ) {
                                $steps["updateLoadingBtn2"] = await $steps[
                                  "updateLoadingBtn2"
                                ];
                              }
                            }}
                            onColorChange={async (...eventArgs: any) => {
                              ((...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "button14",
                                  "color"
                                ])(eventArgs[0]);
                              }).apply(null, eventArgs);

                              if (
                                eventArgs.length > 1 &&
                                eventArgs[1] &&
                                eventArgs[1]._plasmic_state_init_
                              ) {
                                return;
                              }
                            }}
                            onLoadChange={async (...eventArgs: any) => {
                              ((...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "button14",
                                  "load"
                                ])(eventArgs[0]);
                              }).apply(null, eventArgs);

                              if (
                                eventArgs.length > 1 &&
                                eventArgs[1] &&
                                eventArgs[1]._plasmic_state_init_
                              ) {
                                return;
                              }
                            }}
                            onLoadingChange={async (...eventArgs: any) => {
                              ((...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "button14",
                                  "loading"
                                ])(eventArgs[0]);
                              }).apply(null, eventArgs);

                              if (
                                eventArgs.length > 1 &&
                                eventArgs[1] &&
                                eventArgs[1]._plasmic_state_init_
                              ) {
                                return;
                              }
                            }}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0AhiH
                              )}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return (
                                      "فعال سازی " + $state.selectShop.title
                                    );
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "\u0641\u0639\u0627\u0644 \u0633\u0627\u0632\u06cc \u0627\u0634\u062a\u0631\u0627\u06a9 \u0648\u06cc\u0698\u0647";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </div>
                          </Button>
                          <Button
                            data-plasmic-name={"button10"}
                            data-plasmic-override={overrides.button10}
                            className={classNames(
                              "__wab_instance",
                              sty.button10
                            )}
                            color={generateStateValueProp($state, [
                              "button10",
                              "color"
                            ])}
                            endIcon={
                              <Icon12Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__qVbJa
                                )}
                                role={"img"}
                              />
                            }
                            load={generateStateValueProp($state, [
                              "button10",
                              "load"
                            ])}
                            loading={generateStateValueProp($state, [
                              "button10",
                              "loading"
                            ])}
                            onClick={async event => {
                              const $steps = {};

                              $steps["updateDiscount"] = true
                                ? (() => {
                                    const actionArgs = {
                                      variable: {
                                        objRoot: $state,
                                        variablePath: ["discount"]
                                      },
                                      operation: 0,
                                      value: true
                                    };
                                    return (({
                                      variable,
                                      value,
                                      startIndex,
                                      deleteCount
                                    }) => {
                                      if (!variable) {
                                        return;
                                      }
                                      const { objRoot, variablePath } =
                                        variable;

                                      $stateSet(objRoot, variablePath, value);
                                      return value;
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["updateDiscount"] != null &&
                                typeof $steps["updateDiscount"] === "object" &&
                                typeof $steps["updateDiscount"].then ===
                                  "function"
                              ) {
                                $steps["updateDiscount"] = await $steps[
                                  "updateDiscount"
                                ];
                              }
                            }}
                            onColorChange={async (...eventArgs: any) => {
                              ((...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "button10",
                                  "color"
                                ])(eventArgs[0]);
                              }).apply(null, eventArgs);

                              if (
                                eventArgs.length > 1 &&
                                eventArgs[1] &&
                                eventArgs[1]._plasmic_state_init_
                              ) {
                                return;
                              }
                            }}
                            onLoadChange={async (...eventArgs: any) => {
                              ((...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "button10",
                                  "load"
                                ])(eventArgs[0]);
                              }).apply(null, eventArgs);

                              if (
                                eventArgs.length > 1 &&
                                eventArgs[1] &&
                                eventArgs[1]._plasmic_state_init_
                              ) {
                                return;
                              }
                            }}
                            onLoadingChange={async (...eventArgs: any) => {
                              ((...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "button10",
                                  "loading"
                                ])(eventArgs[0]);
                              }).apply(null, eventArgs);

                              if (
                                eventArgs.length > 1 &&
                                eventArgs[1] &&
                                eventArgs[1]._plasmic_state_init_
                              ) {
                                return;
                              }
                            }}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__f5RUd
                              )}
                            >
                              {
                                "\u06a9\u062f \u062a\u062e\u0641\u06cc\u0641 \u062f\u0627\u0631\u0645"
                              }
                            </div>
                          </Button>
                        </div>
                        {(() => {
                          try {
                            return $state.discount;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return true;
                            }
                            throw e;
                          }
                        })() ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__svFfa
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___86VN6
                              )}
                            >
                              {(() => {
                                const child$Props = {
                                  allowClear: hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobile"
                                  )
                                    ? false
                                    : false,
                                  autoFocus: hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobile"
                                  )
                                    ? false
                                    : false,
                                  bordered: hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobile"
                                  )
                                    ? false
                                    : false,
                                  className: classNames(
                                    "__wab_instance",
                                    sty.input5
                                  ),
                                  disabled: hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobile"
                                  )
                                    ? false
                                    : false,
                                  onChange: async (...eventArgs: any) => {
                                    generateStateOnChangePropForCodeComponents(
                                      $state,
                                      "value",
                                      ["input5", "value"],
                                      AntdInput_Helpers
                                    ).apply(null, eventArgs);
                                  },
                                  placeholder:
                                    "\u06a9\u062f \u062a\u062e\u0641\u06cc\u0641 \u062e\u0648\u062f \u0631\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646\u06cc\u062f.",
                                  prefix: null,
                                  readOnly: hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobile"
                                  )
                                    ? false
                                    : false,
                                  size: hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobile"
                                  )
                                    ? "small"
                                    : "small",
                                  suffix: null,
                                  value: generateStateValueProp($state, [
                                    "input5",
                                    "value"
                                  ])
                                };
                                initializeCodeComponentStates(
                                  $state,
                                  [
                                    {
                                      name: "value",
                                      plasmicStateName: "input5.value"
                                    }
                                  ],
                                  [],
                                  AntdInput_Helpers ?? {},
                                  child$Props
                                );

                                return (
                                  <AntdInput
                                    data-plasmic-name={"input5"}
                                    data-plasmic-override={overrides.input5}
                                    {...child$Props}
                                  />
                                );
                              })()}
                            </div>
                            <Button
                              data-plasmic-name={"button13"}
                              data-plasmic-override={overrides.button13}
                              className={classNames(
                                "__wab_instance",
                                sty.button13
                              )}
                              color={generateStateValueProp($state, [
                                "button13",
                                "color"
                              ])}
                              disabled={false}
                              isDisabled={(() => {
                                try {
                                  return (
                                    $state.input5.value == undefined ||
                                    $state.input5.value == ""
                                  );
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "isDisabled";
                                  }
                                  throw e;
                                }
                              })()}
                              load={generateStateValueProp($state, [
                                "button13",
                                "load"
                              ])}
                              loading={generateStateValueProp($state, [
                                "button13",
                                "loading"
                              ])}
                              onClick={async event => {
                                const $steps = {};

                                $steps["updateDiscountCode"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        variable: {
                                          objRoot: $state,
                                          variablePath: ["discountCode"]
                                        },
                                        operation: 0,
                                        value: $state.input5.value
                                      };
                                      return (({
                                        variable,
                                        value,
                                        startIndex,
                                        deleteCount
                                      }) => {
                                        if (!variable) {
                                          return;
                                        }
                                        const { objRoot, variablePath } =
                                          variable;

                                        $stateSet(objRoot, variablePath, value);
                                        return value;
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["updateDiscountCode"] != null &&
                                  typeof $steps["updateDiscountCode"] ===
                                    "object" &&
                                  typeof $steps["updateDiscountCode"].then ===
                                    "function"
                                ) {
                                  $steps["updateDiscountCode"] = await $steps[
                                    "updateDiscountCode"
                                  ];
                                }
                              }}
                              onColorChange={async (...eventArgs: any) => {
                                ((...eventArgs) => {
                                  generateStateOnChangeProp($state, [
                                    "button13",
                                    "color"
                                  ])(eventArgs[0]);
                                }).apply(null, eventArgs);

                                if (
                                  eventArgs.length > 1 &&
                                  eventArgs[1] &&
                                  eventArgs[1]._plasmic_state_init_
                                ) {
                                  return;
                                }
                              }}
                              onLoadChange={async (...eventArgs: any) => {
                                ((...eventArgs) => {
                                  generateStateOnChangeProp($state, [
                                    "button13",
                                    "load"
                                  ])(eventArgs[0]);
                                }).apply(null, eventArgs);

                                if (
                                  eventArgs.length > 1 &&
                                  eventArgs[1] &&
                                  eventArgs[1]._plasmic_state_init_
                                ) {
                                  return;
                                }
                              }}
                              onLoadingChange={async (...eventArgs: any) => {
                                ((...eventArgs) => {
                                  generateStateOnChangeProp($state, [
                                    "button13",
                                    "loading"
                                  ])(eventArgs[0]);
                                }).apply(null, eventArgs);

                                if (
                                  eventArgs.length > 1 &&
                                  eventArgs[1] &&
                                  eventArgs[1]._plasmic_state_init_
                                ) {
                                  return;
                                }
                              }}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___2PiMz
                                )}
                              >
                                {"\u062a\u0627\u06cc\u06cc\u062f"}
                              </div>
                            </Button>
                          </div>
                        ) : null}
                      </div>
                    </Dialog>
                  </div>
                </section>
                <div className={classNames(projectcss.all, sty.freeBox__x9FSv)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      sty.freeBox__fjQe,
                      "parent"
                    )}
                    overflow={``}
                    position={``}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rs028)}
                    >
                      <svg
                        className={classNames(projectcss.all, sty.svg__br2Nx)}
                        role={"img"}
                      />
                    </div>
                  </div>
                </div>
              </ApiRequest>
            </Reveal>
          ) : null}
          <ApiRequest
            data-plasmic-name={"shopDialog"}
            data-plasmic-override={overrides.shopDialog}
            children={null}
            className={classNames("__wab_instance", sty.shopDialog)}
            errorDisplay={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mwlIj
                )}
              >
                {"Error fetching data"}
              </div>
            }
            loadingDisplay={null}
            method={"POST"}
            onError={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["shopDialog", "error"]).apply(
                null,
                eventArgs
              );
            }}
            onLoading={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "shopDialog",
                "loading"
              ]).apply(null, eventArgs);
            }}
            onSuccess={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["shopDialog", "data"]).apply(
                null,
                eventArgs
              );
            }}
            shouldFetch={true}
            url={"https://n8n.staas.ir/webhook/hamyar/shop"}
          />

          <MobileDialog
            data-plasmic-name={"mobileDialog"}
            data-plasmic-override={overrides.mobileDialog}
            className={classNames("__wab_instance", sty.mobileDialog)}
            desc={
              "\u0628\u0631\u0627\u06cc \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u06cc\u0646 \u0627\u0645\u06a9\u0627\u0646\u0627\u062a \u0648\u06cc\u0698\u0647\u060c \u0644\u0637\u0641\u0627\u064b \u0634\u0645\u0627\u0631\u0647 \u062a\u0644\u0641\u0646 \u062e\u0648\u062f \u0631\u0627 \u062a\u0627\u06cc\u06cc\u062f \u06a9\u0646\u06cc\u062f."
            }
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["mobileDialog", "open"]).apply(
                null,
                eventArgs
              );

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            onSelectShopChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, [
                "mobileDialog",
                "selectShop"
              ]).apply(null, eventArgs);

              if (
                eventArgs.length > 1 &&
                eventArgs[1] &&
                eventArgs[1]._plasmic_state_init_
              ) {
                return;
              }
            }}
            open={generateStateValueProp($state, ["mobileDialog", "open"])}
          />

          {(() => {
            try {
              return !$state.shopPage;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return true;
              }
              throw e;
            }
          })() ? (
            <Reveal
              className={classNames("__wab_instance", sty.reveal__aFdlv)}
              effect={"fade"}
              triggerOnce={true}
            >
              <div className={classNames(projectcss.all, sty.freeBox___2OwFh)}>
                {(() => {
                  try {
                    return $state.allowanceUser.length > 0;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return true;
                    }
                    throw e;
                  }
                })() ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__uzFfG)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__eqSr2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__n1Ddw
                        )}
                      >
                        {
                          "\u0639\u0646\u0648\u0627\u0646 \u0627\u0634\u062a\u0631\u0627\u06a9"
                        }
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__arb3R
                        )}
                      >
                        {
                          "\u0645\u062f\u062a \u0632\u0645\u0627\u0646 \u0628\u0627\u0642\u06cc\u0645\u0627\u0646\u062f\u0647"
                        }
                      </div>
                    </div>
                    <Embed
                      data-plasmic-name={"embedHtml"}
                      data-plasmic-override={overrides.embedHtml}
                      className={classNames("__wab_instance", sty.embedHtml)}
                      code={"<hr></hr>"}
                    />

                    {(_par =>
                      !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                      (() => {
                        try {
                          return $state.allowanceUser;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    ).map((__plasmic_item_0, __plasmic_idx_0) => {
                      const currentItem = __plasmic_item_0;
                      const currentIndex = __plasmic_idx_0;
                      return (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cu6UA
                          )}
                          key={currentIndex}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nSpS7
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return currentItem.text;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u0639\u0646\u0648\u0627\u0646 \u0627\u0634\u062a\u0631\u0627\u06a9";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xy7IF
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return (() => {
                                    if (currentItem.always) {
                                      return "فعال برای همیشه";
                                    } else {
                                      var t = currentItem.time;
                                      const targetDate = new Date(
                                        t.year,
                                        t.month,
                                        t.day,
                                        t.hour,
                                        t.minute,
                                        t.second
                                      );
                                      const currentDate = new Date();
                                      const totalHoursRemaining =
                                        $$.dateFns.differenceInHours(
                                          targetDate,
                                          currentDate
                                        );
                                      const daysRemaining = Math.floor(
                                        totalHoursRemaining / 24
                                      );
                                      const hoursRemaining =
                                        totalHoursRemaining % 24;
                                      return `${daysRemaining} روز ${hoursRemaining} ساعت`;
                                    }
                                  })();
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "\u0645\u062f\u062a \u0632\u0645\u0627\u0646 \u0628\u0627\u0642\u06cc\u0645\u0627\u0646\u062f\u0647";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      );
                    })}
                  </div>
                ) : null}
                <div className={classNames(projectcss.all, sty.freeBox__dWVld)}>
                  <Icon215Icon
                    className={classNames(projectcss.all, sty.svg__xqOxW)}
                    onClick={async event => {
                      const $steps = {};

                      $steps["updateShopPage"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["shopPage"]
                              },
                              operation: 0,
                              value: true
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateShopPage"] != null &&
                        typeof $steps["updateShopPage"] === "object" &&
                        typeof $steps["updateShopPage"].then === "function"
                      ) {
                        $steps["updateShopPage"] = await $steps[
                          "updateShopPage"
                        ];
                      }
                    }}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uhEzY
                    )}
                  >
                    {
                      "\u0627\u0641\u0632\u0648\u062f\u0646 \u0648\u06cc\u0698\u06af\u06cc \u0647\u0627\u06cc \u0628\u06cc\u0634\u062a\u0631"
                    }
                  </div>
                </div>
              </div>
            </Reveal>
          ) : null}
          <AntdModal
            data-plasmic-name={"info"}
            data-plasmic-override={overrides.info}
            className={classNames("__wab_instance", sty.info)}
            defaultStylesClassName={classNames(
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              styleTokensClassNames,
              styleTokensClassNames_antd_5_hostless,
              styleTokensClassNames_plasmic_rich_components
            )}
            hideFooter={true}
            maskClosable={true}
            modalContentClassName={classNames({
              [sty["pcls_17Gpl_9MUGTW"]]: true
            })}
            modalScopeClassName={sty["info__modal"]}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["info", "open"]).apply(
                null,
                eventArgs
              );
            }}
            open={generateStateValueProp($state, ["info", "open"])}
            title={
              <div className={classNames(projectcss.all, sty.freeBox__xdSv)}>
                <div className={classNames(projectcss.all, sty.freeBox__ljqRl)}>
                  <Icon232Icon
                    className={classNames(projectcss.all, sty.svg__oMsn)}
                    role={"img"}
                  />
                </div>
              </div>
            }
            trigger={null}
          >
            <div className={classNames(projectcss.all, sty.freeBox___94C60)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mBufl
                )}
              >
                <React.Fragment>
                  {(() => {
                    try {
                      return $state.getData.data.result.dialogText;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "\u0648\u06cc\u0698\u06af\u06cc \u0627\u06cc \u06a9\u0647 \u0642\u0635\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0627\u0648\u0646 \u0631\u0648 \u062f\u0627\u0631\u06cc\u062f \u0646\u06cc\u0627\u0632 \u0628\u0647 \u0627\u0634\u062a\u0631\u0627\u06a9 \u0648\u06cc\u0698\u0647 \u062f\u0627\u0631\u062f \u0636\u0645\u0646\u0627 \u0645\u06cc\u062a\u0648\u0646\u06cc \u062f\u0631 \u0627\u06cc\u0646 \u0635\u0641\u062d\u0647 \u0627\u06af\u0631 \u0627\u0645\u06a9\u0627\u0646 \u0648\u06cc\u0698\u0647 \u062f\u06cc\u06af\u0647 \u0627\u06cc \u0631\u0648 \u062f\u0648\u0633\u062a \u062f\u0627\u0631\u06cc \u0627\u0646\u062a\u062e\u0627\u0628 \u06a9\u0646\u06cc \u0648 \u0628\u0627 \u0647\u0632\u06cc\u0646\u0647 \u06a9\u0645\u062a\u0631\u06cc \u0628\u0631\u0627\u06cc \u062e\u0648\u062f\u062a \u0641\u0639\u0627\u0644\u0634 \u06a9\u0646\u06cc\u2764";
                      }
                      throw e;
                    }
                  })()}
                </React.Fragment>
              </div>
              <Button
                data-plasmic-name={"button"}
                data-plasmic-override={overrides.button}
                className={classNames("__wab_instance", sty.button)}
                color={generateStateValueProp($state, ["button", "color"])}
                load={generateStateValueProp($state, ["button", "load"])}
                loading={generateStateValueProp($state, ["button", "loading"])}
                onClick={async event => {
                  const $steps = {};

                  $steps["updateInfoOpen"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["info", "open"]
                          },
                          operation: 0,
                          value: false
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateInfoOpen"] != null &&
                    typeof $steps["updateInfoOpen"] === "object" &&
                    typeof $steps["updateInfoOpen"].then === "function"
                  ) {
                    $steps["updateInfoOpen"] = await $steps["updateInfoOpen"];
                  }
                }}
                onColorChange={async (...eventArgs: any) => {
                  ((...eventArgs) => {
                    generateStateOnChangeProp($state, ["button", "color"])(
                      eventArgs[0]
                    );
                  }).apply(null, eventArgs);

                  if (
                    eventArgs.length > 1 &&
                    eventArgs[1] &&
                    eventArgs[1]._plasmic_state_init_
                  ) {
                    return;
                  }
                }}
                onLoadChange={async (...eventArgs: any) => {
                  ((...eventArgs) => {
                    generateStateOnChangeProp($state, ["button", "load"])(
                      eventArgs[0]
                    );
                  }).apply(null, eventArgs);

                  if (
                    eventArgs.length > 1 &&
                    eventArgs[1] &&
                    eventArgs[1]._plasmic_state_init_
                  ) {
                    return;
                  }
                }}
                onLoadingChange={async (...eventArgs: any) => {
                  ((...eventArgs) => {
                    generateStateOnChangeProp($state, ["button", "loading"])(
                      eventArgs[0]
                    );
                  }).apply(null, eventArgs);

                  if (
                    eventArgs.length > 1 &&
                    eventArgs[1] &&
                    eventArgs[1]._plasmic_state_init_
                  ) {
                    return;
                  }
                }}
                size={"compact"}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__xya0O
                  )}
                >
                  {"\u0628\u0627\u0634\u0647"}
                </div>
              </Button>
            </div>
          </AntdModal>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "sideEffect",
    "headerLiom",
    "getData",
    "button8",
    "button11",
    "button9",
    "p",
    "dialog2",
    "subscription3",
    "button14",
    "button10",
    "input5",
    "button13",
    "shopDialog",
    "mobileDialog",
    "embedHtml",
    "info",
    "button"
  ],
  sideEffect: ["sideEffect"],
  headerLiom: ["headerLiom"],
  getData: [
    "getData",
    "button8",
    "button11",
    "button9",
    "p",
    "dialog2",
    "subscription3",
    "button14",
    "button10",
    "input5",
    "button13"
  ],
  button8: ["button8"],
  button11: ["button11"],
  button9: ["button9"],
  p: ["p"],
  dialog2: [
    "dialog2",
    "subscription3",
    "button14",
    "button10",
    "input5",
    "button13"
  ],
  subscription3: ["subscription3"],
  button14: ["button14"],
  button10: ["button10"],
  input5: ["input5"],
  button13: ["button13"],
  shopDialog: ["shopDialog"],
  mobileDialog: ["mobileDialog"],
  embedHtml: ["embedHtml"],
  info: ["info", "button"],
  button: ["button"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  sideEffect: typeof SideEffect;
  headerLiom: typeof HeaderLiom;
  getData: typeof ApiRequest;
  button8: typeof Button;
  button11: typeof Button;
  button9: typeof Button;
  p: "p";
  dialog2: typeof Dialog;
  subscription3: typeof Subscription;
  button14: typeof Button;
  button10: typeof Button;
  input5: typeof AntdInput;
  button13: typeof Button;
  shopDialog: typeof ApiRequest;
  mobileDialog: typeof MobileDialog;
  embedHtml: typeof Embed;
  info: typeof AntdModal;
  button: typeof Button;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicShop3__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicShop3__VariantsArgs;
    args?: PlasmicShop3__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicShop3__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicShop3__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicShop3__ArgProps,
          internalVariantPropNames: PlasmicShop3__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicShop3__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicShop3";
  } else {
    func.displayName = `PlasmicShop3.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "suVPi77vb6vv9K5rYJwyxC"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicShop3 = Object.assign(
  // Top-level PlasmicShop3 renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    sideEffect: makeNodeComponent("sideEffect"),
    headerLiom: makeNodeComponent("headerLiom"),
    getData: makeNodeComponent("getData"),
    button8: makeNodeComponent("button8"),
    button11: makeNodeComponent("button11"),
    button9: makeNodeComponent("button9"),
    p: makeNodeComponent("p"),
    dialog2: makeNodeComponent("dialog2"),
    subscription3: makeNodeComponent("subscription3"),
    button14: makeNodeComponent("button14"),
    button10: makeNodeComponent("button10"),
    input5: makeNodeComponent("input5"),
    button13: makeNodeComponent("button13"),
    shopDialog: makeNodeComponent("shopDialog"),
    mobileDialog: makeNodeComponent("mobileDialog"),
    embedHtml: makeNodeComponent("embedHtml"),
    info: makeNodeComponent("info"),
    button: makeNodeComponent("button"),

    // Metadata about props expected for PlasmicShop3
    internalVariantProps: PlasmicShop3__VariantProps,
    internalArgProps: PlasmicShop3__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicShop3;
/* prettier-ignore-end */
