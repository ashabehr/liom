// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: suVPi77vb6vv9K5rYJwyxC
// Component: YAtLxskjvTM0

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import { Input } from "@/fragment/components/input"; // plasmic-import: zZH7vV9pXyf8/codeComponent
import Star from "../../Star"; // plasmic-import: i69c2Ujsm_H6/component
import Button from "../../Button"; // plasmic-import: ErJEaLhimwjN/component

import { useScreenVariants as useScreenVariants_6BytLjmha8VC } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 6BYTLjmha8vC/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "../todo_mvc_app/plasmic.module.css"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/projectcss
import sty from "./PlasmicClinic.module.css"; // plasmic-import: YAtLxskjvTM0/css

import Icon74Icon from "./icons/PlasmicIcon__Icon74"; // plasmic-import: ARDSibiJTpV7/icon
import MindSvgIcon from "./icons/PlasmicIcon__MindSvg"; // plasmic-import: g6DmzM6RGQ3O/icon
import DietFoodSvgIcon from "./icons/PlasmicIcon__DietFoodSvg"; // plasmic-import: ozXswRIM6iv_/icon
import Icon75Icon from "./icons/PlasmicIcon__Icon75"; // plasmic-import: CaIiVU2Vq7gB/icon
import BabyBlanketSvgIcon from "./icons/PlasmicIcon__BabyBlanketSvg"; // plasmic-import: vB7TGSAHixiu/icon
import DermisSvgIcon from "./icons/PlasmicIcon__DermisSvg"; // plasmic-import: u3bGCjW3RhfE/icon
import Icon22Icon from "./icons/PlasmicIcon__Icon22"; // plasmic-import: 32haUKsu6raY/icon
import Icon76Icon from "./icons/PlasmicIcon__Icon76"; // plasmic-import: ePwPtQfgTARC/icon
import Icon2Icon from "../todo_mvc_app/icons/PlasmicIcon__Icon2"; // plasmic-import: EwJmqOfKx7up/icon
import Icon86Icon from "./icons/PlasmicIcon__Icon86"; // plasmic-import: WyXhO3yfiBut/icon
import Icon80Icon from "./icons/PlasmicIcon__Icon80"; // plasmic-import: ixGmg3HZ4zCd/icon
import Icon85Icon from "./icons/PlasmicIcon__Icon85"; // plasmic-import: doh7qrCd7t0X/icon
import CheckSvgIcon from "../todo_mvc_app/icons/PlasmicIcon__CheckSvg"; // plasmic-import: rMWZc9fpVIkj/icon
import Icon11Icon from "./icons/PlasmicIcon__Icon11"; // plasmic-import: 8DTE5iQ0tvze/icon

createPlasmicElementProxy;

export type PlasmicClinic__VariantMembers = {
  _1: "docters" | "docter" | "chatviow";
};
export type PlasmicClinic__VariantsArgs = {
  _1?: SingleChoiceArg<"docters" | "docter" | "chatviow">;
};
type VariantPropType = keyof PlasmicClinic__VariantsArgs;
export const PlasmicClinic__VariantProps = new Array<VariantPropType>("_1");

export type PlasmicClinic__ArgsType = {};
type ArgPropType = keyof PlasmicClinic__ArgsType;
export const PlasmicClinic__ArgProps = new Array<ArgPropType>();

export type PlasmicClinic__OverridesType = {
  root?: Flex__<"div">;
  bg?: Flex__<"div">;
  rectangle2?: Flex__<"div">;
  ุง?: Flex__<"div">;
  ุง2?: Flex__<"div">;
  rectangle?: Flex__<"div">;
  findSuitableSpecia?: Flex__<"div">;
  rectangle3?: Flex__<"div">;
  speciality?: Flex__<"div">;
  card4?: Flex__<"div">;
  card5?: Flex__<"div">;
  card6?: Flex__<"div">;
  card7?: Flex__<"div">;
  card8?: Flex__<"div">;
  input?: Flex__<typeof Input>;
  mensah?: Flex__<"div">;
  input2?: Flex__<typeof Input>;
  mensah2?: Flex__<"div">;
  doctorsDetails?: Flex__<"div">;
  bg2?: Flex__<"div">;
  patients?: Flex__<"div">;
  group?: Flex__<"div">;
  rectangle14?: Flex__<"div">;
  patients2?: Flex__<"div">;
  group2?: Flex__<"div">;
  rectangle15?: Flex__<"div">;
  patients3?: Flex__<"div">;
  group3?: Flex__<"div">;
  rectangle16?: Flex__<"div">;
  about?: Flex__<"div">;
  drBellamyNicholas?: Flex__<"div">;
  workingTime?: Flex__<"div">;
  monSat0830Am?: Flex__<"div">;
  button?: Flex__<typeof Button>;
};

export interface DefaultClinicProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicClinic__RenderFunc(props: {
  variants: PlasmicClinic__VariantsArgs;
  args: PlasmicClinic__ArgsType;
  overrides: PlasmicClinic__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "_1",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) => $props._1
      },
      {
        path: "input.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "button.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "input2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "id",
        type: "private",
        variableType: "number",
        initFunc: ({ $props, $state, $queries, $ctx }) => 0
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_6BytLjmha8VC()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root,
            {
              [sty.root_1_chatviow]: hasVariant($state, "_1", "chatviow"),
              [sty.root_1_docter]: hasVariant($state, "_1", "docter"),
              [sty.root_1_docters]: hasVariant($state, "_1", "docters")
            }
          )}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__bliL, {
              [sty.freeBox_1_chatviow__bliLaYJmT]: hasVariant(
                $state,
                "_1",
                "chatviow"
              ),
              [sty.freeBox_1_docter__bliL8Ddm8]: hasVariant(
                $state,
                "_1",
                "docter"
              ),
              [sty.freeBox_1_docters__bliLpv2Kd]: hasVariant(
                $state,
                "_1",
                "docters"
              )
            })}
          >
            <div
              data-plasmic-name={"bg"}
              data-plasmic-override={overrides.bg}
              className={classNames(projectcss.all, sty.bg)}
            >
              <div
                data-plasmic-name={"rectangle2"}
                data-plasmic-override={overrides.rectangle2}
                className={classNames(projectcss.all, sty.rectangle2)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hj9MX)}
                >
                  <div
                    data-plasmic-name={"\u0627"}
                    data-plasmic-override={overrides.ุง}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.ุง
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "\u062f\u0633\u062a\u0631\u0633\u06cc \u0622\u0633\u0627\u0646 \u0628\u0647 \u067e\u0632\u0634\u06a9\u060c \u0647\u0631 \u0632\u0645\u0627\u0646 \u0648 \u0647\u0631 \u06a9\u062c\u0627"
                      : "\u0647\u0631 \u06a9\u062c\u0627 \u06a9\u0647 \u0647\u0633\u062a\u06cc \u0648 \u0647\u0631 \u0632\u0645\u0627\u0646\u06cc \u06a9\u0647 \u0646\u06cc\u0627\u0632 \u062f\u0627\u0631\u06cc\u060c \u0628\u0647 \u0631\u0627\u062d\u062a\u06cc \u0628\u0647 \u067e\u0632\u0634\u06a9 \u062f\u0633\u062a\u0631\u0633\u06cc \u062f\u0627\u0634\u062a\u0647 \u0628\u0627\u0634."}
                  </div>
                  <div
                    data-plasmic-name={"\u06272"}
                    data-plasmic-override={overrides.ุง2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.ุง2
                    )}
                    onClick={async event => {
                      const $steps = {};

                      $steps["update1"] = true
                        ? (() => {
                            const actionArgs = {
                              vgroup: "_1",
                              operation: 0,
                              value: "docters"
                            };
                            return (({ vgroup, value }) => {
                              if (typeof value === "string") {
                                value = [value];
                              }

                              $stateSet($state, vgroup, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["update1"] != null &&
                        typeof $steps["update1"] === "object" &&
                        typeof $steps["update1"].then === "function"
                      ) {
                        $steps["update1"] = await $steps["update1"];
                      }
                    }}
                  >
                    {
                      "\u0644\u06cc\u0633\u062a \u06a9\u0627\u0645\u0644 \u067e\u0632\u0634\u06a9\u0627\u0646  >"
                    }
                  </div>
                </Stack__>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__eYiNj)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "250px"
                      : "200px"
                  }
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/liom_hamyar/images/ๅป็ๅทฅไฝ็็ทๅป็็ข้ๆๅนณๆ็ป0918ๆๅป็ปๆฟ1.png",
                    fullWidth: 888,
                    fullHeight: 705,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox__nTa7N, {
                [sty.freeBox_1_chatviow__nTa7NaYJmT]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.freeBox_1_docters__nTa7Npv2Kd]: hasVariant(
                  $state,
                  "_1",
                  "docters"
                )
              })}
            >
              <div
                data-plasmic-name={"rectangle"}
                data-plasmic-override={overrides.rectangle}
                className={classNames(projectcss.all, sty.rectangle)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ygX2U)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vG1Fu
                    )}
                  >
                    {
                      "\u0648\u06cc\u0632\u06cc\u062a\u200c\u0647\u0627\u06cc \u062a\u0648"
                    }
                  </div>
                  <div
                    data-plasmic-name={"findSuitableSpecia"}
                    data-plasmic-override={overrides.findSuitableSpecia}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.findSuitableSpecia
                    )}
                  >
                    {
                      "\u067e\u06cc\u0627\u0645\u200c\u0647\u0627\u06cc \u0631\u062f \u0648 \u0628\u062f\u0644 \u0634\u062f\u0647 \u0628\u0627 \u067e\u0632\u0634\u06a9\u0627\u0646"
                    }
                  </div>
                </Stack__>
                <div
                  data-plasmic-name={"rectangle3"}
                  data-plasmic-override={overrides.rectangle3}
                  className={classNames(projectcss.all, sty.rectangle3)}
                >
                  <Icon74Icon
                    className={classNames(projectcss.all, sty.svg___1S0X3)}
                    role={"img"}
                  />
                </div>
              </div>
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"speciality"}
              data-plasmic-override={overrides.speciality}
              hasGap={true}
              className={classNames(projectcss.all, sty.speciality, {
                [sty.speciality_1_chatviow]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.speciality_1_docter]: hasVariant($state, "_1", "docter"),
                [sty.speciality_1_docters]: hasVariant($state, "_1", "docters")
              })}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lJs3X
                )}
              >
                {
                  "\u062f\u0633\u062a\u0647 \u0628\u0646\u062f\u06cc \u0647\u0627"
                }
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___6PT6H)}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"card4"}
                  data-plasmic-override={overrides.card4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.card4)}
                >
                  <MindSvgIcon
                    className={classNames(projectcss.all, sty.svg__qjZxp)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8C9L
                    )}
                  >
                    {"\u0631\u0648\u0646\u0634\u0646\u0627\u0633\u06cc"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"card5"}
                  data-plasmic-override={overrides.card5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.card5)}
                >
                  <DietFoodSvgIcon
                    className={classNames(projectcss.all, sty.svg__gyF8L)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__toSoa
                    )}
                  >
                    {"\u062a\u063a\u0630\u06cc\u0647"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"card6"}
                  data-plasmic-override={overrides.card6}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.card6)}
                >
                  <Icon75Icon
                    className={classNames(projectcss.all, sty.svg___9K68Y)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0LZ3U
                    )}
                  >
                    {"\u0631\u0627\u0628\u0637\u0647 \u062c\u0646\u0633\u06cc"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"card7"}
                  data-plasmic-override={overrides.card7}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.card7)}
                >
                  <BabyBlanketSvgIcon
                    className={classNames(projectcss.all, sty.svg__shKaO)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__vb924
                    )}
                  >
                    {"\u0628\u0627\u0631\u0648\u0631\u06cc"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"card8"}
                  data-plasmic-override={overrides.card8}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.card8)}
                >
                  <DermisSvgIcon
                    className={classNames(projectcss.all, sty.svg__xTznG)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fiAos
                    )}
                  >
                    {"\u067e\u0648\u0633\u062a \u0648 \u0645\u0648"}
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__sm50, {
              [sty.freeBox_1_chatviow__sm50AYJmT]: hasVariant(
                $state,
                "_1",
                "chatviow"
              ),
              [sty.freeBox_1_docter__sm508Ddm8]: hasVariant(
                $state,
                "_1",
                "docter"
              ),
              [sty.freeBox_1_docters__sm50Pv2Kd]: hasVariant(
                $state,
                "_1",
                "docters"
              )
            })}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox__mkF4X, {
                [sty.freeBox_1_chatviow__mkF4XaYJmT]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.freeBox_1_docters__mkF4Xpv2Kd]: hasVariant(
                  $state,
                  "_1",
                  "docters"
                )
              })}
            >
              <Icon22Icon
                className={classNames(projectcss.all, sty.svg__lhIg4, {
                  [sty.svg_1_chatviow__lhIg4AYJmT]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.svg_1_docters__lhIg4Pv2Kd]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
                onClick={async event => {
                  const $steps = {};

                  $steps["update1"] = true
                    ? (() => {
                        const actionArgs = {
                          vgroup: "_1",
                          operation: 1,
                          value: "docters"
                        };
                        return (({ vgroup, value }) => {
                          if (typeof value === "string") {
                            value = [value];
                          }

                          $stateSet($state, vgroup, undefined);
                          return undefined;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["update1"] != null &&
                    typeof $steps["update1"] === "object" &&
                    typeof $steps["update1"].then === "function"
                  ) {
                    $steps["update1"] = await $steps["update1"];
                  }
                }}
                role={"img"}
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vli7,
                  {
                    [sty.text_1_chatviow__vli7AYJmT]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.text_1_docters__vli7Pv2Kd]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  }
                )}
              >
                {hasVariant($state, "_1", "chatviow")
                  ? "\u06af\u0641\u062a\u06af\u0648 \u0647\u0627"
                  : "\u067e\u0632\u0634\u06a9\u0627\u0646"}
              </div>
            </div>
            <div
              className={classNames(projectcss.all, sty.freeBox__fgNaa, {
                [sty.freeBox_1_chatviow__fgNaaaYJmT]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.freeBox_1_docters__fgNaapv2Kd]: hasVariant(
                  $state,
                  "_1",
                  "docters"
                )
              })}
            >
              <Input
                data-plasmic-name={"input"}
                data-plasmic-override={overrides.input}
                className={classNames("__wab_instance", sty.input, {
                  [sty.input_1_chatviow]: hasVariant($state, "_1", "chatviow"),
                  [sty.input_1_docters]: hasVariant($state, "_1", "docters")
                })}
                onChange={generateStateOnChangeProp($state, ["input", "value"])}
                placeholder={
                  "\u062c\u0633\u062a\u062c\u0648 \u062f\u0631  \u067e\u0632\u0634\u06a9\u0627\u0646"
                }
                type={"text"}
                value={generateStateValueProp($state, ["input", "value"])}
              />

              <Icon76Icon
                className={classNames(projectcss.all, sty.svg__xTNn, {
                  [sty.svg_1_chatviow__xTNnaYJmT]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.svg_1_docters__xTNnpv2Kd]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
                role={"img"}
              />
            </div>
            <div
              data-plasmic-name={"mensah"}
              data-plasmic-override={overrides.mensah}
              className={classNames(projectcss.all, sty.mensah, {
                [sty.mensah_1_chatviow]: hasVariant($state, "_1", "chatviow"),
                [sty.mensah_1_docter]: hasVariant($state, "_1", "docter"),
                [sty.mensah_1_docters]: hasVariant($state, "_1", "docters")
              })}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__stYx6, {
                  [sty.img_1_chatviow__stYx6AYJmT]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.img_1_docters__stYx6Pv2Kd]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
                displayHeight={
                  hasVariant($state, "_1", "chatviow") &&
                  hasVariant(globalVariants, "screen", "mobile")
                    ? "60px"
                    : hasVariant($state, "_1", "docters") &&
                      hasVariant(globalVariants, "screen", "mobile")
                    ? "50px"
                    : "79px"
                }
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant($state, "_1", "chatviow") &&
                  hasVariant(globalVariants, "screen", "mobile")
                    ? "60px"
                    : hasVariant($state, "_1", "docters") &&
                      hasVariant(globalVariants, "screen", "mobile")
                    ? "50px"
                    : "79px"
                }
                loading={"lazy"}
                src={
                  hasVariant($state, "_1", "chatviow") &&
                  hasVariant(globalVariants, "screen", "mobile")
                    ? {
                        src: "/plasmic/liom_hamyar/images/image10.ico",
                        fullWidth: 256,
                        fullHeight: 256,
                        aspectRatio: undefined
                      }
                    : hasVariant($state, "_1", "docters") &&
                      hasVariant(globalVariants, "screen", "mobile")
                    ? {
                        src: "/plasmic/liom_hamyar/images/image10.ico",
                        fullWidth: 256,
                        fullHeight: 256,
                        aspectRatio: undefined
                      }
                    : {
                        src: "/plasmic/liom_hamyar/images/imagePlaceholder.svg",
                        fullWidth: 79,
                        fullHeight: 79,
                        aspectRatio: 1
                      }
                }
              />

              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__rzfOh, {
                  [sty.freeBox_1_chatviow__rzfOhaYJmT]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.freeBox_1_docters__rzfOhpv2Kd]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fqtK5,
                    {
                      [sty.text_1_chatviow__fqtK5AYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.text_1_docters__fqtK5Pv2Kd]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    }
                  )}
                >
                  {"Dr. Mensah T"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dzttk,
                    {
                      [sty.text_1_chatviow__dzttkaYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.text_1_docters__dzttkpv2Kd]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    }
                  )}
                >
                  {"Oncologists"}
                </div>
              </Stack__>
              <div
                className={classNames(projectcss.all, sty.freeBox__c208N, {
                  [sty.freeBox_1_chatviow__c208NaYJmT]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.freeBox_1_docters__c208Npv2Kd]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__v3HUx, {
                    [sty.freeBox_1_chatviow__v3HUxaYJmT]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.freeBox_1_docters__v3HUxpv2Kd]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  })}
                >
                  <Star
                    action={true}
                    className={classNames("__wab_instance", sty.star__gM7Kg, {
                      [sty.star_1_chatviow__gM7KGaYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.star_1_docters__gM7KGpv2Kd]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  />

                  <Star
                    action={true}
                    className={classNames("__wab_instance", sty.star__xqSHg, {
                      [sty.star_1_chatviow__xqSHgaYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.star_1_docters__xqSHgpv2Kd]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  />

                  <Star
                    action={
                      hasVariant($state, "_1", "chatviow") &&
                      hasVariant(globalVariants, "screen", "mobile")
                        ? undefined
                        : hasVariant($state, "_1", "docters") &&
                          hasVariant(globalVariants, "screen", "mobile")
                        ? undefined
                        : true
                    }
                    className={classNames("__wab_instance", sty.star__g2KKc, {
                      [sty.star_1_chatviow__g2KKcaYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.star_1_docters__g2KKcpv2Kd]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  />

                  <Star
                    action={true}
                    className={classNames("__wab_instance", sty.star__hGAtQ, {
                      [sty.star_1_chatviow__hGAtQaYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.star_1_docters__hGAtQpv2Kd]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  />

                  <Star
                    action={true}
                    className={classNames("__wab_instance", sty.star__at1Mh, {
                      [sty.star_1_chatviow__at1MHaYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.star_1_docters__at1MHpv2Kd]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  />

                  <Star
                    action={true}
                    className={classNames("__wab_instance", sty.star__z4SHk, {
                      [sty.star_1_chatviow__z4SHkaYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.star_1_docters__z4SHkpv2Kd]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  />
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gVLkO,
                    {
                      [sty.text_1_chatviow__gVLkOaYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.text_1_docters__gVLkOpv2Kd]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    }
                  )}
                >
                  {
                    "\u062a\u0639\u062f\u0627\u062f \u0645\u0631\u0627\u062c\u0639 (150)"
                  }
                </div>
              </div>
            </div>
          </Stack__>
          {(
            hasVariant($state, "_1", "chatviow")
              ? true
              : hasVariant($state, "_1", "docters")
              ? true
              : false
          ) ? (
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__dh5Mr, {
                [sty.freeBox_1_chatviow__dh5MraYJmT]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.freeBox_1_docter__dh5Mr8Ddm8]: hasVariant(
                  $state,
                  "_1",
                  "docter"
                ),
                [sty.freeBox_1_docters__dh5Mrpv2Kd]: hasVariant(
                  $state,
                  "_1",
                  "docters"
                )
              })}
            >
              <div
                className={classNames(projectcss.all, sty.freeBox___5Elp, {
                  [sty.freeBox_1_chatviow___5ElpaYJmT]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.freeBox_1_docters___5Elppv2Kd]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
              >
                <Icon22Icon
                  className={classNames(projectcss.all, sty.svg__zyu6K, {
                    [sty.svg_1_chatviow__zyu6KaYJmT]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.svg_1_docters__zyu6Kpv2Kd]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  })}
                  onClick={async event => {
                    const $steps = {};

                    $steps["update1"] = true
                      ? (() => {
                          const actionArgs = {
                            vgroup: "_1",
                            operation: 1,
                            value: "docters"
                          };
                          return (({ vgroup, value }) => {
                            if (typeof value === "string") {
                              value = [value];
                            }

                            $stateSet($state, vgroup, undefined);
                            return undefined;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["update1"] != null &&
                      typeof $steps["update1"] === "object" &&
                      typeof $steps["update1"].then === "function"
                    ) {
                      $steps["update1"] = await $steps["update1"];
                    }
                  }}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5WrPp,
                    {
                      [sty.text_1_chatviow___5WrPpaYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.text_1_docters___5WrPppv2Kd]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "_1", "chatviow")
                    ? "\u06af\u0641\u062a\u06af\u0648 \u0647\u0627"
                    : "\u067e\u0632\u0634\u06a9\u0627\u0646"}
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox__kX4E8, {
                    [sty.freeBox_1_chatviow__kX4E8AYJmT]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    )
                  })}
                >
                  <PlasmicIcon__
                    PlasmicIconType={
                      hasVariant($state, "_1", "chatviow") &&
                      hasVariant(globalVariants, "screen", "mobile")
                        ? Icon76Icon
                        : hasVariant($state, "_1", "chatviow")
                        ? Icon76Icon
                        : "div"
                    }
                    className={classNames(projectcss.all, sty.svg__vIVk, {
                      [sty.svg_1_chatviow__vIVKaYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      )
                    })}
                    role={"img"}
                  />
                </div>
              </div>
              <div
                className={classNames(projectcss.all, sty.freeBox__v9Uib, {
                  [sty.freeBox_1_chatviow__v9UibaYJmT]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.freeBox_1_docters__v9Uibpv2Kd]: hasVariant(
                    $state,
                    "_1",
                    "docters"
                  )
                })}
              >
                <Input
                  data-plasmic-name={"input2"}
                  data-plasmic-override={overrides.input2}
                  className={classNames("__wab_instance", sty.input2, {
                    [sty.input2_1_chatviow]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.input2_1_docters]: hasVariant($state, "_1", "docters")
                  })}
                  onChange={generateStateOnChangeProp($state, [
                    "input2",
                    "value"
                  ])}
                  placeholder={
                    "\u062c\u0633\u062a\u062c\u0648 \u062f\u0631  \u067e\u0632\u0634\u06a9\u0627\u0646"
                  }
                  type={"text"}
                  value={generateStateValueProp($state, ["input2", "value"])}
                />

                <Icon76Icon
                  className={classNames(projectcss.all, sty.svg___8QAfw, {
                    [sty.svg_1_chatviow___8QAfwaYJmT]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.svg_1_docters___8QAfwpv2Kd]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  })}
                  role={"img"}
                />
              </div>
              <div
                data-plasmic-name={"mensah2"}
                data-plasmic-override={overrides.mensah2}
                className={classNames(projectcss.all, sty.mensah2, {
                  [sty.mensah2_1_chatviow]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.mensah2_1_docter]: hasVariant($state, "_1", "docter"),
                  [sty.mensah2_1_docters]: hasVariant($state, "_1", "docters")
                })}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___5GhNp, {
                    [sty.img_1_chatviow___5GhNPaYJmT]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.img_1_docters___5GhNPpv2Kd]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  })}
                  displayHeight={
                    hasVariant($state, "_1", "chatviow") &&
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "40px"
                      : hasVariant($state, "_1", "chatviow")
                      ? "50px"
                      : hasVariant($state, "_1", "docters") &&
                        hasVariant(globalVariants, "screen", "mobile")
                      ? "60px"
                      : "79px"
                  }
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant($state, "_1", "chatviow") &&
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "40px"
                      : hasVariant($state, "_1", "chatviow")
                      ? "50px"
                      : hasVariant($state, "_1", "docters") &&
                        hasVariant(globalVariants, "screen", "mobile")
                      ? "60px"
                      : "79px"
                  }
                  loading={"lazy"}
                  src={
                    hasVariant($state, "_1", "chatviow") &&
                    hasVariant(globalVariants, "screen", "mobile")
                      ? {
                          src: "/plasmic/liom_hamyar/images/image10.ico",
                          fullWidth: 256,
                          fullHeight: 256,
                          aspectRatio: undefined
                        }
                      : hasVariant($state, "_1", "docters") &&
                        hasVariant(globalVariants, "screen", "mobile")
                      ? {
                          src: "/plasmic/liom_hamyar/images/image10.ico",
                          fullWidth: 256,
                          fullHeight: 256,
                          aspectRatio: undefined
                        }
                      : {
                          src: "/plasmic/liom_hamyar/images/imagePlaceholder.svg",
                          fullWidth: 79,
                          fullHeight: 79,
                          aspectRatio: 1
                        }
                  }
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gusno, {
                    [sty.freeBox_1_chatviow__gusnoaYJmT]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.freeBox_1_docters__gusnopv2Kd]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nBn0,
                      {
                        [sty.text_1_chatviow__nBn0AYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docters__nBn0Pv2Kd]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      }
                    )}
                  >
                    {"Dr. Mensah T"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oLwL,
                      {
                        [sty.text_1_chatviow__oLwLaYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docters__oLwLpv2Kd]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "_1", "chatviow")
                      ? "\u0633\u0644\u0627\u0645 \u062f\u06a9\u062a\u0631 \u062d\u0627\u0644\u062a\u0648\u0646 \u0686\u0637\u0648\u0631\u0647 \u061f"
                      : "Oncologists"}
                  </div>
                </Stack__>
                <div
                  className={classNames(projectcss.all, sty.freeBox__ku7Xf, {
                    [sty.freeBox_1_chatviow__ku7XfaYJmT]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.freeBox_1_docters__ku7Xfpv2Kd]: hasVariant(
                      $state,
                      "_1",
                      "docters"
                    )
                  })}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__unrkr, {
                      [sty.freeBox_1_chatviow__unrkraYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.freeBox_1_docters__unrkrpv2Kd]: hasVariant(
                        $state,
                        "_1",
                        "docters"
                      )
                    })}
                  >
                    <Star
                      action={true}
                      className={classNames("__wab_instance", sty.star__cKIzO, {
                        [sty.star_1_chatviow__cKIzOaYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.star_1_docters__cKIzOpv2Kd]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      })}
                    />

                    <Star
                      action={true}
                      className={classNames(
                        "__wab_instance",
                        sty.star___2Hhp8,
                        {
                          [sty.star_1_chatviow___2Hhp8AYJmT]: hasVariant(
                            $state,
                            "_1",
                            "chatviow"
                          ),
                          [sty.star_1_docters___2Hhp8Pv2Kd]: hasVariant(
                            $state,
                            "_1",
                            "docters"
                          )
                        }
                      )}
                    />

                    <Star
                      action={
                        hasVariant($state, "_1", "chatviow") &&
                        hasVariant(globalVariants, "screen", "mobile")
                          ? undefined
                          : hasVariant($state, "_1", "docters") &&
                            hasVariant(globalVariants, "screen", "mobile")
                          ? undefined
                          : true
                      }
                      className={classNames("__wab_instance", sty.star__joJew, {
                        [sty.star_1_chatviow__joJeWaYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.star_1_docters__joJeWpv2Kd]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      })}
                    />

                    <Star
                      action={true}
                      className={classNames("__wab_instance", sty.star__rqGdG, {
                        [sty.star_1_chatviow__rqGdGaYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.star_1_docters__rqGdGpv2Kd]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      })}
                    />

                    <Star
                      action={true}
                      className={classNames("__wab_instance", sty.star__wkmEv, {
                        [sty.star_1_chatviow__wkmEvaYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.star_1_docters__wkmEvpv2Kd]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      })}
                    />

                    <Star
                      action={true}
                      className={classNames("__wab_instance", sty.star__aycr4, {
                        [sty.star_1_chatviow__aycr4AYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.star_1_docters__aycr4Pv2Kd]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      })}
                    />
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cbbPn,
                      {
                        [sty.text_1_chatviow__cbbPnaYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docters__cbbPnpv2Kd]: hasVariant(
                          $state,
                          "_1",
                          "docters"
                        )
                      }
                    )}
                  >
                    {
                      "\u062a\u0639\u062f\u0627\u062f \u0645\u0631\u0627\u062c\u0639 (150)"
                    }
                  </div>
                </div>
              </div>
            </Stack__>
          ) : null}
          {(
            hasVariant($state, "_1", "chatviow") &&
            hasVariant(globalVariants, "screen", "mobile")
              ? true
              : hasVariant($state, "_1", "chatviow")
              ? true
              : hasVariant($state, "_1", "docter") &&
                hasVariant(globalVariants, "screen", "mobile")
              ? true
              : hasVariant($state, "_1", "docter")
              ? true
              : false
          ) ? (
            <Stack__
              as={"div"}
              data-plasmic-name={"doctorsDetails"}
              data-plasmic-override={overrides.doctorsDetails}
              hasGap={true}
              className={classNames(projectcss.all, sty.doctorsDetails, {
                [sty.doctorsDetails_1_chatviow]: hasVariant(
                  $state,
                  "_1",
                  "chatviow"
                ),
                [sty.doctorsDetails_1_docter]: hasVariant(
                  $state,
                  "_1",
                  "docter"
                )
              })}
            >
              <PlasmicIcon__
                PlasmicIconType={
                  hasVariant($state, "_1", "chatviow")
                    ? Icon2Icon
                    : hasVariant($state, "_1", "docter")
                    ? Icon2Icon
                    : "div"
                }
                className={classNames(projectcss.all, sty.svg__coMsb, {
                  [sty.svg_1_chatviow__coMsBaYJmT]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.svg_1_docter__coMsb8Ddm8]: hasVariant(
                    $state,
                    "_1",
                    "docter"
                  )
                })}
                role={"img"}
              />

              <Stack__
                as={"div"}
                data-plasmic-name={"bg2"}
                data-plasmic-override={overrides.bg2}
                hasGap={true}
                className={classNames(projectcss.all, sty.bg2, {
                  [sty.bg2_1_chatviow]: hasVariant($state, "_1", "chatviow"),
                  [sty.bg2_1_docter]: hasVariant($state, "_1", "docter"),
                  [sty.bg2_1_docters]: hasVariant($state, "_1", "docters")
                })}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__fz9MD, {
                    [sty.img_1_chatviow__fz9MDaYJmT]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.img_1_docter__fz9MD8Ddm8]: hasVariant(
                      $state,
                      "_1",
                      "docter"
                    )
                  })}
                  displayHeight={"118px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"118px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/liom_hamyar/images/image7.png",
                    fullWidth: 1302,
                    fullHeight: 900,
                    aspectRatio: undefined
                  }}
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__c7P9H, {
                    [sty.freeBox_1_chatviow__c7P9HaYJmT]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.freeBox_1_docter__c7P9H8Ddm8]: hasVariant(
                      $state,
                      "_1",
                      "docter"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__h9NXh,
                      {
                        [sty.text_1_chatviow__h9NXHaYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docter__h9NXh8Ddm8]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      }
                    )}
                  >
                    {"Dr. Bellamy Nicholas"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__n75Vw,
                      {
                        [sty.text_1_chatviow__n75VwaYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docter__n75Vw8Ddm8]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      }
                    )}
                  >
                    {"Viralogist"}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jnhnw, {
                    [sty.freeBox_1_chatviow__jnhnwaYJmT]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.freeBox_1_docter__jnhnw8Ddm8]: hasVariant(
                      $state,
                      "_1",
                      "docter"
                    )
                  })}
                >
                  <div
                    data-plasmic-name={"patients"}
                    data-plasmic-override={overrides.patients}
                    className={classNames(projectcss.all, sty.patients, {
                      [sty.patients_1_chatviow]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.patients_1_docter]: hasVariant(
                        $state,
                        "_1",
                        "docter"
                      )
                    })}
                  >
                    <div
                      data-plasmic-name={"group"}
                      data-plasmic-override={overrides.group}
                      className={classNames(projectcss.all, sty.group, {
                        [sty.group_1_chatviow]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.group_1_docter]: hasVariant($state, "_1", "docter")
                      })}
                    >
                      <div
                        data-plasmic-name={"rectangle14"}
                        data-plasmic-override={overrides.rectangle14}
                        className={classNames(projectcss.all, sty.rectangle14, {
                          [sty.rectangle14_1_chatviow]: hasVariant(
                            $state,
                            "_1",
                            "chatviow"
                          ),
                          [sty.rectangle14_1_docter]: hasVariant(
                            $state,
                            "_1",
                            "docter"
                          )
                        })}
                      >
                        <Icon86Icon
                          className={classNames(projectcss.all, sty.svg__ja7Ew)}
                          role={"img"}
                        />
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__byAR, {
                        [sty.freeBox_1_chatviow__byARaYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.freeBox_1_docter__byAR8Ddm8]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      })}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__w1R8V,
                          {
                            [sty.text_1_chatviow__w1R8VaYJmT]: hasVariant(
                              $state,
                              "_1",
                              "chatviow"
                            ),
                            [sty.text_1_docter__w1R8V8Ddm8]: hasVariant(
                              $state,
                              "_1",
                              "docter"
                            )
                          }
                        )}
                      >
                        {"1000+"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__osTTt,
                          {
                            [sty.text_1_chatviow__osTTtaYJmT]: hasVariant(
                              $state,
                              "_1",
                              "chatviow"
                            ),
                            [sty.text_1_docter__osTTt8Ddm8]: hasVariant(
                              $state,
                              "_1",
                              "docter"
                            )
                          }
                        )}
                      >
                        {
                          "\u0631\u062a\u0628\u0647 \u0628\u0646\u062f\u06cc \u0647\u0627"
                        }
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"patients2"}
                    data-plasmic-override={overrides.patients2}
                    className={classNames(projectcss.all, sty.patients2, {
                      [sty.patients2_1_chatviow]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.patients2_1_docter]: hasVariant(
                        $state,
                        "_1",
                        "docter"
                      )
                    })}
                  >
                    <div
                      data-plasmic-name={"group2"}
                      data-plasmic-override={overrides.group2}
                      className={classNames(projectcss.all, sty.group2, {
                        [sty.group2_1_chatviow]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.group2_1_docter]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      })}
                    >
                      <div
                        data-plasmic-name={"rectangle15"}
                        data-plasmic-override={overrides.rectangle15}
                        className={classNames(projectcss.all, sty.rectangle15, {
                          [sty.rectangle15_1_chatviow]: hasVariant(
                            $state,
                            "_1",
                            "chatviow"
                          ),
                          [sty.rectangle15_1_docter]: hasVariant(
                            $state,
                            "_1",
                            "docter"
                          )
                        })}
                      >
                        <Icon80Icon
                          className={classNames(projectcss.all, sty.svg__vt3C)}
                          role={"img"}
                        />
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__pFjEn,
                        {
                          [sty.freeBox_1_chatviow__pFjEnaYJmT]: hasVariant(
                            $state,
                            "_1",
                            "chatviow"
                          ),
                          [sty.freeBox_1_docter__pFjEn8Ddm8]: hasVariant(
                            $state,
                            "_1",
                            "docter"
                          )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3CNf1,
                          {
                            [sty.text_1_chatviow___3CNf1AYJmT]: hasVariant(
                              $state,
                              "_1",
                              "chatviow"
                            ),
                            [sty.text_1_docter___3CNf18Ddm8]: hasVariant(
                              $state,
                              "_1",
                              "docter"
                            )
                          }
                        )}
                      >
                        {"1000+"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dEuTn,
                          {
                            [sty.text_1_chatviow__dEuTnaYJmT]: hasVariant(
                              $state,
                              "_1",
                              "chatviow"
                            ),
                            [sty.text_1_docter__dEuTn8Ddm8]: hasVariant(
                              $state,
                              "_1",
                              "docter"
                            )
                          }
                        )}
                      >
                        {hasVariant($state, "_1", "chatviow")
                          ? "\u0633\u0627\u0628\u0642\u0647"
                          : hasVariant($state, "_1", "docter")
                          ? "\u0633\u0627\u0628\u0642\u0647"
                          : "Patients"}
                      </div>
                    </div>
                  </div>
                  <div
                    data-plasmic-name={"patients3"}
                    data-plasmic-override={overrides.patients3}
                    className={classNames(projectcss.all, sty.patients3, {
                      [sty.patients3_1_chatviow]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.patients3_1_docter]: hasVariant(
                        $state,
                        "_1",
                        "docter"
                      )
                    })}
                  >
                    <div
                      data-plasmic-name={"group3"}
                      data-plasmic-override={overrides.group3}
                      className={classNames(projectcss.all, sty.group3, {
                        [sty.group3_1_chatviow]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.group3_1_docter]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      })}
                    >
                      <div
                        data-plasmic-name={"rectangle16"}
                        data-plasmic-override={overrides.rectangle16}
                        className={classNames(projectcss.all, sty.rectangle16, {
                          [sty.rectangle16_1_chatviow]: hasVariant(
                            $state,
                            "_1",
                            "chatviow"
                          ),
                          [sty.rectangle16_1_docter]: hasVariant(
                            $state,
                            "_1",
                            "docter"
                          )
                        })}
                      >
                        <Icon85Icon
                          className={classNames(projectcss.all, sty.svg__uODi3)}
                          role={"img"}
                        />
                      </div>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__m6SF5,
                        {
                          [sty.freeBox_1_chatviow__m6SF5AYJmT]: hasVariant(
                            $state,
                            "_1",
                            "chatviow"
                          ),
                          [sty.freeBox_1_docter__m6SF58Ddm8]: hasVariant(
                            $state,
                            "_1",
                            "docter"
                          )
                        }
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sRaD8,
                          {
                            [sty.text_1_chatviow__sRaD8AYJmT]: hasVariant(
                              $state,
                              "_1",
                              "chatviow"
                            ),
                            [sty.text_1_docter__sRaD88Ddm8]: hasVariant(
                              $state,
                              "_1",
                              "docter"
                            )
                          }
                        )}
                      >
                        {"1000+"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__m5IrK,
                          {
                            [sty.text_1_chatviow__m5IrKaYJmT]: hasVariant(
                              $state,
                              "_1",
                              "chatviow"
                            ),
                            [sty.text_1_docter__m5IrK8Ddm8]: hasVariant(
                              $state,
                              "_1",
                              "docter"
                            ),
                            [sty.text_1_docters__m5IrKpv2Kd]: hasVariant(
                              $state,
                              "_1",
                              "docters"
                            )
                          }
                        )}
                      >
                        {hasVariant($state, "_1", "docter")
                          ? "\u062a\u0639\u062f\u0627\u062f \u0648\u06cc\u0632\u06cc\u062a"
                          : "Patients"}
                      </div>
                    </div>
                  </div>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___0B37E, {
                  [sty.freeBox_1_chatviow___0B37EaYJmT]: hasVariant(
                    $state,
                    "_1",
                    "chatviow"
                  ),
                  [sty.freeBox_1_docter___0B37E8Ddm8]: hasVariant(
                    $state,
                    "_1",
                    "docter"
                  )
                })}
              >
                <Stack__
                  as={"div"}
                  data-plasmic-name={"about"}
                  data-plasmic-override={overrides.about}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.about, {
                    [sty.about_1_chatviow]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.about_1_docter]: hasVariant($state, "_1", "docter")
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__w4IPz,
                      {
                        [sty.text_1_chatviow__w4IPZaYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docter__w4IPz8Ddm8]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "_1", "chatviow")
                      ? "\u0622\u0634\u0646\u0627\u06cc\u06cc \u0628\u0627 \u067e\u0632\u0634\u06a9"
                      : hasVariant($state, "_1", "docter")
                      ? "\u0622\u0634\u0646\u0627\u06cc\u06cc \u0628\u0627 \u067e\u0632\u0634\u06a9"
                      : "About Doctor"}
                  </div>
                  <div
                    data-plasmic-name={"drBellamyNicholas"}
                    data-plasmic-override={overrides.drBellamyNicholas}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.drBellamyNicholas,
                      {
                        [sty.drBellamyNicholas_1_chatviow]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.drBellamyNicholas_1_docter]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "_1", "chatviow")
                      ? "\u062f\u06a9\u062a\u0631 [\u0646\u0627\u0645 \u067e\u0632\u0634\u06a9]\u060c \u0645\u062a\u062e\u0635\u0635 [\u062a\u062e\u0635\u0635 \u067e\u0632\u0634\u06a9] \u0628\u0627 [\u062a\u0639\u062f\u0627\u062f] \u0633\u0627\u0644 \u062a\u062c\u0631\u0628\u0647\u060c \u0622\u0645\u0627\u062f\u0647 \u0627\u0631\u0627\u0626\u0647 \u062e\u062f\u0645\u0627\u062a \u062f\u0631\u0645\u0627\u0646\u06cc \u0628\u0627 \u0628\u0647\u062a\u0631\u06cc\u0646 \u0631\u0648\u0634\u200c\u0647\u0627 \u0648 \u062f\u0627\u0646\u0634 \u0631\u0648\u0632 \u0627\u0633\u062a. \u0627\u06cc\u0634\u0627\u0646 \u0641\u0627\u0631\u063a\u200c\u0627\u0644\u062a\u062d\u0635\u06cc\u0644 \u0627\u0632 \u062f\u0627\u0646\u0634\u06af\u0627\u0647 [\u0646\u0627\u0645 \u062f\u0627\u0646\u0634\u06af\u0627\u0647] \u0628\u0648\u062f\u0647 \u0648 \u0628\u0627 \u0631\u0648\u06cc\u06a9\u0631\u062f\u06cc \u0635\u0645\u06cc\u0645\u06cc \u0648 \u062d\u0631\u0641\u0647\u200c\u0627\u06cc \u0628\u0647 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0645\u0634\u0627\u0648\u0631\u0647 \u0645\u06cc\u200c\u062f\u0647\u062f. \u0628\u0631\u0627\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u0646\u0648\u0628\u062a \u06cc\u0627 \u0627\u0631\u0633\u0627\u0644 \u067e\u06cc\u0627\u0645\u060c \u0644\u0637\u0641\u0627\u064b \u0627\u0632 \u0637\u0631\u06cc\u0642 \u0628\u062e\u0634 \u0645\u0631\u0628\u0648\u0637\u0647 \u0627\u0642\u062f\u0627\u0645 \u06a9\u0646\u06cc\u062f."
                      : hasVariant($state, "_1", "docter")
                      ? "\u062f\u06a9\u062a\u0631 [\u0646\u0627\u0645 \u067e\u0632\u0634\u06a9]\u060c \u0645\u062a\u062e\u0635\u0635 [\u062a\u062e\u0635\u0635 \u067e\u0632\u0634\u06a9] \u0628\u0627 [\u062a\u0639\u062f\u0627\u062f] \u0633\u0627\u0644 \u062a\u062c\u0631\u0628\u0647\u060c \u0622\u0645\u0627\u062f\u0647 \u0627\u0631\u0627\u0626\u0647 \u062e\u062f\u0645\u0627\u062a \u062f\u0631\u0645\u0627\u0646\u06cc \u0628\u0627 \u0628\u0647\u062a\u0631\u06cc\u0646 \u0631\u0648\u0634\u200c\u0647\u0627 \u0648 \u062f\u0627\u0646\u0634 \u0631\u0648\u0632 \u0627\u0633\u062a. \u0627\u06cc\u0634\u0627\u0646 \u0641\u0627\u0631\u063a\u200c\u0627\u0644\u062a\u062d\u0635\u06cc\u0644 \u0627\u0632 \u062f\u0627\u0646\u0634\u06af\u0627\u0647 [\u0646\u0627\u0645 \u062f\u0627\u0646\u0634\u06af\u0627\u0647] \u0628\u0648\u062f\u0647 \u0648 \u0628\u0627 \u0631\u0648\u06cc\u06a9\u0631\u062f\u06cc \u0635\u0645\u06cc\u0645\u06cc \u0648 \u062d\u0631\u0641\u0647\u200c\u0627\u06cc \u0628\u0647 \u0628\u06cc\u0645\u0627\u0631\u0627\u0646 \u0645\u0634\u0627\u0648\u0631\u0647 \u0645\u06cc\u200c\u062f\u0647\u062f. \u0628\u0631\u0627\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u0646\u0648\u0628\u062a \u06cc\u0627 \u0627\u0631\u0633\u0627\u0644 \u067e\u06cc\u0627\u0645\u060c \u0644\u0637\u0641\u0627\u064b \u0627\u0632 \u0637\u0631\u06cc\u0642 \u0628\u062e\u0634 \u0645\u0631\u0628\u0648\u0637\u0647 \u0627\u0642\u062f\u0627\u0645 \u06a9\u0646\u06cc\u062f."
                      : "Dr. Bellamy Nicholas is a top specialist at London Bridge Hospital at London. He has achieved several awards and recognition for is contribution and service in his own field. He is available for private consultation. "}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"workingTime"}
                  data-plasmic-override={overrides.workingTime}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.workingTime, {
                    [sty.workingTime_1_chatviow]: hasVariant(
                      $state,
                      "_1",
                      "chatviow"
                    ),
                    [sty.workingTime_1_docter]: hasVariant(
                      $state,
                      "_1",
                      "docter"
                    )
                  })}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ok0Mx,
                      {
                        [sty.text_1_chatviow__ok0MxaYJmT]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.text_1_docter__ok0Mx8Ddm8]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "_1", "chatviow")
                      ? "\u0633\u0627\u0639\u0627\u062a \u067e\u0627\u0633\u062e\u06af\u0648\u06cc\u06cc"
                      : hasVariant($state, "_1", "docter")
                      ? "\u0633\u0627\u0639\u0627\u062a \u067e\u0627\u0633\u062e\u06af\u0648\u06cc\u06cc"
                      : "Working time"}
                  </div>
                  <div
                    data-plasmic-name={"monSat0830Am"}
                    data-plasmic-override={overrides.monSat0830Am}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.monSat0830Am,
                      {
                        [sty.monSat0830Am_1_chatviow]: hasVariant(
                          $state,
                          "_1",
                          "chatviow"
                        ),
                        [sty.monSat0830Am_1_docter]: hasVariant(
                          $state,
                          "_1",
                          "docter"
                        )
                      }
                    )}
                  >
                    {hasVariant($state, "_1", "chatviow")
                      ? "\u0631\u0648\u0632\u0647\u0627\u06cc \u0632\u0648\u062c (\u0633\u0627\u0639\u062a 9 \u0627\u0644\u06cc 15)"
                      : hasVariant($state, "_1", "docter")
                      ? "\u0631\u0648\u0632\u0647\u0627\u06cc \u0632\u0648\u062c (\u0633\u0627\u0639\u062a 9 \u0627\u0644\u06cc 15)"
                      : "Mon - Sat (08:30 AM - 09:00 PM)"}
                  </div>
                </Stack__>
              </Stack__>
              <Button
                data-plasmic-name={"button"}
                data-plasmic-override={overrides.button}
                className={classNames("__wab_instance", sty.button, {
                  [sty.button_1_chatviow]: hasVariant($state, "_1", "chatviow"),
                  [sty.button_1_docter]: hasVariant($state, "_1", "docter")
                })}
                color={generateStateValueProp($state, ["button", "color"])}
                onColorChange={(...eventArgs) => {
                  generateStateOnChangeProp($state, ["button", "color"])(
                    eventArgs[0]
                  );
                }}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1UZth,
                    {
                      [sty.text_1_chatviow___1UZthaYJmT]: hasVariant(
                        $state,
                        "_1",
                        "chatviow"
                      ),
                      [sty.text_1_docter___1UZth8Ddm8]: hasVariant(
                        $state,
                        "_1",
                        "docter"
                      )
                    }
                  )}
                >
                  {hasVariant($state, "_1", "chatviow") &&
                  hasVariant(globalVariants, "screen", "mobile")
                    ? "\u06af\u0641\u062a\u200c\u0648\u06af\u0648\u06cc \u0622\u0646\u0644\u0627\u06cc\u0646 \u0628\u0627 \u067e\u0632\u0634\u06a9"
                    : hasVariant($state, "_1", "chatviow")
                    ? "\u06af\u0641\u062a\u200c\u0648\u06af\u0648\u06cc \u0622\u0646\u0644\u0627\u06cc\u0646 \u0628\u0627 \u067e\u0632\u0634\u06a9"
                    : hasVariant($state, "_1", "docter") &&
                      hasVariant(globalVariants, "screen", "mobile")
                    ? "\u06af\u0641\u062a\u200c\u0648\u06af\u0648\u06cc \u0622\u0646\u0644\u0627\u06cc\u0646 \u0628\u0627 \u067e\u0632\u0634\u06a9"
                    : hasVariant($state, "_1", "docter")
                    ? "\u06af\u0641\u062a\u200c\u0648\u06af\u0648\u06cc \u0622\u0646\u0644\u0627\u06cc\u0646 \u0628\u0627 \u067e\u0632\u0634\u06a9"
                    : "Button"}
                </div>
              </Button>
            </Stack__>
          ) : null}
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "bg",
    "rectangle2",
    "\u0627",
    "\u06272",
    "rectangle",
    "findSuitableSpecia",
    "rectangle3",
    "speciality",
    "card4",
    "card5",
    "card6",
    "card7",
    "card8",
    "input",
    "mensah",
    "input2",
    "mensah2",
    "doctorsDetails",
    "bg2",
    "patients",
    "group",
    "rectangle14",
    "patients2",
    "group2",
    "rectangle15",
    "patients3",
    "group3",
    "rectangle16",
    "about",
    "drBellamyNicholas",
    "workingTime",
    "monSat0830Am",
    "button"
  ],
  bg: ["bg", "rectangle2", "\u0627", "\u06272"],
  rectangle2: ["rectangle2", "\u0627", "\u06272"],
  ุง: ["\u0627"],
  ุง2: ["\u06272"],
  rectangle: ["rectangle", "findSuitableSpecia", "rectangle3"],
  findSuitableSpecia: ["findSuitableSpecia"],
  rectangle3: ["rectangle3"],
  speciality: ["speciality", "card4", "card5", "card6", "card7", "card8"],
  card4: ["card4"],
  card5: ["card5"],
  card6: ["card6"],
  card7: ["card7"],
  card8: ["card8"],
  input: ["input"],
  mensah: ["mensah"],
  input2: ["input2"],
  mensah2: ["mensah2"],
  doctorsDetails: [
    "doctorsDetails",
    "bg2",
    "patients",
    "group",
    "rectangle14",
    "patients2",
    "group2",
    "rectangle15",
    "patients3",
    "group3",
    "rectangle16",
    "about",
    "drBellamyNicholas",
    "workingTime",
    "monSat0830Am",
    "button"
  ],
  bg2: [
    "bg2",
    "patients",
    "group",
    "rectangle14",
    "patients2",
    "group2",
    "rectangle15",
    "patients3",
    "group3",
    "rectangle16"
  ],
  patients: ["patients", "group", "rectangle14"],
  group: ["group", "rectangle14"],
  rectangle14: ["rectangle14"],
  patients2: ["patients2", "group2", "rectangle15"],
  group2: ["group2", "rectangle15"],
  rectangle15: ["rectangle15"],
  patients3: ["patients3", "group3", "rectangle16"],
  group3: ["group3", "rectangle16"],
  rectangle16: ["rectangle16"],
  about: ["about", "drBellamyNicholas"],
  drBellamyNicholas: ["drBellamyNicholas"],
  workingTime: ["workingTime", "monSat0830Am"],
  monSat0830Am: ["monSat0830Am"],
  button: ["button"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  bg: "div";
  rectangle2: "div";
  ุง: "div";
  ุง2: "div";
  rectangle: "div";
  findSuitableSpecia: "div";
  rectangle3: "div";
  speciality: "div";
  card4: "div";
  card5: "div";
  card6: "div";
  card7: "div";
  card8: "div";
  input: typeof Input;
  mensah: "div";
  input2: typeof Input;
  mensah2: "div";
  doctorsDetails: "div";
  bg2: "div";
  patients: "div";
  group: "div";
  rectangle14: "div";
  patients2: "div";
  group2: "div";
  rectangle15: "div";
  patients3: "div";
  group3: "div";
  rectangle16: "div";
  about: "div";
  drBellamyNicholas: "div";
  workingTime: "div";
  monSat0830Am: "div";
  button: typeof Button;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicClinic__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicClinic__VariantsArgs;
    args?: PlasmicClinic__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicClinic__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicClinic__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicClinic__ArgProps,
          internalVariantPropNames: PlasmicClinic__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicClinic__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicClinic";
  } else {
    func.displayName = `PlasmicClinic.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "suVPi77vb6vv9K5rYJwyxC"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicClinic = Object.assign(
  // Top-level PlasmicClinic renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    bg: makeNodeComponent("bg"),
    rectangle2: makeNodeComponent("rectangle2"),
    ุง: makeNodeComponent("\u0627"),
    ุง2: makeNodeComponent("\u06272"),
    rectangle: makeNodeComponent("rectangle"),
    findSuitableSpecia: makeNodeComponent("findSuitableSpecia"),
    rectangle3: makeNodeComponent("rectangle3"),
    speciality: makeNodeComponent("speciality"),
    card4: makeNodeComponent("card4"),
    card5: makeNodeComponent("card5"),
    card6: makeNodeComponent("card6"),
    card7: makeNodeComponent("card7"),
    card8: makeNodeComponent("card8"),
    input: makeNodeComponent("input"),
    mensah: makeNodeComponent("mensah"),
    input2: makeNodeComponent("input2"),
    mensah2: makeNodeComponent("mensah2"),
    doctorsDetails: makeNodeComponent("doctorsDetails"),
    bg2: makeNodeComponent("bg2"),
    patients: makeNodeComponent("patients"),
    group: makeNodeComponent("group"),
    rectangle14: makeNodeComponent("rectangle14"),
    patients2: makeNodeComponent("patients2"),
    group2: makeNodeComponent("group2"),
    rectangle15: makeNodeComponent("rectangle15"),
    patients3: makeNodeComponent("patients3"),
    group3: makeNodeComponent("group3"),
    rectangle16: makeNodeComponent("rectangle16"),
    about: makeNodeComponent("about"),
    drBellamyNicholas: makeNodeComponent("drBellamyNicholas"),
    workingTime: makeNodeComponent("workingTime"),
    monSat0830Am: makeNodeComponent("monSat0830Am"),
    button: makeNodeComponent("button"),

    // Metadata about props expected for PlasmicClinic
    internalVariantProps: PlasmicClinic__VariantProps,
    internalArgProps: PlasmicClinic__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicClinic;
/* prettier-ignore-end */
