/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: suVPi77vb6vv9K5rYJwyxC
// Component: k978n3llkb2s

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";

import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import HeaderLiom from "../../HeaderLiom"; // plasmic-import: wNUwxS5tO1GX/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/projectcss
import sty from "./PlasmicAboutUs.module.css"; // plasmic-import: k978n3llkb2s/css

import XIcon from "./icons/PlasmicIcon__X"; // plasmic-import: oNIrT_jmAMSE/icon
import Icon191Icon from "./icons/PlasmicIcon__Icon191"; // plasmic-import: 1Veg0GvVjfgl/icon
import Icon192Icon from "./icons/PlasmicIcon__Icon192"; // plasmic-import: 4j3NxLGconGE/icon

createPlasmicElementProxy;

export type PlasmicAboutUs__VariantMembers = {
  hamyar: "hamyar";
};
export type PlasmicAboutUs__VariantsArgs = {
  hamyar?: SingleBooleanChoiceArg<"hamyar">;
};
type VariantPropType = keyof PlasmicAboutUs__VariantsArgs;
export const PlasmicAboutUs__VariantProps = new Array<VariantPropType>(
  "hamyar"
);

export type PlasmicAboutUs__ArgsType = {};
type ArgPropType = keyof PlasmicAboutUs__ArgsType;
export const PlasmicAboutUs__ArgProps = new Array<ArgPropType>();

export type PlasmicAboutUs__OverridesType = {
  root?: Flex__<"div">;
  section?: Flex__<"section">;
  headerLiom?: Flex__<typeof HeaderLiom>;
};

export interface DefaultAboutUsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicAboutUs__RenderFunc(props: {
  variants: PlasmicAboutUs__VariantsArgs;
  args: PlasmicAboutUs__ArgsType;
  overrides: PlasmicAboutUs__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = _useGlobalVariants();

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "hamyar",
        type: "private",
        variableType: "variant",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return window.document.referrer.includes("hamyar");
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })() ?? $props.hamyar
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const styleTokensClassNames = _useStyleTokens();

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.root,
            { [sty.roothamyar]: hasVariant($state, "hamyar", "hamyar") }
          )}
        >
          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section, {
              [sty.sectionhamyar]: hasVariant($state, "hamyar", "hamyar")
            })}
          >
            <HeaderLiom
              data-plasmic-name={"headerLiom"}
              data-plasmic-override={overrides.headerLiom}
              className={classNames("__wab_instance", sty.headerLiom, {
                [sty.headerLiomhamyar]: hasVariant($state, "hamyar", "hamyar")
              })}
            >
              <div className={classNames(projectcss.all, sty.freeBox__xt3Vz)}>
                <XIcon
                  className={classNames(projectcss.all, sty.svg__ijpVy)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                return window.history.back();
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__psJTo
                  )}
                >
                  {"\u062f\u0631\u0628\u0627\u0631\u0647 \u0645\u0627"}
                </div>
              </div>
            </HeaderLiom>
          </section>
          <div
            className={classNames(projectcss.all, sty.freeBox__jESdY, {
              [sty.freeBoxhamyar__jESdY5Rcqy]: hasVariant(
                $state,
                "hamyar",
                "hamyar"
              )
            })}
          >
            <div className={classNames(projectcss.all, sty.freeBox__sw0Vf)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___1S3Rc
                )}
              >
                {"\u062f\u0631\u0628\u0627\u0631\u0647 \u0645\u0627"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___98M6Q,
                  {
                    [sty.texthamyar___98M6Q5Rcqy]: hasVariant(
                      $state,
                      "hamyar",
                      "hamyar"
                    )
                  }
                )}
              >
                {hasVariant($state, "hamyar", "hamyar")
                  ? "\u0644\u06cc\u0648\u0645 \u0647\u0645\u0631\u0627\u0647 \u0647\u0648\u0634\u0645\u0646\u062f \u0634\u0645\u0627\u0633\u062a \u062a\u0627 \u0628\u062a\u0648\u0627\u0646\u06cc\u062f \u0647\u0645\u0633\u0631\u062a\u0627\u0646 \u0631\u0627 \u062f\u0631 \u0637\u0648\u0644 \u0686\u0631\u062e\u0647\u200c\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc \u0628\u0647\u062a\u0631 \u062f\u0631\u06a9 \u0648 \u0647\u0645\u0631\u0627\u0647\u06cc \u06a9\u0646\u06cc\u062f.\n\u0627\u06cc\u0646 \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u0628\u0647 \u0634\u0645\u0627 \u06a9\u0645\u06a9 \u0645\u06cc\u200c\u06a9\u0646\u062f \u062a\u0627 \u0628\u0627 \u0622\u06af\u0627\u0647\u06cc \u0627\u0632 \u0645\u0631\u0627\u062d\u0644 \u0645\u062e\u062a\u0644\u0641 \u0686\u0631\u062e\u0647\u060c \u062a\u063a\u06cc\u06cc\u0631\u0627\u062a \u062c\u0633\u0645\u06cc \u0648 \u0627\u062d\u0633\u0627\u0633\u06cc \u0627\u0648 \u0631\u0627 \u0628\u0647\u062a\u0631 \u0628\u0634\u0646\u0627\u0633\u06cc\u062f \u0648 \u0628\u062f\u0627\u0646\u06cc\u062f \u062f\u0631 \u0647\u0631 \u0632\u0645\u0627\u0646 \u0686\u0647 \u0631\u0641\u062a\u0627\u0631 \u06cc\u0627 \u0645\u0631\u0627\u0642\u0628\u062a\u06cc \u0645\u06cc\u200c\u062a\u0648\u0627\u0646\u062f \u0628\u0647 \u0622\u0631\u0627\u0645\u0634 \u0648 \u062d\u0645\u0627\u06cc\u062a \u0628\u06cc\u0634\u062a\u0631 \u06a9\u0645\u06a9 \u06a9\u0646\u062f.\n\u062f\u0631 \u0647\u0645\u06cc\u0627\u0631\u060c \u0647\u062f\u0641 \u0645\u0627 \u0627\u06cc\u062c\u0627\u062f \u062f\u0631\u06a9\u060c \u0627\u062d\u062a\u0631\u0627\u0645 \u0648 \u0627\u0631\u062a\u0628\u0627\u0637 \u0639\u0645\u06cc\u0642\u200c\u062a\u0631 \u0645\u06cc\u0627\u0646 \u0632\u0648\u062c\u200c\u0647\u0627\u0633\u062a. \u0628\u0627 \u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0639\u0644\u0645\u06cc \u0633\u0627\u062f\u0647 \u0648 \u062a\u0648\u0635\u06cc\u0647\u200c\u0647\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u062f\u06cc\u060c \u06cc\u0627\u062f \u0645\u06cc\u200c\u06af\u06cc\u0631\u06cc\u062f \u0686\u0637\u0648\u0631 \u062f\u0631 \u0631\u0648\u0632\u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641 \u0686\u0631\u062e\u0647 \u062f\u0631 \u06a9\u0646\u0627\u0631 \u0647\u0645\u0633\u0631\u062a\u0627\u0646 \u0628\u0627\u0634\u06cc\u062f \u2014 \u0628\u0627 \u0645\u0647\u0631\u0628\u0627\u0646\u06cc\u060c \u062f\u0631\u06a9 \u0648 \u0647\u0645\u0631\u0627\u0647\u06cc \u0648\u0627\u0642\u0639\u06cc.\n\u0644\u06cc\u0648\u0645 \u0633\u0627\u062e\u062a\u0647 \u0634\u062f\u0647 \u062a\u0627 \u0631\u0627\u0628\u0637\u0647\u200c\u0627\u06cc \u0622\u0631\u0627\u0645\u200c\u062a\u0631\u060c \u0622\u06af\u0627\u0647\u0627\u0646\u0647\u200c\u062a\u0631 \u0648 \u0635\u0645\u06cc\u0645\u06cc\u200c\u062a\u0631 \u0645\u06cc\u0627\u0646 \u0634\u0645\u0627 \u0648 \u0647\u0645\u0633\u0631\u062a\u0627\u0646 \u0634\u06a9\u0644 \u0628\u06af\u06cc\u0631\u062f. \u2764\ufe0f"
                  : "\u0644\u06cc\u0648\u0645 \u06cc\u06a9 \u0647\u0645\u0631\u0627\u0647 \u0647\u0648\u0634\u0645\u0646\u062f \u0628\u0631\u0627\u06cc \u0634\u0645\u0627\u0633\u062a \u062a\u0627 \u0628\u062a\u0648\u0627\u0646\u06cc\u062f \u0686\u0631\u062e\u0647 \u0642\u0627\u0639\u062f\u06af\u06cc \u062e\u0648\u062f \u0631\u0627 \u0628\u0647\u062a\u0631 \u0645\u062f\u06cc\u0631\u06cc\u062a \u06a9\u0646\u06cc\u062f \u0648 \u0628\u0627 \u0622\u06af\u0627\u0647\u06cc \u0628\u06cc\u0634\u062a\u0631\u06cc \u0627\u0632 \u0628\u062f\u0646 \u0648 \u0633\u0644\u0627\u0645\u062a \u062e\u0648\u062f \u0645\u0631\u0627\u0642\u0628\u062a \u06a9\u0646\u06cc\u062f \u0627\u06cc\u0646 \u0627\u067e\u0644\u06cc\u06a9\u06cc\u0634\u0646 \u0628\u0647 \u0634\u0645\u0627 \u0627\u0645\u06a9\u0627\u0646 \u0645\u06cc\u062f\u0647\u062f \u062a\u0627 \u062a\u0627\u0631\u06cc\u062e\u0647\u0627\u060c \u0639\u0644\u0627\u0626\u0645 \u0648 \u062a\u063a\u06cc\u06cc\u0631\u0627\u062a \u0628\u062f\u0646\u062a\u0627\u0646 \u0631\u0627 \u0628\u0647 \u062f\u0642\u062a \u0631\u062f\u06cc\u0627\u0628\u06cc \u06a9\u0646\u06cc\u062f \u0648 \u062f\u0631 \u0647\u0631 \u0645\u0631\u062d\u0644\u0647 \u0627\u0632 \u0686\u0631\u062e\u0647 \u062e\u0648\u062f \u062a\u0648\u0635\u06cc\u0647 \u0647\u0627\u06cc \u0628\u0647\u062f\u0627\u0634\u062a\u06cc \u0648 \u06a9\u0627\u0631\u0628\u0631\u062f\u06cc \u062f\u0631\u06cc\u0627\u0641\u062a \u06a9\u0646\u06cc\u062f. \n\r\n\u0647\u062f\u0641 \u0645\u0627 \u062f\u0631 \u0644\u06cc\u0648\u0645 \u0627\u06cc\u0646 \u0627\u0633\u062a \u06a9\u0647 \u062a\u062c\u0631\u0628\u0647 \u0627\u06cc \u0631\u0627\u062d\u062a \u062a\u0631 \u0648 \u0628\u0627 \u0622\u0631\u0627\u0645\u0634 \u0628\u06cc\u0634\u062a\u0631\u06cc \u0628\u0631\u0627\u06cc \u0634\u0645\u0627 \u0641\u0631\u0627\u0647\u0645 \u06a9\u0646\u06cc\u0645 \u062a\u0627 \u0628\u062a\u0648\u0627\u0646\u06cc\u062f \u0628\u0627 \u0634\u0646\u0627\u062e\u062a \u0628\u06cc\u0634\u062a\u0631 \u0627\u0632 \u0628\u062f\u0646\u062a\u0627\u0646 \u062f\u0631 \u0631\u0648\u0632\u0647\u0627\u06cc \u0645\u062e\u062a\u0644\u0641 \u0642\u0627\u0639\u062f\u06af\u06cc \u0628\u0647 \u0633\u0644\u0627\u0645\u062a \u0648 \u0622\u0631\u0627\u0645\u0634 \u062e\u0648\u062f \u0627\u0647\u0645\u06cc\u062a \u062f\u0647\u06cc\u062f. \u0644\u06cc\u0648\u0645 \u0647\u0645\u06cc\u0634\u0647 \u062f\u0631 \u06a9\u0646\u0627\u0631 \u0634\u0645\u0627\u0633\u062a \u062a\u0627 \u0627\u06cc\u0646 \u0645\u0633\u06cc\u0631 \u0631\u0627 \u0628\u0627 \u0627\u0637\u0645\u06cc\u0646\u0627\u0646 \u0628\u06cc\u0634\u062a\u0631\u06cc \u0637\u06cc \u06a9\u0646\u06cc\u062f."}
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__me8Ew)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kJoPe
                )}
              >
                {
                  "\u0644\u06cc\u0648\u0645 \u0631\u0648 \u062f\u0631 \u0634\u0628\u06a9\u0647 \u0647\u0627\u06cc \u0627\u062c\u062a\u0645\u0627\u0639\u06cc \u062f\u0646\u0628\u0627\u0644 \u06a9\u0646"
                }
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__kRumQ)}>
                <div
                  className={classNames(projectcss.all, sty.freeBox__qg1U4)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToPage"] = true
                      ? (() => {
                          const actionArgs = {
                            destination: (() => {
                              try {
                                return `https://www.instagram.com/liom.app?igsh=MTRtZG1xZWI2MzFkMA==`;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()
                          };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToPage"] != null &&
                      typeof $steps["goToPage"] === "object" &&
                      typeof $steps["goToPage"].then === "function"
                    ) {
                      $steps["goToPage"] = await $steps["goToPage"];
                    }
                  }}
                >
                  <Icon191Icon
                    className={classNames(projectcss.all, sty.svg__u6INq)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iEjhr
                    )}
                  >
                    {
                      "\u0627\u06cc\u0646\u0633\u062a\u0627\u06af\u0631\u0627\u0645"
                    }
                  </div>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___5MApO)}
                  onClick={async event => {
                    const $steps = {};

                    $steps["goToHttpsTMeLiomSupport"] = true
                      ? (() => {
                          const actionArgs = {
                            destination: "https://t.me/liom_support"
                          };
                          return (({ destination }) => {
                            if (
                              typeof destination === "string" &&
                              destination.startsWith("#")
                            ) {
                              document
                                .getElementById(destination.substr(1))
                                .scrollIntoView({ behavior: "smooth" });
                            } else {
                              __nextRouter?.push(destination);
                            }
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["goToHttpsTMeLiomSupport"] != null &&
                      typeof $steps["goToHttpsTMeLiomSupport"] === "object" &&
                      typeof $steps["goToHttpsTMeLiomSupport"].then ===
                        "function"
                    ) {
                      $steps["goToHttpsTMeLiomSupport"] =
                        await $steps["goToHttpsTMeLiomSupport"];
                    }
                  }}
                >
                  <Icon192Icon
                    className={classNames(projectcss.all, sty.svg__owSU)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mfLyz
                    )}
                  >
                    {"\u062a\u0644\u06af\u0631\u0627\u0645"}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "section", "headerLiom"],
  section: ["section", "headerLiom"],
  headerLiom: ["headerLiom"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  section: "section";
  headerLiom: typeof HeaderLiom;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAboutUs__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAboutUs__VariantsArgs;
    args?: PlasmicAboutUs__ArgsType;
    overrides?: NodeOverridesType<T>;
  } &
    // Specify variants directly as props
    Omit<PlasmicAboutUs__VariantsArgs, ReservedPropsType> &
    // Specify args directly as props
    Omit<PlasmicAboutUs__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAboutUs__ArgProps,
          internalVariantPropNames: PlasmicAboutUs__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAboutUs__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAboutUs";
  } else {
    func.displayName = `PlasmicAboutUs.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "suVPi77vb6vv9K5rYJwyxC"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicAboutUs = Object.assign(
  // Top-level PlasmicAboutUs renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    section: makeNodeComponent("section"),
    headerLiom: makeNodeComponent("headerLiom"),

    // Metadata about props expected for PlasmicAboutUs
    internalVariantProps: PlasmicAboutUs__VariantProps,
    internalArgProps: PlasmicAboutUs__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAboutUs;
/* prettier-ignore-end */
