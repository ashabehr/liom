// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: suVPi77vb6vv9K5rYJwyxC
// Component: U8eK2HQ9FI5q

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import HeaderLiom from "../../HeaderLiom"; // plasmic-import: wNUwxS5tO1GX/component
import { AntdModal } from "@plasmicpkgs/antd5/skinny/registerModal";
import TextInput from "../../TextInput"; // plasmic-import: cOSV4CnhD7mN/component
import { Input } from "@plasmicpkgs/antd/skinny/registerInput";
import { inputHelpers as Input_Helpers } from "@plasmicpkgs/antd/skinny/registerInput";
import Button from "../../Button"; // plasmic-import: ErJEaLhimwjN/component
import RadioGrop from "../../RadioGrop"; // plasmic-import: mcNKMbL_6N75/component
import { ApiRequest } from "@/fragment/components/api-request"; // plasmic-import: GNNZ3K7lFVGd/codeComponent
import Choices from "../../Choices"; // plasmic-import: kqjrVA4cMqR_/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import { useScreenVariants as useScreenVariants_6BytLjmha8VC } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 6BYTLjmha8vC/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "../todo_mvc_app/plasmic.module.css"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/projectcss
import sty from "./PlasmicSignsPage.module.css"; // plasmic-import: U8eK2HQ9FI5q/css

import SearchSvgIcon from "./icons/PlasmicIcon__SearchSvg"; // plasmic-import: Hrcd2gLhG27X/icon
import Icon111Icon from "./icons/PlasmicIcon__Icon111"; // plasmic-import: rjflJ2D4OoXB/icon
import CheckSvgIcon from "../todo_mvc_app/icons/PlasmicIcon__CheckSvg"; // plasmic-import: rMWZc9fpVIkj/icon
import Icon115Icon from "./icons/PlasmicIcon__Icon115"; // plasmic-import: _FBld6r6XP7e/icon
import Icon157Icon from "./icons/PlasmicIcon__Icon157"; // plasmic-import: pYMHtMPOTSpB/icon

import __lib_copyToClipboard from "copy-to-clipboard";

createPlasmicElementProxy;

export type PlasmicSignsPage__VariantMembers = {};
export type PlasmicSignsPage__VariantsArgs = {};
type VariantPropType = keyof PlasmicSignsPage__VariantsArgs;
export const PlasmicSignsPage__VariantProps = new Array<VariantPropType>();

export type PlasmicSignsPage__ArgsType = {};
type ArgPropType = keyof PlasmicSignsPage__ArgsType;
export const PlasmicSignsPage__ArgProps = new Array<ArgPropType>();

export type PlasmicSignsPage__OverridesType = {
  root?: Flex__<"div">;
  headerLiom?: Flex__<typeof HeaderLiom>;
  img?: Flex__<typeof PlasmicImg__>;
  number2?: Flex__<typeof AntdModal>;
  textInput?: Flex__<typeof TextInput>;
  antdInput?: Flex__<typeof Input>;
  button2?: Flex__<typeof Button>;
  name2?: Flex__<typeof AntdModal>;
  textInput2?: Flex__<typeof TextInput>;
  antdInput2?: Flex__<typeof Input>;
  radioGrop?: Flex__<typeof RadioGrop>;
  button3?: Flex__<typeof Button>;
  sms?: Flex__<typeof AntdModal>;
  button4?: Flex__<typeof Button>;
  button5?: Flex__<typeof Button>;
  remove?: Flex__<typeof AntdModal>;
  removeBtn?: Flex__<typeof Button>;
  button9?: Flex__<typeof Button>;
  getSign?: Flex__<typeof ApiRequest>;
  selectionBox?: Flex__<"div">;
  choices?: Flex__<typeof Choices>;
  selectionBox2?: Flex__<"div">;
  befur?: Flex__<typeof Choices>;
  selectionBox3?: Flex__<"div">;
  psychological?: Flex__<typeof Choices>;
  selectionBox4?: Flex__<"div">;
  vaginal?: Flex__<typeof Choices>;
  selectionBox5?: Flex__<"div">;
  womans?: Flex__<typeof Choices>;
  selectionBox6?: Flex__<"div">;
  hereditary?: Flex__<typeof Choices>;
  selectionBox7?: Flex__<"div">;
  venereal?: Flex__<typeof Choices>;
  button?: Flex__<typeof Button>;
};

export interface DefaultSignsPageProps {}

const $$ = {
  copyToClipboard: __lib_copyToClipboard
};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicSignsPage__RenderFunc(props: {
  variants: PlasmicSignsPage__VariantsArgs;
  args: PlasmicSignsPage__ArgsType;
  overrides: PlasmicSignsPage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const $globalActions = useGlobalActions?.();

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "number2.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "textInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "antdInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", Input_Helpers)
      },
      {
        path: "button2.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "number",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "name2.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "textInput2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "antdInput2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec("value", Input_Helpers)
      },
      {
        path: "button3.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "name",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "token",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $ctx.query.token;
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return undefined;
              }
              throw e;
            }
          })()
      },
      {
        path: "relation",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "type",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "hamyar"
      },
      {
        path: "masseg",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({})
      },
      {
        path: "errror",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({})
      },
      {
        path: "sms.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "button4.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "button5.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "clear"
      },
      {
        path: "remove.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "removeBtn.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          hasVariant(globalVariants, "screen", "mobile")
            ? "whiteYellowLine"
            : "whiteYellowLine"
      },
      {
        path: "button9.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "clear"
      },
      {
        path: "getSign.data",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "getSign.error",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "getSign.loading",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "popoverOpen",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [false, false]
      },
      {
        path: "removeItem",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({})
      },
      {
        path: "loadingBtn",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "v",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "choices.list",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.getSign.data.result.before || [];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "psychological.list",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.getSign.data.result.psychological || [];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "vaginal.list",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.getSign.data.result.vaginal || [];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "womans.list",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.getSign.data.result.womans || [];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "hereditary.list",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.getSign.data.result.hereditary || [];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "venereal.list",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.getSign.data.result.venereal || [];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "signs",
        type: "private",
        variableType: "object",
        initFunc: ({ $props, $state, $queries, $ctx }) => ({
          before: [
            {
              value: "headache",
              meaning: "\u0633\u0631\u062f\u0631\u062f",
              icon: "<svg width='35' height='35' viewBox='0 0 35 35' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_16159_32828)'>\r\n<path d='M4.98039 9.10027H4.91003C4.82972 9.08719 4.75405 9.0539 4.69015 9.00352L1.17217 6.2435C1.11967 6.20828 1.07462 6.16306 1.0396 6.11042C1.00458 6.05778 0.980266 5.99876 0.968053 5.93673C0.95584 5.8747 0.955964 5.81087 0.968419 5.74889C0.980874 5.68691 1.00542 5.62799 1.04064 5.57549C1.07587 5.52299 1.12109 5.47794 1.17373 5.44292C1.22636 5.4079 1.28538 5.38359 1.34741 5.37137C1.40944 5.35916 1.47327 5.35928 1.53526 5.37174C1.59724 5.38419 1.65616 5.40874 1.70866 5.44396H1.76143L4.61979 7.68508L4.84846 6.05001C4.86447 5.93542 4.92135 5.83048 5.00862 5.75452C5.0959 5.67856 5.20769 5.6367 5.3234 5.63665H5.39375C5.47324 5.64713 5.54883 5.67737 5.61362 5.7246L8.83978 8.22077C8.89784 8.25377 8.9483 8.29864 8.98785 8.35246C9.0274 8.40628 9.05514 8.46783 9.06929 8.5331C9.08343 8.59838 9.08365 8.6659 9.06993 8.73126C9.05621 8.79662 9.02885 8.85835 8.98966 8.91243C8.95046 8.9665 8.9003 9.0117 8.84245 9.04507C8.7846 9.07845 8.72036 9.09924 8.65392 9.1061C8.58749 9.11297 8.52035 9.10574 8.4569 9.08489C8.39345 9.06405 8.33512 9.03006 8.2857 8.98513L5.64721 7.05104L5.40734 8.71249C5.3875 8.81514 5.33465 8.9085 5.25686 8.97836C5.17906 9.04821 5.08058 9.09074 4.97639 9.09947L4.98039 9.10027Z' fill='#8254C6'/>\r\n<path d='M11.0898 6.07609C11.0094 6.07631 10.9301 6.05629 10.8594 6.01787C10.7887 5.97945 10.7288 5.92386 10.6853 5.85622L9.75378 4.39706L9.39318 5.03669C9.3525 5.11344 9.29174 5.1777 9.21739 5.22262C9.14304 5.26754 9.05789 5.29144 8.97102 5.29174C8.88699 5.29281 8.80409 5.27236 8.7302 5.23233C8.6563 5.19231 8.59388 5.13404 8.54887 5.06308L7.13368 2.68124C7.08823 2.62737 7.05486 2.56437 7.03584 2.4965C7.01682 2.42863 7.0126 2.35747 7.02345 2.28783C7.03429 2.21819 7.05995 2.15168 7.09871 2.09281C7.13746 2.03394 7.1884 1.98407 7.24808 1.94657C7.30777 1.90907 7.37479 1.88482 7.44465 1.87546C7.51451 1.86609 7.58557 1.87184 7.65302 1.89229C7.72047 1.91274 7.78275 1.94744 7.83564 1.99402C7.88853 2.04061 7.9308 2.09801 7.9596 2.16233L8.97023 3.82378L9.32203 3.19934C9.36446 3.12757 9.42486 3.0681 9.49727 3.02678C9.56969 2.98547 9.65162 2.96374 9.73499 2.96374C9.81836 2.96374 9.90029 2.98547 9.97271 3.02678C10.0451 3.0681 10.1055 3.12757 10.148 3.19934L11.528 5.34371C11.5626 5.39723 11.5863 5.45713 11.5976 5.51991C11.6088 5.58268 11.6075 5.64707 11.5935 5.70931C11.5796 5.77155 11.5534 5.83039 11.5165 5.88238C11.4796 5.93438 11.4326 5.97849 11.3784 6.01213L11.2817 6.0649C11.2185 6.08096 11.1526 6.08395 11.0882 6.0737L11.0898 6.07609Z' fill='#8254C6'/>\r\n<path d='M7.54056 1.9894C7.61081 1.9891 7.67998 2.00671 7.74153 2.04057C7.80309 2.07442 7.855 2.12341 7.89236 2.18289L8.83262 3.7388L8.95575 3.94109L9.07009 3.73001L9.34273 3.2111C9.37929 3.14928 9.43134 3.09805 9.49373 3.06247C9.55612 3.02688 9.6267 3.00816 9.69853 3.00816C9.77035 3.00816 9.84094 3.02688 9.90333 3.06247C9.96572 3.09805 10.0178 3.14928 10.0543 3.2111L11.4343 5.35548C11.4638 5.40109 11.484 5.45207 11.4938 5.50549C11.5035 5.55891 11.5027 5.61374 11.4912 5.66683C11.4798 5.71992 11.458 5.77023 11.4271 5.8149C11.3962 5.85957 11.3568 5.89771 11.3112 5.92715H11.2233V6.03269V5.93594C11.1344 5.9687 11.0371 5.96997 10.9474 5.93956C10.8578 5.90914 10.7813 5.84888 10.7307 5.76884L9.85124 4.40962L9.72811 4.21613L9.61378 4.41841L9.30596 4.97249C9.26877 5.0362 9.21553 5.08905 9.15156 5.12578C9.0876 5.16251 9.01512 5.18184 8.94136 5.18184C8.86759 5.18184 8.79512 5.16251 8.73115 5.12578C8.66718 5.08905 8.61396 5.0362 8.57677 4.97249L7.16158 2.58186C7.12221 2.51919 7.10038 2.44709 7.09839 2.3731C7.0964 2.29911 7.11432 2.22594 7.15027 2.16124C7.18621 2.09654 7.23887 2.04267 7.30275 2.00527C7.36662 1.96787 7.43936 1.94831 7.51338 1.94863M7.51338 1.80791C7.40973 1.80456 7.30721 1.83037 7.2175 1.8824C7.12779 1.93443 7.05448 2.0106 7.00592 2.10223C6.95735 2.19386 6.93548 2.29728 6.94278 2.40073C6.95009 2.50418 6.98628 2.60351 7.04724 2.6874L8.49762 5.08603C8.54638 5.16873 8.61578 5.23733 8.69904 5.28513C8.7823 5.33292 8.87654 5.35827 8.97254 5.35867C9.06935 5.3591 9.16459 5.33415 9.24876 5.28632C9.33293 5.23848 9.4031 5.16943 9.45227 5.08603L9.76009 4.53195L10.6396 5.89117C10.7083 5.99956 10.8125 6.08073 10.9344 6.12083C11.0563 6.16093 11.1884 6.15747 11.308 6.11104C11.3866 6.08238 11.4578 6.03629 11.516 5.9762C11.5743 5.91612 11.6182 5.84362 11.6444 5.76414C11.6707 5.68466 11.6786 5.60027 11.6675 5.51731C11.6565 5.43434 11.6268 5.35496 11.5807 5.28512L10.2006 3.14074C10.1513 3.05897 10.0817 2.99132 9.9986 2.94436C9.91546 2.8974 9.8216 2.87272 9.72611 2.87272C9.63063 2.87272 9.53675 2.8974 9.45361 2.94436C9.37047 2.99132 9.30088 3.05897 9.25158 3.14074L8.97893 3.65965L8.03788 2.10374C7.98778 2.02558 7.91882 1.96126 7.83738 1.91669C7.75593 1.87212 7.66459 1.84874 7.57174 1.84868L7.51338 1.80791Z' fill='#8254C6'/>\r\n<path d='M16.0555 15.9995C15.6679 15.999 15.2836 15.9275 14.9218 15.7885C14.8861 15.7816 14.8523 15.7672 14.8226 15.7462C14.793 15.7253 14.7681 15.6982 14.7498 15.6668C14.7314 15.6355 14.72 15.6006 14.7162 15.5644C14.7125 15.5283 14.7164 15.4918 14.7279 15.4573C14.7394 15.4229 14.7581 15.3912 14.7828 15.3646C14.8075 15.338 14.8376 15.3169 14.8711 15.3028C14.9046 15.2888 14.9407 15.282 14.977 15.283C15.0134 15.284 15.049 15.2928 15.0817 15.3087C15.4086 15.4381 15.758 15.5009 16.1095 15.4934C16.461 15.4858 16.8074 15.4081 17.1285 15.2648C17.4495 15.1215 17.7386 14.9155 17.9789 14.6589C18.2192 14.4022 18.4058 14.1002 18.5277 13.7704C18.5346 13.7347 18.549 13.7009 18.5699 13.6713C18.5909 13.6416 18.618 13.6168 18.6493 13.5984C18.6807 13.5801 18.7156 13.5686 18.7517 13.5649C18.7879 13.5611 18.8244 13.5651 18.8588 13.5766C18.8933 13.5881 18.9249 13.6068 18.9516 13.6315C18.9782 13.6562 18.9993 13.6863 19.0133 13.7198C19.0274 13.7532 19.0342 13.7894 19.0331 13.8257C19.0321 13.862 19.0234 13.8977 19.0074 13.9303C18.7832 14.5346 18.3807 15.0565 17.8533 15.427C17.3259 15.7975 16.6984 15.9991 16.0539 16.0051L16.0555 15.9995Z' fill='#8254C6'/>\r\n<path d='M13.3309 12.0362H13.2429C13.1802 12.0125 13.1294 11.965 13.1014 11.9041C13.0734 11.8433 13.0706 11.7738 13.0934 11.7108C13.2414 11.321 13.4648 10.9642 13.7509 10.6607C14.0369 10.3573 14.3799 10.1132 14.7603 9.94244C15.1407 9.77165 15.551 9.67752 15.9678 9.6654C16.3846 9.65329 16.7998 9.72344 17.1894 9.87184C17.245 9.89894 17.2889 9.94531 17.3128 10.0023C17.3367 10.0593 17.3392 10.1231 17.3196 10.1817C17.3001 10.2404 17.2599 10.29 17.2065 10.3212C17.1531 10.3524 17.0902 10.3632 17.0295 10.3516C16.7021 10.2224 16.3521 10.16 16.0002 10.1681C15.6483 10.1762 15.3016 10.2547 14.9805 10.3989C14.6593 10.543 14.3703 10.75 14.1304 11.0076C13.8905 11.2652 13.7045 11.5681 13.5835 11.8987C13.5591 11.9437 13.5218 11.9804 13.4763 12.0039C13.4308 12.0275 13.3793 12.0368 13.3284 12.0306L13.3309 12.0362Z' fill='#8254C6'/>\r\n<path d='M16.0578 14.9099H15.9699C15.9023 14.9099 15.8374 14.883 15.7895 14.8352C15.7417 14.7874 15.7148 14.7225 15.7148 14.6549C15.7148 14.5872 15.7417 14.5223 15.7895 14.4745C15.8374 14.4267 15.9023 14.3998 15.9699 14.3998C16.1773 14.4092 16.3845 14.3775 16.5796 14.3065C16.7747 14.2355 16.9538 14.1266 17.1066 13.9861C17.2594 13.8455 17.3829 13.6761 17.4699 13.4876C17.557 13.2992 17.6058 13.0953 17.6138 12.8879C17.6138 12.8202 17.6406 12.7553 17.6885 12.7075C17.7363 12.6597 17.8012 12.6328 17.8688 12.6328C17.9365 12.6328 18.0013 12.6597 18.0492 12.7075C18.097 12.7553 18.1239 12.8202 18.1239 12.8879C18.106 13.4261 17.8812 13.9366 17.4964 14.3133C17.1116 14.6899 16.5963 14.9036 16.0578 14.9099Z' fill='#8254C6'/>\r\n<path d='M14.2288 13.0058C14.1953 13.0047 14.1624 12.9969 14.1319 12.9831C14.1014 12.9692 14.0739 12.9494 14.051 12.9249C14.0281 12.9004 14.0103 12.8717 13.9986 12.8403C13.9868 12.8089 13.9814 12.7755 13.9826 12.742C13.9935 12.4681 14.0583 12.199 14.1734 11.9502C14.2885 11.7014 14.4515 11.4777 14.6531 11.292C14.8548 11.1064 15.0911 10.9623 15.3485 10.8681C15.606 10.7739 15.8795 10.7314 16.1533 10.7431C16.221 10.7431 16.2859 10.77 16.3337 10.8178C16.3815 10.8656 16.4084 10.9305 16.4084 10.9982C16.4084 11.0658 16.3815 11.1307 16.3337 11.1785C16.2859 11.2263 16.221 11.2532 16.1533 11.2532C15.7351 11.2367 15.3273 11.3867 15.0194 11.6702C14.7114 11.9537 14.5283 12.3477 14.5103 12.7659C14.5103 12.8336 14.4834 12.8985 14.4356 12.9463C14.3877 12.9941 14.3229 13.021 14.2552 13.021L14.2288 13.0058Z' fill='#8254C6'/>\r\n<path d='M16.056 13.8471H16.0121C15.7507 13.8414 15.5021 13.7327 15.3203 13.5448C15.1385 13.3569 15.0382 13.1048 15.0411 12.8434C15.044 12.5819 15.1499 12.3322 15.3358 12.1483C15.5217 11.9644 15.7726 11.8613 16.0341 11.8613C16.2955 11.8613 16.5464 11.9644 16.7323 12.1483C16.9182 12.3322 17.0241 12.5819 17.027 12.8434C17.0299 13.1048 16.9296 13.3569 16.7478 13.5448C16.566 13.7327 16.3174 13.8414 16.056 13.8471ZM16.056 12.3176C15.9615 12.3202 15.8699 12.3505 15.7926 12.405C15.7153 12.4594 15.6558 12.5355 15.6216 12.6236C15.5874 12.7117 15.58 12.808 15.6003 12.9003C15.6207 12.9926 15.6678 13.0769 15.7359 13.1425C15.8039 13.2081 15.8898 13.2522 15.9828 13.2691C16.0758 13.2861 16.1718 13.2752 16.2586 13.2378C16.3454 13.2004 16.4192 13.1382 16.4708 13.059C16.5224 12.9798 16.5495 12.8871 16.5486 12.7926C16.5479 12.7289 16.5347 12.6659 16.5095 12.6074C16.4843 12.549 16.4477 12.4961 16.4018 12.4518C16.356 12.4076 16.3018 12.373 16.2424 12.35C16.1831 12.3269 16.1197 12.3159 16.056 12.3176Z' fill='#8254C6'/>\r\n<path d='M32.5997 22.8655C32.5006 19.0538 31.5441 15.3135 29.8013 11.9221C28.8198 10.0677 27.3524 8.51515 25.5563 7.43068C23.7601 6.3462 21.7029 5.77066 19.6047 5.76567C17.9819 5.7609 16.3786 6.11915 14.9122 6.81418C13.4458 7.50922 12.1533 8.52344 11.1296 9.78257C10.8745 10.1024 10.6499 10.3982 10.6722 10.6621C10.6879 10.7456 10.7201 10.8252 10.7669 10.8962C10.8138 10.9672 10.8743 11.0281 10.9449 11.0754C11.0567 11.177 11.1989 11.2388 11.3495 11.2513C11.6485 11.2513 11.9563 10.9315 12.229 10.6621L12.4576 10.4334C13.1113 9.71802 13.8456 9.0808 14.646 8.53448C16.1275 7.60952 17.839 7.11917 19.5855 7.11929C21.423 7.13786 23.2219 7.64925 24.7943 8.6001C26.3668 9.55094 27.6552 10.9064 28.5252 12.525C30.6176 16.322 31.1005 20.5204 31.3116 24.4965C31.3732 25.6567 31.3556 26.8152 31.3116 27.925V29.5952L23.7959 28.2152L24.0686 27.9426C26.9165 24.9843 28.0415 21.3416 27.4882 16.8289C27.3739 15.9494 27.0085 15.7216 26.4864 15.7216H26.1434C25.9104 15.7554 25.6753 15.773 25.4398 15.7743C24.1453 15.7546 22.8994 15.2783 21.9218 14.4295C21.315 13.9498 20.9623 13.6564 20.7177 13.6564C20.473 13.6564 20.19 14.0345 19.6783 14.7197C18.3247 16.5395 16.8127 17.4182 15.0457 17.4182C14.1985 17.3983 13.3618 17.2255 12.576 16.9081C12.3858 16.8295 12.1834 16.7848 11.9779 16.7762C11.818 16.7762 11.3447 16.7762 11.2743 17.6557C10.9545 21.6374 11.9339 24.8196 14.2454 27.3949C14.3637 27.527 14.4752 27.6649 14.5796 27.8082L14.7395 28.0017L14.9594 28.2744L8.05054 29.5313H7.9642C7.77071 29.5313 7.74433 29.3554 7.72434 29.1267C7.35617 25.2129 7.67739 21.2649 8.67339 17.4622C8.84929 16.7154 8.67339 16.4779 8.25123 16.3548C8.16604 16.3268 8.07706 16.312 7.98738 16.3108C7.87305 16.3108 7.53005 16.3108 7.33656 17.0488C6.15978 21.3244 5.84024 25.7905 6.3963 30.1901C6.40152 30.2721 6.40152 30.3543 6.3963 30.4363C7.89065 30.1165 9.40257 29.8383 10.9233 29.6456C11.2412 29.5567 11.5639 29.4862 11.8899 29.4345C12.1879 29.4031 12.4823 29.3442 12.7694 29.2586C13.259 29.1113 13.7629 29.017 14.2726 28.9772C14.3186 28.964 14.3673 28.964 14.4133 28.9772C14.9456 28.7718 15.5269 28.7289 16.0836 28.854H16.3826C16.4398 28.8698 16.49 28.9045 16.5252 28.9524C16.5603 29.0002 16.5782 29.0586 16.5761 29.1179C17.582 29.3461 18.6131 29.4437 19.6439 29.4081C20.7854 29.2624 21.9027 28.9667 22.9668 28.5286C23.0234 28.507 23.0861 28.507 23.1427 28.5286C23.6433 28.5101 24.1417 28.6033 24.6019 28.8013C24.761 28.7973 24.9193 28.8245 25.068 28.8812C27.4762 29.7607 30.0691 29.8743 32.487 30.6402C32.4769 30.532 32.4769 30.4231 32.487 30.3148C32.487 29.4353 32.5397 28.4951 32.5749 27.6076C32.5997 26.1004 32.6788 24.4654 32.5997 22.8655ZM22.667 27.263C21.7355 27.9973 20.5914 28.4105 19.4056 28.4407C18.4159 28.436 17.447 28.1561 16.6073 27.6323C14.0407 26.0764 12.1506 21.9012 12.6431 18.8422V18.6023L12.863 18.6639C13.5112 18.8379 14.1787 18.9296 14.8499 18.9365C15.963 18.9098 17.0549 18.627 18.0412 18.1103C19.0274 17.5935 19.8814 16.8566 20.537 15.9566L20.6249 15.8423L26.0746 17.6812V17.7868C26.9006 20.7139 25.1951 25.4344 22.6638 27.3013L22.667 27.263Z' fill='#8254C6'/>\r\n<path d='M6.60938 30.3646L16.1287 28.6057C16.1287 28.6057 18.6873 30.3023 23.0048 28.3242C32.0676 30.3726 32.0788 30.4686 32.0788 30.4686' stroke='#8254C6' stroke-width='0.262956' stroke-miterlimit='10'/>\r\n<path d='M8.91211 14.4964L9.59812 12.8877' stroke='#8254C6' stroke-width='0.797349' stroke-miterlimit='10' stroke-linecap='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_16159_32828'>\r\n<rect width='34.778' height='34.778' fill='white' transform='translate(0.113281 0.111328)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "stomach_ache",
              meaning: "\u062f\u0644\u200c\u062f\u0631\u062f",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M10.8902 34.3312H10.781C10.6626 34.3316 10.5488 34.2853 10.4643 34.2023C10.1719 33.6813 9.92035 33.1383 9.71183 32.5784C8.9081 30.3558 8.49931 28.0097 8.50395 25.6462C8.50918 22.3943 9.1817 19.178 10.4799 16.1965C11.7827 13.3401 12.374 10.2105 12.2031 7.07574C12.1727 6.92054 12.1971 6.75959 12.272 6.62032C12.3094 6.5791 12.3564 6.54779 12.4088 6.52917C12.4612 6.51056 12.5174 6.50522 12.5724 6.51365C12.8185 6.51365 12.8596 6.64248 12.8694 6.97892C13.0839 10.061 12.5505 13.1492 11.3144 15.9806C9.74139 19.4233 9.03107 23.1974 9.24493 26.9764C9.37 29.2742 9.93493 31.5267 10.9091 33.6115L10.9681 33.7108L11.0174 33.8003C10.9842 33.9515 10.9412 34.1003 10.8885 34.2458L10.8902 34.3312Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.373333' stroke-miterlimit='10'/>\r\n<path d='M29.5695 34.3704C29.514 34.382 29.4567 34.382 29.4012 34.3704C29.3619 34.3556 29.3259 34.3331 29.2953 34.3042C29.2647 34.2753 29.2402 34.2406 29.2232 34.2022C29.2027 34.0435 29.2378 33.8826 29.3225 33.7468C30.1522 32.0155 30.6846 30.1569 30.8971 28.2489C31.3797 24.1247 30.7257 19.947 29.0057 16.1676C27.7838 13.4158 27.2013 10.4229 27.3022 7.41368V7.28484C27.2886 7.16039 27.3055 7.03451 27.3514 6.91804C27.392 6.85368 27.4456 6.79852 27.5088 6.75612C27.5719 6.71372 27.6433 6.68502 27.7182 6.67188C27.8283 6.73727 27.9124 6.83874 27.9562 6.95908C27.9805 7.08013 27.9805 7.20482 27.9562 7.32587C27.9606 7.37528 27.9606 7.42499 27.9562 7.4744C27.8831 10.4196 28.4614 13.3446 29.6499 16.0404C31.0361 19.1573 31.748 22.5319 31.7391 25.9431C31.7398 28.604 31.1865 31.2359 30.1143 33.6713L29.9281 34.0734C29.8173 34.2416 29.704 34.3704 29.5695 34.3704Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.373333' stroke-miterlimit='10'/>\r\n<path d='M20.1405 34.3407C20.096 34.344 20.0514 34.3384 20.0091 34.3243C19.9669 34.3102 19.9278 34.2879 19.8943 34.2586C19.8141 34.1176 19.7851 33.9533 19.8122 33.7933V30.6637C19.824 30.4546 19.7873 30.2457 19.7049 30.0532C19.6224 29.8607 19.4966 29.69 19.3371 29.5543C18.6634 28.8978 17.9905 28.2372 17.3562 27.5734L16.5841 26.8012L16.4749 26.7118C16.4159 26.7118 16.356 26.6125 16.3461 26.5731C16.3142 26.42 16.2978 26.2642 16.2969 26.1078V26.0258H16.406C16.5314 26.0102 16.6587 26.0306 16.7728 26.0849C17.5351 26.8078 18.2983 27.5701 19.0212 28.3004L19.4175 28.6968C19.5464 28.8256 19.6637 28.9643 19.804 29.1325L20.0321 29.3901L20.1142 29.4796L20.966 28.6278L23.3489 26.2514L23.431 26.1694C23.5106 26.0664 23.612 25.9823 23.728 25.9232H23.847C23.9383 25.9157 24.0293 25.9401 24.1047 25.9921C24.1519 26.1166 24.1519 26.2541 24.1047 26.3786C24.0647 26.4567 24.0071 26.5244 23.9364 26.5764L23.847 26.6658L23.1241 27.3888C22.3913 28.1215 21.6388 28.8838 20.8864 29.6166C20.7482 29.7407 20.6392 29.8939 20.5673 30.0652C20.4954 30.2364 20.4622 30.4215 20.4703 30.607V33.7663C20.4925 33.9229 20.4637 34.0826 20.3883 34.2217C20.356 34.2503 20.3183 34.2724 20.2775 34.2864C20.2366 34.3005 20.1934 34.3064 20.1503 34.3037L20.1405 34.3407Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.373333' stroke-miterlimit='10'/>\r\n<path d='M6.47387 15.8628C6.3712 15.8639 6.26994 15.839 6.17943 15.7905C6.08893 15.742 6.0121 15.6715 5.95608 15.5855L4.62429 13.5144L4.08846 14.4761C4.03537 14.5717 3.95755 14.6514 3.86314 14.7067C3.76873 14.762 3.66121 14.7909 3.5518 14.7903C3.4445 14.7909 3.33885 14.7639 3.24491 14.7121C3.15097 14.6602 3.07187 14.5852 3.01514 14.4941L1.07366 11.2028C1.00908 11.139 0.959075 11.062 0.92708 10.9771C0.895085 10.8922 0.881858 10.8014 0.888309 10.7108C0.894759 10.6203 0.920735 10.5323 0.964449 10.4527C1.00816 10.3732 1.06857 10.3041 1.14154 10.2501C1.2145 10.1962 1.29829 10.1587 1.38713 10.1402C1.47598 10.1217 1.56778 10.1226 1.65622 10.143C1.74465 10.1633 1.82763 10.2026 1.89946 10.258C1.97129 10.3135 2.03025 10.3839 2.0723 10.4643L3.51405 12.8489L4.03184 11.9241C4.0705 11.8535 4.12273 11.7912 4.18555 11.7409C4.24837 11.6905 4.32052 11.6531 4.39785 11.6308C4.47518 11.6084 4.55617 11.6016 4.63616 11.6107C4.71614 11.6197 4.79354 11.6445 4.8639 11.6836C4.95314 11.7325 5.02916 11.8024 5.08545 11.8872L6.93503 14.8273C6.97947 14.8951 7.00996 14.971 7.02474 15.0507C7.03951 15.1304 7.03827 15.2122 7.02109 15.2914C7.0039 15.3707 6.97111 15.4456 6.92464 15.512C6.87816 15.5785 6.81893 15.6349 6.7504 15.6782H6.62075L6.47387 15.8628Z' fill='#8254C6'/>\r\n<path d='M32.8591 15.4393C32.7061 15.4395 32.5576 15.3872 32.4385 15.2912C32.3193 15.1951 32.2367 15.0611 32.2045 14.9115C32.1722 14.7619 32.1922 14.6058 32.2612 14.4692C32.3302 14.3326 32.4439 14.2238 32.5834 14.1609L34.9631 13.0793L34.0391 12.3753C33.9474 12.3045 33.8758 12.2111 33.8311 12.1043C33.7863 11.9974 33.7701 11.8808 33.784 11.7658C33.7979 11.6509 33.8415 11.5415 33.9103 11.4484C33.9792 11.3553 34.0711 11.2816 34.1769 11.2347L37.9139 9.68134C37.9939 9.64519 38.0803 9.62516 38.1681 9.6224C38.2559 9.61964 38.3434 9.6342 38.4256 9.66525C38.5078 9.6963 38.583 9.74323 38.6471 9.80337C38.7111 9.8635 38.7627 9.93566 38.7988 10.0157C38.835 10.0958 38.855 10.1822 38.8578 10.27C38.8606 10.3578 38.846 10.4453 38.8149 10.5275C38.7839 10.6097 38.737 10.6849 38.6768 10.749C38.6167 10.813 38.5445 10.8646 38.4645 10.9007L35.7303 12.0963L36.6329 12.7848C36.7207 12.8548 36.7894 12.9458 36.8328 13.0494C36.8761 13.153 36.8926 13.2659 36.8808 13.3776C36.8691 13.4893 36.8294 13.5962 36.7654 13.6885C36.7014 13.7808 36.6152 13.8555 36.5148 13.9057L33.1324 15.459C33.0401 15.4723 32.9461 15.4656 32.8566 15.4393H32.8591Z' fill='#8254C6'/>\r\n<path d='M19.9434 20.7949L20.2773 20.3477L20.6515 20.8441' fill='#8254C6'/>\r\n<path d='M19.9434 20.7949L20.2773 20.3477L20.6515 20.8441' stroke='#8254C6' stroke-width='0.266667' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M19.4045 17.9188C19.4109 18.1024 19.4717 18.28 19.579 18.4292C19.6863 18.5783 19.8355 18.6922 20.0076 18.7566C20.1797 18.821 20.367 18.8329 20.5458 18.7908C20.7247 18.7487 20.8871 18.6546 21.0124 18.5203C21.1378 18.386 21.2205 18.2175 21.2501 18.0362C21.2798 17.8548 21.255 17.6688 21.1789 17.5015C21.1028 17.3343 20.9789 17.1934 20.8227 17.0965C20.6665 16.9997 20.4852 16.9514 20.3016 16.9576C20.1795 16.9618 20.0595 16.9899 19.9484 17.0405C19.8372 17.0911 19.7371 17.163 19.6538 17.2523C19.5705 17.3416 19.5056 17.4464 19.4628 17.5607C19.42 17.6751 19.4002 17.7968 19.4045 17.9188C19.4093 17.9774 19.4364 18.0318 19.4803 18.0708C19.5242 18.1099 19.5814 18.1305 19.6401 18.1285C19.6988 18.1264 19.7544 18.1018 19.7955 18.0598C19.8365 18.0178 19.8598 17.9616 19.8604 17.9028C19.8728 17.79 19.9255 17.6854 20.0087 17.6082C20.0919 17.5309 20.2001 17.4862 20.3135 17.4823C20.427 17.4783 20.5381 17.5153 20.6265 17.5865C20.7149 17.6577 20.7747 17.7584 20.795 17.8701C20.7826 17.983 20.73 18.0876 20.6467 18.1648C20.5635 18.242 20.4553 18.2867 20.3419 18.2907C20.2284 18.2947 20.1173 18.2577 20.0289 18.1864C19.9405 18.1152 19.8807 18.0145 19.8604 17.9028C19.8369 17.6102 19.3703 17.6181 19.4045 17.9188Z' fill='#8254C6'/>\r\n<path d='M21.3576 16.8391C21.5487 17.1112 21.6492 17.4367 21.6447 17.7691C21.6403 18.1016 21.5312 18.4242 21.3328 18.6911C21.1621 18.9335 21.569 19.1478 21.7397 18.9054C21.9769 18.5664 22.1048 18.163 22.1063 17.7493C22.1079 17.3356 21.9829 16.9313 21.7482 16.5905C21.5849 16.3417 21.1944 16.6085 21.3573 16.8313L21.3576 16.8391Z' fill='#8254C6'/>\r\n<path d='M22.0264 16.4086C22.3179 16.7985 22.4751 17.2724 22.4744 17.7592C22.4737 18.246 22.3151 18.7194 22.0225 19.1084C21.8514 19.3429 22.1806 19.6574 22.3595 19.4226C22.7219 18.9585 22.9236 18.3891 22.9341 17.8003C22.9445 17.2115 22.7632 16.6353 22.4175 16.1586C22.2461 15.9198 21.8637 16.178 22.0261 16.4003L22.0264 16.4086Z' fill='#8254C6'/>\r\n<path d='M22.6024 15.8158C22.8727 16.0562 23.0881 16.352 23.2339 16.683C23.3797 17.0141 23.4524 17.3727 23.4472 17.7344C23.4421 18.0959 23.3592 18.4521 23.2042 18.7787C23.0492 19.1054 22.8257 19.3948 22.5488 19.6274C22.3271 19.8228 22.6651 20.1369 22.8858 19.9416C23.203 19.6639 23.4578 19.3222 23.6333 18.9389C23.8089 18.5556 23.9012 18.1395 23.9041 17.7179C23.9071 17.2962 23.8206 16.8788 23.6504 16.493C23.4801 16.1072 23.2301 15.7619 22.9166 15.4798C22.7061 15.2749 22.3914 15.6125 22.6024 15.8158Z' fill='#8254C6'/>\r\n<path d='M18.9003 16.5907C18.6901 16.947 18.5937 17.3591 18.6242 17.7717C18.6547 18.1843 18.8105 18.5777 19.0708 18.8993C19.2581 19.1291 19.6493 18.879 19.4617 18.6571C19.2456 18.4048 19.1143 18.0909 19.0866 17.7599C19.0589 17.4288 19.1362 17.0975 19.3075 16.8128C19.4619 16.5548 19.0546 16.3405 18.9006 16.5986L18.9003 16.5907Z' fill='#8254C6'/>\r\n<path d='M18.2358 16.1979C17.9242 16.6976 17.7834 17.285 17.8349 17.8717C17.8864 18.4583 18.1272 19.0122 18.5211 19.45C18.7165 19.6716 19.0228 19.3339 18.8353 19.113C18.5161 18.7454 18.3248 18.2842 18.29 17.7987C18.2553 17.3131 18.3789 16.8294 18.6425 16.4201C18.7974 16.162 18.3901 15.9478 18.2361 16.2058L18.2358 16.1979Z' fill='#8254C6'/>\r\n<path d='M17.6496 15.5662C17.3565 15.8695 17.1312 16.2316 16.9884 16.6284C16.8455 17.0252 16.7884 17.4478 16.8209 17.8683C16.8534 18.2888 16.9746 18.6976 17.1767 19.0678C17.3787 19.4379 17.657 19.7611 17.9931 20.0158C18.2279 20.1952 18.5421 19.8582 18.3073 19.6788C18.0144 19.4663 17.7708 19.1932 17.5931 18.878C17.4153 18.5629 17.3075 18.2131 17.2771 17.8526C17.2467 17.492 17.2943 17.1291 17.4167 16.7887C17.5391 16.4482 17.7335 16.1381 17.9865 15.8794C18.1828 15.6618 17.8536 15.3468 17.6496 15.5662Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "chest_pain",
              meaning: "\u062f\u0631\u062f \u0633\u06cc\u0646\u0647",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M16.4737 16.2555C16.3881 16.2528 16.3045 16.2286 16.2308 16.185C16.1571 16.1415 16.0955 16.08 16.0519 16.0062L15.0934 14.4445L14.7003 15.1155C14.6543 15.1935 14.5882 15.2576 14.509 15.3015C14.4298 15.3453 14.3403 15.3671 14.2498 15.3648C14.1602 15.3635 14.0724 15.339 13.9951 15.2936C13.9179 15.2482 13.8537 15.1836 13.8089 15.106L12.3822 12.5657C12.334 12.4509 12.3287 12.3226 12.3675 12.2042C12.4062 12.0859 12.4863 11.9855 12.5931 11.9214C12.6999 11.8574 12.8262 11.8339 12.9488 11.8554C13.0715 11.8769 13.1823 11.9419 13.2609 12.0385L14.2858 13.8303L14.6692 13.1912C14.7143 13.1157 14.7782 13.0533 14.8546 13.0099C14.931 12.9665 15.0174 12.9437 15.1053 12.9437C15.1932 12.9437 15.2796 12.9665 15.3561 13.0099C15.4325 13.0533 15.4964 13.1157 15.5415 13.1912L16.9402 15.4718C16.975 15.529 16.9982 15.5926 17.0084 15.6588C17.0186 15.725 17.0156 15.7926 16.9995 15.8576C16.9835 15.9226 16.9547 15.9838 16.9149 16.0377C16.8752 16.0916 16.8251 16.1371 16.7677 16.1716L16.6622 16.2195C16.6014 16.2446 16.5363 16.2576 16.4705 16.2578L16.4737 16.2555Z' fill='#8254C6'/>\r\n<path d='M12.8432 11.8772C12.9168 11.8783 12.989 11.8983 13.0528 11.9352C13.1165 11.9721 13.1698 12.0247 13.2074 12.0881L14.166 13.7456L14.2906 13.9661L14.4152 13.7552L14.722 13.2184C14.7598 13.1527 14.8143 13.0981 14.8799 13.0602C14.9455 13.0222 15.02 13.0022 15.0958 13.0022C15.1716 13.0022 15.2461 13.0222 15.3117 13.0602C15.3774 13.0981 15.4318 13.1527 15.4697 13.2184L16.8588 15.5086C16.8885 15.557 16.9084 15.6108 16.9172 15.667C16.9261 15.7231 16.9238 15.7804 16.9104 15.8356C16.8971 15.8909 16.8729 15.9429 16.8394 15.9888C16.8059 16.0346 16.7636 16.0734 16.715 16.1029H16.6288V16.2195V16.1237C16.5347 16.1581 16.4317 16.1588 16.3372 16.1255C16.2428 16.0923 16.1629 16.0273 16.1111 15.9416L15.2388 14.4853L15.1142 14.2744L14.9896 14.4853L14.6541 15.0605C14.6156 15.1282 14.5598 15.1846 14.4925 15.2238C14.4251 15.263 14.3486 15.2837 14.2707 15.2837C14.1927 15.2837 14.1162 15.263 14.0488 15.2238C13.9815 15.1846 13.9257 15.1282 13.8872 15.0605L12.4597 12.521C12.4177 12.4544 12.3946 12.3776 12.3931 12.2988C12.3916 12.2201 12.4117 12.1424 12.4512 12.0742C12.4907 12.0061 12.5481 11.95 12.6172 11.9122C12.6863 11.8744 12.7645 11.8562 12.8432 11.8596M12.8432 11.7158C12.7402 11.7154 12.6388 11.7421 12.5495 11.7934C12.4602 11.8447 12.3859 11.9187 12.3344 12.0079C12.2828 12.0971 12.2557 12.1983 12.2559 12.3013C12.256 12.4043 12.2833 12.5055 12.3351 12.5945L13.7626 15.134C13.8106 15.223 13.8809 15.2981 13.9666 15.3518C14.0523 15.4056 14.1504 15.4362 14.2515 15.4407C14.3546 15.4442 14.4568 15.4203 14.5477 15.3714C14.6387 15.3226 14.715 15.2506 14.7691 15.1627L15.1046 14.5876L15.9769 16.0438C16.0462 16.1579 16.1525 16.2448 16.2781 16.2902C16.4036 16.3355 16.5409 16.3365 16.6671 16.293C16.7504 16.2645 16.8261 16.2176 16.8888 16.1557C16.9514 16.0938 16.9992 16.0186 17.0287 15.9357C17.0582 15.8528 17.0686 15.7642 17.0591 15.6767C17.0496 15.5892 17.0204 15.505 16.9738 15.4303L15.5751 13.1497C15.5212 13.0726 15.4495 13.0096 15.3661 12.9661C15.2826 12.9226 15.1899 12.8999 15.0958 12.8999C15.0017 12.8999 14.909 12.9226 14.8256 12.9661C14.7422 13.0096 14.6704 13.0726 14.6165 13.1497L14.3098 13.6865L13.3512 12.029C13.3005 11.9466 13.2302 11.8781 13.1466 11.8296C13.0629 11.7811 12.9686 11.7541 12.8719 11.751L12.8432 11.7158Z' fill='#8254C6'/>\r\n<path d='M23.1422 16.1795L23.0368 16.122C22.929 16.0417 22.8573 15.922 22.8376 15.7891C22.8178 15.6561 22.8515 15.5208 22.9313 15.4126L24.5218 13.2558C24.5743 13.1865 24.6438 13.1317 24.7236 13.0969C24.8034 13.0621 24.8907 13.0484 24.9773 13.057C25.064 13.0657 25.1469 13.0965 25.2182 13.1464C25.2895 13.1963 25.3468 13.2637 25.3845 13.3421L25.7104 14.0227L26.8887 12.3364C26.9249 12.2736 26.9739 12.219 27.0325 12.1763C27.0911 12.1337 27.158 12.1038 27.229 12.0886C27.2999 12.0734 27.3732 12.0733 27.4441 12.0883C27.5151 12.1033 27.5821 12.133 27.6408 12.1755C27.6995 12.2181 27.7487 12.2725 27.785 12.3352C27.8214 12.3979 27.8442 12.4676 27.8519 12.5397C27.8596 12.6118 27.8521 12.6847 27.8298 12.7537C27.8076 12.8228 27.771 12.8863 27.7226 12.9403L26.0747 15.3367C26.0225 15.4083 25.9527 15.4653 25.8722 15.5023C25.7916 15.5392 25.7029 15.5548 25.6146 15.5476C25.5241 15.5403 25.4373 15.5088 25.3632 15.4566C25.289 15.4043 25.2302 15.3332 25.1928 15.2505L24.8573 14.5507L23.7845 16.0165C23.712 16.1119 23.6092 16.1797 23.493 16.2087C23.3769 16.2378 23.2542 16.2263 23.1454 16.1763L23.1422 16.1795Z' fill='#8254C6'/>\r\n<path d='M28.8247 16.043C30.4343 19.3182 30.5589 22.1851 28.6234 25.3276C28.1646 26.0285 27.8396 26.8082 27.6648 27.6274C27.2691 30.2031 27.5127 32.8366 28.3741 35.296C28.5179 35.7562 29.2464 35.5549 29.1027 35.0947C28.5441 33.3848 28.2688 31.595 28.2879 29.7962C28.2879 27.2855 29.3894 26.1456 30.463 24.0447C31.9808 21.169 30.8752 18.3915 29.5045 15.6412C29.2936 15.2099 28.6417 15.5837 28.8526 16.0247L28.8247 16.043Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110437'/>\r\n<path d='M22.8176 4.79678C22.5683 9.41553 24.8298 8.39145 28.2215 9.77899C34.2582 12.2417 33.5009 18.5659 33.3379 23.7974C33.2356 27.2625 33.4183 30.7301 33.8843 34.1652C33.9514 34.6349 34.6991 34.6445 34.6416 34.1652C34.144 30.4183 33.9804 26.6346 34.1527 22.8588C34.2773 19.9167 34.6033 16.7934 33.5201 13.9768C33.0237 12.5529 32.1492 11.2909 30.9902 10.3262C28.585 8.46734 23.3216 9.04248 23.5836 4.79758C23.5836 4.69716 23.5437 4.60085 23.4727 4.52985C23.4017 4.45884 23.3054 4.41895 23.205 4.41895C23.1046 4.41895 23.0082 4.45884 22.9372 4.52985C22.8662 4.60085 22.8263 4.69716 22.8263 4.79758L22.8176 4.79678Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110437'/>\r\n<path d='M10.5325 16.2176C9.40216 18.527 8.17518 21.1423 9.15293 23.7265C9.81435 25.4607 11.261 26.6022 11.6444 28.5194C11.9291 30.5828 11.6918 32.6847 10.9543 34.6327C10.8009 35.0928 11.5294 35.2941 11.6828 34.834C12.4487 32.7562 12.7051 30.525 12.4305 28.3276C12.2526 27.4593 11.8972 26.6372 11.3864 25.9128C9.46926 22.7703 9.57551 19.8954 11.1851 16.6282C11.396 16.1968 10.7442 15.8134 10.5333 16.2448L10.5325 16.2176Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110437'/>\r\n<path d='M16.4445 5.33298C16.6649 9.51078 11.9983 8.9548 9.62259 10.4781C8.17359 11.4488 7.08001 12.8648 6.50721 14.5122C5.54863 17.0516 5.74036 19.8011 5.82663 22.4651C6.01252 26.553 5.85566 30.6493 5.35772 34.711C5.29062 35.1903 6.04789 35.1807 6.11499 34.711C6.58648 31.2764 6.76925 27.8083 6.66139 24.3432C6.48884 19.3905 5.50231 12.3082 11.7778 10.3248C15.275 9.2232 17.4214 9.80714 17.1818 5.34256C17.1818 4.86327 16.4053 4.85369 16.4245 5.34256L16.4445 5.33298Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110437'/>\r\n<path d='M18.6103 22.0326C18.6105 22.3011 18.6896 22.5635 18.8377 22.7874C18.9859 23.0113 19.1965 23.1867 19.4435 23.2919C19.6905 23.397 19.963 23.4273 20.227 23.379C20.4911 23.3306 20.7351 23.2057 20.9288 23.0198C21.1225 22.8339 21.2573 22.5952 21.3165 22.3334C21.3757 22.0716 21.3566 21.7981 21.2617 21.547C21.1668 21.2959 21.0001 21.0782 20.7825 20.921C20.565 20.7637 20.306 20.6739 20.0377 20.6626C19.8547 20.6575 19.6725 20.6887 19.5015 20.7543C19.3306 20.8198 19.1743 20.9186 19.0416 21.0448C18.9089 21.171 18.8025 21.3222 18.7285 21.4896C18.6545 21.6571 18.6143 21.8376 18.6103 22.0206C18.6103 22.1109 18.6461 22.1974 18.7099 22.2613C18.7737 22.3251 18.8603 22.3609 18.9506 22.3609C19.0408 22.3609 19.1274 22.3251 19.1912 22.2613C19.255 22.1974 19.2909 22.1109 19.2909 22.0206C19.2909 21.8841 19.3313 21.7507 19.4072 21.6372C19.483 21.5237 19.5908 21.4352 19.7169 21.383C19.843 21.3308 19.9818 21.3171 20.1157 21.3437C20.2495 21.3703 20.3725 21.4361 20.469 21.5326C20.5656 21.6291 20.6313 21.7521 20.6579 21.886C20.6846 22.0199 20.6709 22.1586 20.6187 22.2848C20.5664 22.4109 20.478 22.5187 20.3645 22.5945C20.251 22.6703 20.1175 22.7108 19.981 22.7108C19.798 22.7108 19.6224 22.6381 19.493 22.5087C19.3636 22.3792 19.2909 22.2037 19.2909 22.0206C19.2621 21.6212 18.5815 21.6212 18.6103 22.0326Z' fill='#8254C6'/>\r\n<path d='M21.5311 20.5583C21.7987 20.9676 21.9307 21.4507 21.9083 21.9392C21.8859 22.4277 21.7104 22.8968 21.4064 23.2799C21.1476 23.625 21.7324 23.9605 21.9912 23.625C22.3555 23.138 22.5626 22.5515 22.5849 21.9438C22.6071 21.336 22.4435 20.7359 22.1158 20.2236C21.8857 19.8594 21.301 20.2236 21.5311 20.5687V20.5583Z' fill='#8254C6'/>\r\n<path d='M22.5391 19.9535C22.9465 20.5422 23.1519 21.2472 23.1242 21.9626C23.0966 22.678 22.8374 23.365 22.3857 23.9205C22.1173 24.256 22.5966 24.7353 22.865 24.3998C23.4217 23.7368 23.748 22.911 23.7947 22.0465C23.8414 21.1821 23.6059 20.3259 23.1238 19.6069C22.8842 19.245 22.2994 19.6093 22.5391 19.9535Z' fill='#8254C6'/>\r\n<path d='M23.4213 19.1313C23.8049 19.4989 24.105 19.9446 24.3013 20.4383C24.4977 20.9319 24.5856 21.462 24.5593 21.9926C24.5329 22.5232 24.3928 23.042 24.1485 23.5137C23.9043 23.9855 23.5614 24.3993 23.1433 24.727C22.8078 25.005 23.2871 25.4843 23.6226 25.2063C24.1022 24.8146 24.4934 24.3258 24.7706 23.772C25.0478 23.2183 25.2047 22.6122 25.231 21.9935C25.2572 21.3749 25.1522 20.7576 24.923 20.1824C24.6937 19.6072 24.3452 19.087 23.9006 18.656C23.836 18.601 23.753 18.5722 23.6682 18.5754C23.5833 18.5787 23.5028 18.6136 23.4425 18.6734C23.3822 18.7332 23.3466 18.8134 23.3427 18.8982C23.3387 18.983 23.3668 19.0662 23.4213 19.1313Z' fill='#8254C6'/>\r\n<path d='M17.932 20.056C17.6043 20.5683 17.4407 21.1683 17.4629 21.7761C17.4852 22.3838 17.6923 22.9703 18.0566 23.4573C18.3154 23.8024 18.9002 23.4573 18.6414 23.1122C18.3375 22.7291 18.1619 22.2601 18.1395 21.7716C18.1171 21.2831 18.2491 20.7999 18.5167 20.3907C18.7468 20.0264 18.1621 19.6813 17.932 20.0456V20.056Z' fill='#8254C6'/>\r\n<path d='M16.9228 19.4557C16.4407 20.1747 16.2052 21.0309 16.2519 21.8953C16.2986 22.7598 16.6249 23.5856 17.1816 24.2486C17.45 24.5937 17.9293 24.1048 17.6609 23.7693C17.2092 23.2139 16.95 22.5268 16.9223 21.8114C16.8947 21.096 17.1 20.391 17.5075 19.8024C17.7463 19.4365 17.1624 19.0914 16.9228 19.4557Z' fill='#8254C6'/>\r\n<path d='M16.1478 18.4988C15.7017 18.929 15.352 19.449 15.1219 20.0243C14.8917 20.5997 14.7863 21.2174 14.8125 21.8365C14.8388 22.4556 14.9962 23.0622 15.2743 23.616C15.5524 24.1698 15.9448 24.6582 16.4257 25.0491C16.7612 25.3271 17.2405 24.8478 16.905 24.5698C16.4869 24.2421 16.1441 23.8283 15.8998 23.3565C15.6555 22.8848 15.5154 22.366 15.4891 21.8354C15.4627 21.3048 15.5507 20.7747 15.747 20.281C15.9433 19.7874 16.2435 19.3417 16.6271 18.9741C16.6816 18.909 16.7096 18.8258 16.7057 18.741C16.7018 18.6562 16.6661 18.576 16.6059 18.5162C16.5456 18.4564 16.465 18.4214 16.3802 18.4182C16.2953 18.415 16.2124 18.4438 16.1478 18.4988Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "contusion",
              meaning: "\u06a9\u0628\u0648\u062f\u06cc",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M28.8248 16.0401C30.4345 19.3155 30.5591 22.1827 28.6235 25.3254C28.1647 26.0263 27.8396 26.8061 27.6648 27.6254C27.2691 30.2013 27.5127 32.835 28.3742 35.2946C28.518 35.7547 29.2466 35.5534 29.1028 35.0933C28.5441 33.3832 28.2689 31.5933 28.2879 29.7943C28.2879 27.2835 29.3896 26.1435 30.4633 24.0425C31.9811 21.1665 30.8755 18.3888 29.5046 15.6383C29.2937 15.2069 28.6418 15.5808 28.8527 16.0218L28.8248 16.0401Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110448'/>\r\n<path d='M22.8156 4.79388C22.5664 9.41297 24.828 8.38881 28.22 9.77646C34.2571 12.2394 33.4997 18.5641 33.3368 23.7959C33.2344 27.2612 33.4172 30.7291 33.8832 34.1645C33.9503 34.6342 34.6981 34.6438 34.6405 34.1645C34.1429 30.4173 33.9793 26.6333 34.1516 22.8572C34.2762 19.915 34.6022 16.7914 33.5189 13.9745C33.0225 12.5505 32.1479 11.2885 30.9889 10.3237C28.5835 8.46471 23.3197 9.0399 23.5817 4.79468C23.5817 4.69425 23.5418 4.59794 23.4708 4.52692C23.3998 4.45591 23.3035 4.41602 23.2031 4.41602C23.1026 4.41602 23.0063 4.45591 22.9353 4.52692C22.8643 4.59794 22.8244 4.69425 22.8244 4.79468L22.8156 4.79388Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110448'/>\r\n<path d='M10.5307 16.2147C9.40026 18.5242 8.17318 21.1398 9.151 23.7241C9.81247 25.4585 11.2592 26.6001 11.6427 28.5174C11.9274 30.5809 11.6901 32.683 10.9525 34.6311C10.7991 35.0913 11.5277 35.2926 11.681 34.8324C12.447 32.7545 12.7035 30.5232 12.4288 28.3256C12.2509 27.4573 11.8954 26.6351 11.3847 25.9106C9.46736 22.7679 9.57361 19.8927 11.1833 16.6253C11.3942 16.1939 10.7424 15.8105 10.5315 16.2419L10.5307 16.2147Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110448'/>\r\n<path d='M16.4433 5.33008C16.6638 9.50819 11.9968 8.95217 9.62096 10.4756C8.17185 11.4463 7.07819 12.8625 6.50534 14.5099C5.54669 17.0496 5.73843 19.7993 5.82471 22.4635C6.01061 26.5517 5.85375 30.6483 5.35577 34.7103C5.28866 35.1896 6.04599 35.18 6.1131 34.7103C6.58461 31.2754 6.7674 27.8071 6.65953 24.3417C6.48698 19.3887 5.50037 12.3058 11.7763 10.3222C15.2738 9.22059 17.4204 9.80457 17.1807 5.33966C17.1807 4.86034 16.4042 4.85075 16.4234 5.33966L16.4433 5.33008Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110448'/>\r\n<path d='M9.3094 15.1883C9.30955 15.3643 9.3614 15.5364 9.45854 15.6832C9.55568 15.8299 9.6938 15.9449 9.85575 16.0138C10.0177 16.0827 10.1963 16.1025 10.3694 16.0708C10.5425 16.039 10.7025 15.9571 10.8294 15.8351C10.9563 15.7132 11.0446 15.5567 11.0833 15.385C11.122 15.2133 11.1094 15.034 11.047 14.8694C10.9846 14.7048 10.8753 14.5622 10.7325 14.4593C10.5898 14.3563 10.4199 14.2976 10.2441 14.2904C10.124 14.287 10.0044 14.3074 9.89224 14.3505C9.78008 14.3935 9.67755 14.4584 9.59058 14.5413C9.50361 14.6242 9.43391 14.7234 9.38551 14.8334C9.33711 14.9434 9.31097 15.0618 9.30859 15.1819C9.30859 15.2411 9.33208 15.2978 9.37388 15.3395C9.41568 15.3813 9.47237 15.4048 9.53149 15.4048C9.5906 15.4048 9.64729 15.3813 9.68909 15.3395C9.73089 15.2978 9.75436 15.2411 9.75436 15.1819C9.75436 15.0925 9.78089 15.0051 9.83058 14.9307C9.88026 14.8564 9.95088 14.7984 10.0335 14.7642C10.1161 14.73 10.207 14.721 10.2947 14.7385C10.3825 14.7559 10.463 14.799 10.5263 14.8622C10.5895 14.9255 10.6326 15.006 10.65 15.0937C10.6674 15.1814 10.6585 15.2724 10.6243 15.355C10.5901 15.4376 10.5321 15.5082 10.4577 15.5579C10.3834 15.6076 10.296 15.6341 10.2065 15.6341C10.0866 15.6341 9.9716 15.5865 9.88681 15.5017C9.80201 15.4169 9.75436 15.3019 9.75436 15.1819C9.73599 14.9183 9.29023 14.9183 9.3094 15.1883Z' fill='#8254C6'/>\r\n<path d='M11.2257 14.2207C11.4012 14.4886 11.488 14.8051 11.4737 15.1251C11.4593 15.4452 11.3446 15.7526 11.1458 16.0038C10.9765 16.2298 11.3591 16.4495 11.5285 16.2298C11.7669 15.9106 11.9023 15.5261 11.9166 15.1279C11.9309 14.7296 11.8233 14.3365 11.6084 14.001C11.4574 13.7613 11.0747 14.001 11.2257 14.2271V14.2207Z' fill='#8254C6'/>\r\n<path d='M11.8848 13.825C12.1517 14.2107 12.2862 14.6725 12.268 15.1412C12.2499 15.6098 12.0801 16.0599 11.7842 16.4237C11.6084 16.6434 11.9224 16.9574 12.0981 16.7377C12.4624 16.3034 12.6758 15.7626 12.7063 15.1965C12.7369 14.6305 12.5829 14.0699 12.2675 13.5989C12.1109 13.3608 11.7283 13.5989 11.8848 13.825Z' fill='#8254C6'/>\r\n<path d='M12.4599 13.2858C12.7112 13.5267 12.9078 13.8187 13.0365 14.1421C13.1651 14.4655 13.2227 14.8128 13.2055 15.1604C13.1882 15.5081 13.0964 15.8479 12.9364 16.157C12.7763 16.4661 12.5517 16.7371 12.2778 16.9519C12.0581 17.134 12.372 17.448 12.5917 17.2658C12.9062 17.0091 13.1628 16.6887 13.3446 16.3257C13.5264 15.9627 13.6293 15.5653 13.6465 15.1597C13.6637 14.7541 13.5949 14.3495 13.4445 13.9724C13.2941 13.5953 13.0655 13.2543 12.7739 12.9719C12.7319 12.9321 12.676 12.9104 12.6182 12.9112C12.5603 12.912 12.5051 12.9353 12.4642 12.9762C12.4233 13.0171 12.4 13.0723 12.3992 13.1301C12.3984 13.188 12.4202 13.2438 12.4599 13.2858Z' fill='#8254C6'/>\r\n<path d='M8.86418 13.8943C8.6492 14.2299 8.54167 14.623 8.55595 15.0212C8.57022 15.4195 8.70562 15.8039 8.94407 16.1232C9.11343 16.3493 9.49688 16.1232 9.32672 15.8971C9.12791 15.6459 9.0132 15.3385 8.99886 15.0185C8.98452 14.6984 9.07129 14.382 9.24684 14.114C9.39783 13.8744 9.01437 13.6491 8.86418 13.8879V13.8943Z' fill='#8254C6'/>\r\n<path d='M8.20436 13.4996C7.88898 13.9706 7.73498 14.5312 7.76552 15.0972C7.79606 15.6632 8.00948 16.204 8.37371 16.6384C8.54946 16.8644 8.86342 16.5441 8.68767 16.3244C8.39178 15.9605 8.222 15.5105 8.20385 15.0418C8.18569 14.5732 8.32015 14.1113 8.58701 13.7257C8.74439 13.4876 8.36094 13.2615 8.20436 13.4996Z' fill='#8254C6'/>\r\n<path d='M7.69529 12.8713C7.4026 13.1531 7.17312 13.494 7.02205 13.8712C6.87099 14.2484 6.80176 14.6533 6.81898 15.0593C6.8362 15.4653 6.93947 15.8629 7.12194 16.226C7.30441 16.589 7.56192 16.9092 7.87743 17.1652C8.09712 17.3474 8.41107 17.0334 8.19138 16.8513C7.91744 16.6366 7.69285 16.3655 7.5328 16.0564C7.37274 15.7473 7.28098 15.4075 7.26371 15.0598C7.24643 14.7122 7.30407 14.3649 7.43269 14.0415C7.56132 13.7181 7.75793 13.4261 8.00924 13.1853C8.04898 13.1432 8.07077 13.0874 8.06997 13.0296C8.06916 12.9717 8.04584 12.9165 8.00495 12.8756C7.96405 12.8347 7.90882 12.8114 7.85099 12.8106C7.79316 12.8098 7.7373 12.8316 7.69529 12.8713Z' fill='#8254C6'/>\r\n<path d='M15.6549 30.3195C15.655 30.4916 15.7057 30.6599 15.8007 30.8034C15.8956 30.947 16.0306 31.0595 16.1889 31.127C16.3472 31.1945 16.5219 31.214 16.6912 31.1832C16.8605 31.1523 17.017 31.0724 17.1413 30.9534C17.2656 30.8344 17.3523 30.6815 17.3905 30.5137C17.4287 30.3459 17.4167 30.1706 17.3562 30.0095C17.2956 29.8484 17.1891 29.7086 17.0499 29.6075C16.9106 29.5064 16.7447 29.4484 16.5728 29.4408C16.4546 29.4376 16.3371 29.4578 16.2268 29.5004C16.1166 29.5429 16.0158 29.6069 15.9305 29.6886C15.8451 29.7704 15.7768 29.8682 15.7295 29.9765C15.6822 30.0848 15.6568 30.2014 15.6549 30.3195C15.6549 30.3776 15.6779 30.4332 15.719 30.4743C15.76 30.5153 15.8157 30.5384 15.8738 30.5384C15.9318 30.5384 15.9875 30.5153 16.0285 30.4743C16.0696 30.4332 16.0926 30.3776 16.0926 30.3195C16.0926 30.2318 16.1186 30.1461 16.1674 30.0732C16.2161 30.0003 16.2853 29.9434 16.3663 29.9099C16.4474 29.8763 16.5365 29.8676 16.6225 29.8847C16.7085 29.9018 16.7875 29.944 16.8495 30.006C16.9115 30.068 16.9538 30.147 16.9709 30.233C16.988 30.319 16.9792 30.4082 16.9456 30.4892C16.9121 30.5702 16.8553 30.6395 16.7823 30.6882C16.7094 30.7369 16.6237 30.7629 16.536 30.7629C16.4184 30.7629 16.3057 30.7162 16.2225 30.633C16.1394 30.5499 16.0926 30.4371 16.0926 30.3195C16.0735 30.0567 15.6365 30.0567 15.6549 30.3195Z' fill='#8254C6'/>\r\n<path d='M17.5315 29.3735C17.7038 29.6367 17.7887 29.9474 17.7744 30.2616C17.7601 30.5758 17.6471 30.8775 17.4517 31.1238C17.2855 31.3459 17.661 31.5616 17.8279 31.3459C18.0622 31.0326 18.1955 30.6553 18.2097 30.2643C18.224 29.8734 18.1187 29.4873 17.9078 29.1578C17.76 28.9237 17.3838 29.1578 17.5315 29.3799V29.3735Z' fill='#8254C6'/>\r\n<path d='M18.1803 28.9851C18.4425 29.3636 18.5747 29.8171 18.557 30.2773C18.5393 30.7374 18.3726 31.1794 18.0821 31.5367C17.9095 31.7524 18.2179 32.0607 18.3904 31.845C18.748 31.4187 18.9575 30.8878 18.9874 30.3321C19.0174 29.7765 18.8662 29.2261 18.5566 28.7638C18.4016 28.5289 18.0261 28.763 18.1803 28.9851Z' fill='#8254C6'/>\r\n<path d='M18.7483 28.4551C18.995 28.6915 19.1881 28.9781 19.3144 29.2956C19.4407 29.6131 19.4972 29.9541 19.4803 30.2954C19.4633 30.6367 19.3732 30.9703 19.216 31.2737C19.0589 31.5771 18.8383 31.8432 18.5694 32.054C18.3537 32.2329 18.662 32.5405 18.8777 32.3624C19.1867 32.1104 19.4387 31.7959 19.6173 31.4395C19.7959 31.0832 19.897 30.693 19.9139 30.2947C19.9308 29.8964 19.8632 29.4991 19.7154 29.1289C19.5676 28.7586 19.3431 28.4239 19.0567 28.1467C19.0155 28.1072 18.9605 28.0854 18.9034 28.0859C18.8463 28.0865 18.7918 28.1095 18.7514 28.1498C18.7111 28.1902 18.6881 28.2447 18.6876 28.3018C18.687 28.3589 18.7088 28.4139 18.7483 28.4551Z' fill='#8254C6'/>\r\n<path d='M15.2172 29.0531C15.0064 29.3827 14.9011 29.7687 14.9153 30.1597C14.9296 30.5507 15.0628 30.928 15.2971 31.2413C15.4633 31.4634 15.8396 31.2413 15.6734 31.0192C15.478 30.7727 15.3652 30.4711 15.3508 30.1569C15.3365 29.8428 15.4214 29.5321 15.5935 29.2688C15.7413 29.0348 15.3658 28.8127 15.2172 29.0468V29.0531Z' fill='#8254C6'/>\r\n<path d='M14.5693 28.6625C14.2597 29.1248 14.1085 29.6752 14.1385 30.2308C14.1685 30.7864 14.378 31.3173 14.7355 31.7437C14.9081 31.9658 15.2148 31.651 15.0439 31.4354C14.7533 31.0781 14.5867 30.6361 14.5689 30.1759C14.5512 29.7158 14.6834 29.2623 14.9456 28.8837C15.099 28.6529 14.7219 28.4308 14.5693 28.6625Z' fill='#8254C6'/>\r\n<path d='M14.07 28.049C13.7826 28.3257 13.5573 28.6603 13.4089 29.0307C13.2606 29.401 13.1926 29.7986 13.2096 30.1972C13.2265 30.5958 13.3279 30.9862 13.5071 31.3427C13.6863 31.6991 13.9392 32.0134 14.249 32.2647C14.4647 32.4437 14.773 32.1353 14.5573 31.9563C14.2884 31.7456 14.0678 31.4795 13.9107 31.1761C13.7535 30.8726 13.6634 30.539 13.6464 30.1977C13.6295 29.8564 13.686 29.5155 13.8123 29.198C13.9386 28.8805 14.1317 28.5938 14.3784 28.3574C14.4179 28.3162 14.4397 28.2612 14.4392 28.2041C14.4386 28.1471 14.4156 28.0925 14.3753 28.0522C14.3349 28.0118 14.2804 27.9889 14.2233 27.9883C14.1662 27.9877 14.1112 28.0095 14.07 28.049Z' fill='#8254C6'/>\r\n<path d='M27.526 12.863C27.5261 13.0442 27.5795 13.2214 27.6796 13.3726C27.7796 13.5238 27.9218 13.6422 28.0886 13.7132C28.2554 13.7843 28.4393 13.8047 28.6176 13.7721C28.7959 13.7395 28.9607 13.6552 29.0915 13.5297C29.2223 13.4042 29.3134 13.243 29.3534 13.0662C29.3934 12.8894 29.3805 12.7048 29.3165 12.5352C29.2524 12.3656 29.14 12.2186 28.9931 12.1124C28.8462 12.0062 28.6713 11.9455 28.4902 11.9379C28.3665 11.9345 28.2433 11.9556 28.1277 12C28.0122 12.0444 27.9066 12.1112 27.8169 12.1966C27.7273 12.282 27.6555 12.3842 27.6055 12.4975C27.5556 12.6108 27.5286 12.7328 27.526 12.8566C27.5294 12.9151 27.5551 12.9702 27.5978 13.0104C27.6405 13.0507 27.697 13.0731 27.7556 13.0731C27.8143 13.0731 27.8708 13.0507 27.9135 13.0104C27.9562 12.9702 27.9819 12.9151 27.9853 12.8566C27.9853 12.7644 28.0126 12.6744 28.0638 12.5978C28.115 12.5212 28.1877 12.4615 28.2728 12.4263C28.3579 12.391 28.4516 12.3818 28.5419 12.3998C28.6323 12.4177 28.7153 12.4621 28.7804 12.5272C28.8455 12.5924 28.8899 12.6754 28.9079 12.7657C28.9258 12.856 28.9166 12.9497 28.8814 13.0348C28.8461 13.1199 28.7864 13.1926 28.7098 13.2438C28.6332 13.295 28.5432 13.3223 28.4511 13.3223C28.3276 13.3223 28.2091 13.2732 28.1217 13.1859C28.0344 13.0985 27.9853 12.9801 27.9853 12.8566C27.9662 12.5849 27.5068 12.5849 27.526 12.863Z' fill='#8254C6'/>\r\n<path d='M29.5007 11.8682C29.6813 12.1445 29.7703 12.4707 29.7553 12.8004C29.7402 13.1302 29.6218 13.4469 29.4168 13.7056C29.2418 13.9389 29.6365 14.165 29.8114 13.9389C30.0574 13.6099 30.1972 13.2137 30.2122 12.8032C30.2272 12.3927 30.1167 11.9874 29.8953 11.6413C29.7403 11.3953 29.3449 11.6413 29.5007 11.8746V11.8682Z' fill='#8254C6'/>\r\n<path d='M30.1788 11.4605C30.4533 11.8584 30.5916 12.3345 30.5729 12.8175C30.5541 13.3005 30.3794 13.7645 30.0749 14.1399C29.8936 14.3668 30.2171 14.6904 30.3985 14.4635C30.7742 14.0158 30.9943 13.4582 31.0259 12.8746C31.0574 12.2909 30.8987 11.7129 30.5734 11.2272C30.4121 10.9812 30.0166 11.2272 30.1788 11.4605Z' fill='#8254C6'/>\r\n<path d='M30.7746 10.9038C31.0337 11.1521 31.2364 11.4531 31.369 11.7865C31.5016 12.12 31.5611 12.478 31.5432 12.8364C31.5254 13.1948 31.4308 13.5452 31.2658 13.8638C31.1008 14.1825 30.8693 14.4619 30.5868 14.6833C30.36 14.871 30.6843 15.1946 30.9104 15.0068C31.2347 14.7423 31.4994 14.412 31.6869 14.0378C31.8744 13.6636 31.9805 13.2539 31.9982 12.8357C32.016 12.4175 31.9449 12.0003 31.7898 11.6116C31.6346 11.2228 31.3989 10.8713 31.0981 10.5803C31.0544 10.5419 30.9976 10.5216 30.9395 10.5236C30.8813 10.5255 30.826 10.5494 30.7849 10.5906C30.7437 10.6317 30.7198 10.687 30.7179 10.7452C30.7159 10.8033 30.7362 10.8601 30.7746 10.9038Z' fill='#8254C6'/>\r\n<path d='M27.0663 11.53C26.8449 11.876 26.7344 12.2813 26.7494 12.6918C26.7644 13.1024 26.9042 13.4985 27.1502 13.8275C27.3251 14.0608 27.7198 13.8275 27.5448 13.5943C27.3398 13.3355 27.2214 13.0189 27.2063 12.6891C27.1913 12.3593 27.2804 12.0332 27.4609 11.7568C27.6159 11.5108 27.2213 11.2775 27.0663 11.5236V11.53Z' fill='#8254C6'/>\r\n<path d='M26.388 11.1226C26.0628 11.6082 25.904 12.1863 25.9356 12.7699C25.9671 13.3535 26.1873 13.9111 26.563 14.3588C26.7443 14.5921 27.0679 14.2614 26.8865 14.0353C26.5818 13.6598 26.407 13.1957 26.3883 12.7125C26.3696 12.2293 26.5079 11.753 26.7827 11.3551C26.9448 11.1098 26.5502 10.8757 26.388 11.1226Z' fill='#8254C6'/>\r\n<path d='M25.8619 10.4758C25.5599 10.7662 25.3232 11.1175 25.1673 11.5064C25.0114 11.8952 24.94 12.3128 24.9577 12.7314C24.9755 13.15 25.082 13.56 25.2703 13.9343C25.4585 14.3085 25.7242 14.6385 26.0496 14.9023C26.2765 15.0901 26.6 14.7665 26.3732 14.5788C26.0907 14.3574 25.8592 14.078 25.6942 13.7593C25.5292 13.4407 25.4346 13.0903 25.4168 12.7319C25.399 12.3735 25.4584 12.0155 25.591 11.6821C25.7236 11.3486 25.9263 11.0476 26.1854 10.7993C26.2238 10.7556 26.2441 10.6988 26.2421 10.6407C26.2402 10.5825 26.2163 10.5272 26.1751 10.4861C26.134 10.4449 26.0787 10.421 26.0205 10.4191C25.9624 10.4172 25.9057 10.4374 25.8619 10.4758Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "back_ache",
              meaning: "\u06a9\u0645\u0631\u062f\u0631\u062f",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M9.58531 35.2153V35.2946H10.3345C9.87717 33.9016 9.54291 32.4712 9.33558 31.0198C8.80598 27.2143 9.33557 24.2485 10.9933 21.6814C12.2295 19.8647 13.0605 17.8034 13.4298 15.6373C13.7992 13.4712 13.6982 11.251 13.1339 9.12729C12.865 8.25216 12.5033 7.4083 12.0549 6.61014L11.6854 5.87124C11.6854 5.79196 11.4754 5.73171 11.3255 5.68176H11.2256V5.76104C11.1893 5.95594 11.1629 6.15254 11.1463 6.3501L11.2066 6.43969L11.2764 6.53958C12.3326 8.44243 12.9044 10.576 12.9413 12.752C12.9415 15.8033 12.0528 18.7885 10.3837 21.3428C8.71413 23.9035 8.03957 26.9867 8.48727 30.0106C8.73111 31.769 9.09802 33.5082 9.58531 35.2153Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M28.7407 21.8226C29.8828 23.6138 30.4956 25.6911 30.5087 27.8154C30.5397 30.3117 30.1412 32.7947 29.3306 35.156H29.9799C30.2899 34.157 30.5888 33.2287 30.8187 32.2599C31.362 30.3434 31.4853 28.3322 31.1802 26.3638C30.8751 24.3953 30.1487 22.5158 29.0507 20.8538C27.6085 18.6253 26.8197 16.0372 26.7738 13.3832C26.6754 10.9441 27.2515 8.52512 28.4387 6.39221C28.4953 6.19644 28.4953 5.98863 28.4387 5.79285C28.4359 5.74638 28.4359 5.69979 28.4387 5.65332H28.3784C28.1786 5.77303 27.982 5.90305 27.7894 6.04259C27.7586 6.07758 27.7349 6.11824 27.7196 6.1623V6.26219C26.4798 8.50062 25.9145 11.0501 26.092 13.6028C26.2088 16.5326 27.1239 19.3749 28.7384 21.8226H28.7407Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M14.6298 28.873C15.2463 29.0722 15.8894 29.1768 16.5373 29.183C17.175 29.1836 17.8088 29.0825 18.4146 28.8833C18.6003 28.8113 18.7956 28.7675 18.9942 28.7533C19.4437 28.7533 19.4437 29.2028 19.4437 29.6119V35.1948H20.2428V29.9036C20.2154 29.6313 20.2154 29.357 20.2428 29.0847C20.2558 28.9925 20.3032 28.9086 20.3753 28.8498C20.4475 28.791 20.5392 28.7616 20.6321 28.7675C20.8866 28.7899 21.1378 28.8402 21.3813 28.9174H21.501C22.0481 29.0654 22.6119 29.1426 23.1786 29.1473C23.8611 29.155 24.5388 29.0329 25.1757 28.7874C25.2454 28.7874 25.3152 28.6177 25.3858 28.4877L25.4357 28.3775H25.366C25.2698 28.2998 25.1569 28.2455 25.0361 28.2189H24.8966C24.6504 28.2238 24.4057 28.2573 24.1672 28.3188C23.8006 28.4053 23.4252 28.4489 23.0486 28.4488C22.0746 28.4391 21.1282 28.1247 20.3419 27.5498C20.2073 27.4452 20.043 27.3858 19.8726 27.3801C19.6613 27.3977 19.4583 27.4701 19.2836 27.5902V27.5902C18.7719 27.927 18.198 28.158 17.5957 28.2697C17.3828 28.2803 17.1695 28.2803 16.9567 28.2697H14.8954C14.7398 28.2872 14.59 28.3383 14.4562 28.4195H14.3698L14.4395 28.5297C14.4387 28.5985 14.4558 28.6663 14.4892 28.7265C14.5225 28.7867 14.571 28.8372 14.6298 28.873V28.873Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M20.0309 15.3806H19.9516C19.8534 15.2923 19.7737 15.1854 19.7171 15.066C19.6605 14.9467 19.6281 14.8173 19.6218 14.6853C19.6218 11.5989 19.6218 8.47291 19.6218 5.37701C19.633 5.2458 19.6717 5.11842 19.7354 5.00314C19.799 4.88786 19.8862 4.78726 19.9913 4.70789H20.0912C20.3211 4.70789 20.4083 4.88785 20.4083 5.38732V9.9618V14.7012C20.3512 15.1206 20.3013 15.3806 20.0309 15.3806Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M11.8421 15.131C11.7866 15.1316 11.7318 15.1181 11.6829 15.092C11.634 15.0658 11.5925 15.0277 11.5622 14.9812L10.8431 13.8625L10.5538 14.3818C10.5251 14.4334 10.4832 14.4763 10.4323 14.5062C10.3814 14.536 10.3234 14.5516 10.2644 14.5515V14.5515C10.2066 14.5518 10.1498 14.5375 10.0991 14.5097C10.0485 14.482 10.0058 14.4418 9.97501 14.3929L8.92613 12.6249C8.89069 12.5906 8.86315 12.549 8.84546 12.5029C8.82776 12.4568 8.82032 12.4075 8.82365 12.3582C8.82699 12.309 8.84103 12.2611 8.86478 12.2178C8.88853 12.1746 8.92143 12.1371 8.96119 12.1078C9.00094 12.0786 9.04659 12.0584 9.09496 12.0486C9.14332 12.0388 9.19324 12.0397 9.24123 12.0512C9.28921 12.0627 9.33412 12.0845 9.3728 12.1151C9.41149 12.1458 9.44304 12.1845 9.46524 12.2285L10.2446 13.5168L10.5244 13.0174C10.5453 12.9792 10.5735 12.9456 10.6074 12.9184C10.6414 12.8911 10.6804 12.8709 10.7221 12.8588C10.7639 12.8467 10.8077 12.843 10.8509 12.8479C10.8941 12.8528 10.9359 12.8662 10.9739 12.8874V12.8874C11.0222 12.9138 11.0633 12.9517 11.0937 12.9976L12.0926 14.5832C12.1165 14.6198 12.1329 14.6608 12.1408 14.7037C12.1487 14.7467 12.148 14.7909 12.1387 14.8336C12.1294 14.8763 12.1117 14.9167 12.0866 14.9525C12.0616 14.9884 12.0296 15.0188 11.9927 15.0422H11.9253L11.8421 15.131Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.2' stroke-miterlimit='10'/>\r\n<path d='M28.0912 15.0804C28.0133 15.0807 27.9377 15.0543 27.877 15.0055C27.8164 14.9567 27.7743 14.8885 27.7579 14.8123C27.7416 14.7362 27.7519 14.6568 27.7872 14.5873C27.8225 14.5179 27.8805 14.4627 27.9517 14.4311L29.1599 13.8816L28.6906 13.5217C28.6439 13.4858 28.6073 13.4384 28.5845 13.3841C28.5617 13.3298 28.5534 13.2705 28.5604 13.2121C28.5674 13.1536 28.5896 13.098 28.6246 13.0507C28.6597 13.0033 28.7065 12.9659 28.7603 12.9422L30.6583 12.1494C30.7396 12.1171 30.8302 12.1174 30.9113 12.1502C30.9924 12.1829 31.0577 12.2457 31.0938 12.3254C31.1298 12.4051 31.1337 12.4956 31.1047 12.5781C31.0758 12.6607 31.0161 12.7289 30.9382 12.7686L29.55 13.3774L30.009 13.7271C30.0537 13.7626 30.0886 13.8088 30.1106 13.8615C30.1327 13.9141 30.1411 13.9715 30.1351 14.0282C30.1291 14.0849 30.1088 14.1393 30.0763 14.1861C30.0437 14.233 29.9999 14.2709 29.9488 14.2963L28.2308 15.0891C28.184 15.0957 28.1365 15.0922 28.0912 15.0788V15.0804Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.2' stroke-miterlimit='10'/>\r\n<path d='M18.9975 19.9506C19.0075 20.2375 19.1024 20.5149 19.2701 20.7479C19.4379 20.9809 19.6709 21.159 19.9398 21.2596C20.2087 21.3601 20.5013 21.3787 20.7808 21.313C21.0603 21.2473 21.314 21.1002 21.5098 20.8903C21.7057 20.6805 21.835 20.4172 21.8813 20.1339C21.9276 19.8506 21.8889 19.5599 21.77 19.2986C21.6511 19.0373 21.4575 18.817 21.2135 18.6658C20.9695 18.5145 20.6861 18.439 20.3992 18.4487C20.2085 18.4552 20.021 18.4992 19.8473 18.5782C19.6736 18.6572 19.5172 18.7696 19.387 18.9091C19.2569 19.0486 19.1555 19.2124 19.0886 19.3911C19.0218 19.5698 18.9908 19.7599 18.9975 19.9506C19.0008 20.0451 19.0415 20.1344 19.1107 20.1989C19.1799 20.2634 19.2718 20.2978 19.3664 20.2945C19.4609 20.2912 19.5502 20.2504 19.6147 20.1813C19.6792 20.1121 19.7136 20.0201 19.7103 19.9256C19.7275 19.7472 19.8089 19.5812 19.9394 19.4585C20.0699 19.3357 20.2406 19.2646 20.4196 19.2583C20.5987 19.252 20.7739 19.311 20.9127 19.4244C21.0514 19.5377 21.1443 19.6976 21.1739 19.8743C21.1567 20.0526 21.0753 20.2187 20.9448 20.3414C20.8143 20.4642 20.6436 20.5353 20.4646 20.5416C20.2855 20.5479 20.1103 20.4888 19.9715 20.3755C19.8328 20.2622 19.7399 20.1023 19.7103 19.9256C19.6705 19.4686 18.9446 19.4814 18.9975 19.9506Z' fill='#8254C6'/>\r\n<path d='M22.0515 18.2638C22.3501 18.689 22.5071 19.1976 22.5001 19.7172C22.4931 20.2368 22.3225 20.7409 22.0125 21.158C21.7451 21.5369 22.3817 21.8714 22.6491 21.4925C23.0205 20.9627 23.2209 20.3318 23.2233 19.6848C23.2257 19.0377 23.0301 18.4055 22.6626 17.8728C22.4072 17.4853 21.797 17.9032 22.051 18.2511L22.0515 18.2638Z' fill='#8254C6'/>\r\n<path d='M23.1008 17.5895C23.5557 18.1992 23.8006 18.9401 23.7987 19.7008C23.7967 20.4616 23.5481 21.2012 23.09 21.8086C22.8221 22.1748 23.3366 22.6666 23.6171 22.3C24.1841 21.5748 24.4998 20.6848 24.5165 19.7644C24.5331 18.844 24.2499 17.9431 23.7096 17.1978C23.4412 16.825 22.8439 17.2282 23.1004 17.5768L23.1008 17.5895Z' fill='#8254C6'/>\r\n<path d='M23.9956 16.6657C24.4178 17.0412 24.7541 17.5031 24.9819 18.0202C25.2096 18.5372 25.3234 19.0972 25.3155 19.6621C25.3076 20.227 25.1782 20.7835 24.9361 21.2939C24.694 21.8042 24.3448 22.2565 23.9124 22.62C23.5631 22.9256 24.0927 23.4193 24.4419 23.1113C24.9371 22.6772 25.3348 22.143 25.6086 21.544C25.8824 20.9451 26.0263 20.2949 26.0306 19.6363C26.0351 18.9773 25.8999 18.3249 25.6338 17.722C25.3678 17.1191 24.9769 16.5794 24.487 16.1386C24.1578 15.8187 23.6664 16.3458 23.9956 16.6657Z' fill='#8254C6'/>\r\n<path d='M18.2125 17.874C17.8831 18.4311 17.7321 19.0757 17.7798 19.7212C17.8275 20.3667 18.0716 20.982 18.4794 21.4847C18.7727 21.8439 19.3831 21.453 19.091 21.1064C18.7525 20.7121 18.5469 20.2212 18.5034 19.7034C18.4599 19.1856 18.5808 18.6672 18.8488 18.2221C19.09 17.8187 18.4534 17.4842 18.213 17.8875L18.2125 17.874Z' fill='#8254C6'/>\r\n<path d='M17.1708 17.261C16.6835 18.042 16.4635 18.9603 16.5439 19.8772C16.6244 20.7942 17.001 21.6602 17.6169 22.3443C17.9225 22.6904 18.4036 22.1637 18.1084 21.8172C17.6096 21.2428 17.3106 20.5221 17.2563 19.7633C17.202 19.0046 17.3953 18.2486 17.8071 17.6091C18.0475 17.2041 17.4117 16.8712 17.1705 17.2745L17.1708 17.261Z' fill='#8254C6'/>\r\n<path d='M16.2595 16.273C15.8018 16.747 15.4498 17.3128 15.2268 17.9328C15.0037 18.5529 14.9146 19.2132 14.9653 19.8702C15.016 20.5272 15.2055 21.166 15.5211 21.7445C15.8368 22.3229 16.2715 22.8279 16.7966 23.2261C17.1632 23.5066 17.6546 22.9795 17.288 22.699C16.8307 22.367 16.4503 21.9404 16.1726 21.4483C15.8949 20.9562 15.7264 20.4101 15.6785 19.8471C15.6307 19.2841 15.7046 18.7174 15.8952 18.1854C16.0859 17.6535 16.3888 17.1689 16.7835 16.7645C17.0903 16.4223 16.5758 15.9304 16.2595 16.273Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "foot_ache",
              meaning: "\u062f\u0631\u062f \u067e\u0627",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_150_476)'>\r\n<g clip-path='url(#clip1_150_476)'>\r\n<path d='M20.0212 2.70405C20.0212 2.70405 22.5744 16.5745 19.6677 23.7939C17.4091 29.3716 21.946 32.2761 23.4386 33.3285C24.9312 34.3809 27.5826 35.728 28.9771 35.4122C30.3715 35.1176 31.6677 35.4122 31.982 36.8013C32.2962 38.1905 28.4272 39.3902 26.2275 39.0745C24.0278 38.7799 21.7299 37.3486 19.9427 36.9908C18.1555 36.612 15.3469 37.8117 13.7365 38.0011C12.126 38.1905 9.27817 37.1802 10.9868 33.2864C12.6955 29.3925 11.8314 22.9309 11.3797 21.3523C10.9279 19.7738 4.91812 8.45008 10.0834 1.23071' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M13.9135 2.35144C13.9135 2.35144 16.1524 8.16632 15.3079 23.3438' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M11.4974 11.6507C11.4974 11.6507 12.9901 8.73275 14.8166 6.46558' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M17.8807 16.7309C17.8807 16.7309 17.3111 14.2749 15.3864 12.1757' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_150_476'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n<clipPath id='clip1_150_476'>\r\n<rect width='26' height='39.8947' fill='white' transform='translate(7 0.230713)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "nausea",
              meaning: "\u062d\u0627\u0644\u062a \u062a\u0647\u0648\u0639",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M9.58531 35.2153V35.2946H10.3345C9.87717 33.9016 9.54291 32.4712 9.33558 31.0198C8.80598 27.2143 9.33557 24.2485 10.9933 21.6814C12.2295 19.8647 13.0605 17.8034 13.4298 15.6373C13.7992 13.4712 13.6982 11.251 13.1339 9.12729C12.865 8.25216 12.5033 7.4083 12.0549 6.61014L11.6854 5.87124C11.6854 5.79196 11.4754 5.73171 11.3255 5.68176H11.2256V5.76104C11.1893 5.95594 11.1629 6.15254 11.1463 6.3501L11.2066 6.43969L11.2764 6.53958C12.3326 8.44243 12.9044 10.576 12.9413 12.752C12.9415 15.8033 12.0528 18.7885 10.3837 21.3428C8.71413 23.9035 8.03957 26.9867 8.48727 30.0106C8.73111 31.769 9.09802 33.5082 9.58531 35.2153Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M28.7407 21.8226C29.8828 23.6138 30.4956 25.6911 30.5087 27.8154C30.5397 30.3117 30.1412 32.7947 29.3306 35.156H29.9799C30.2899 34.157 30.5888 33.2287 30.8187 32.2599C31.362 30.3434 31.4853 28.3322 31.1802 26.3638C30.8751 24.3953 30.1487 22.5158 29.0507 20.8538C27.6085 18.6253 26.8197 16.0372 26.7738 13.3832C26.6754 10.9441 27.2515 8.52512 28.4387 6.39221C28.4953 6.19644 28.4953 5.98863 28.4387 5.79285C28.4359 5.74638 28.4359 5.69979 28.4387 5.65332H28.3784C28.1786 5.77303 27.982 5.90305 27.7894 6.04259C27.7586 6.07758 27.7349 6.11824 27.7196 6.1623V6.26219C26.4798 8.50062 25.9145 11.0501 26.092 13.6028C26.2088 16.5326 27.1239 19.3749 28.7384 21.8226H28.7407Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M14.6298 28.873C15.2463 29.0722 15.8894 29.1768 16.5373 29.183C17.175 29.1836 17.8088 29.0825 18.4146 28.8833C18.6003 28.8113 18.7956 28.7675 18.9942 28.7533C19.4437 28.7533 19.4437 29.2028 19.4437 29.6119V35.1948H20.2428V29.9036C20.2154 29.6313 20.2154 29.357 20.2428 29.0847C20.2558 28.9925 20.3032 28.9086 20.3753 28.8498C20.4475 28.791 20.5392 28.7616 20.6321 28.7675C20.8866 28.7899 21.1378 28.8402 21.3813 28.9174H21.501C22.0481 29.0654 22.6119 29.1426 23.1786 29.1473C23.8611 29.155 24.5388 29.0329 25.1757 28.7874C25.2454 28.7874 25.3152 28.6177 25.3858 28.4877L25.4357 28.3775H25.366C25.2698 28.2998 25.1569 28.2455 25.0361 28.2189H24.8966C24.6504 28.2238 24.4057 28.2573 24.1672 28.3188C23.8006 28.4053 23.4252 28.4489 23.0486 28.4488C22.0746 28.4391 21.1282 28.1247 20.3419 27.5498C20.2073 27.4452 20.043 27.3858 19.8726 27.3801C19.6613 27.3977 19.4583 27.4701 19.2836 27.5902V27.5902C18.7719 27.927 18.198 28.158 17.5957 28.2697C17.3828 28.2803 17.1695 28.2803 16.9567 28.2697H14.8954C14.7398 28.2872 14.59 28.3383 14.4562 28.4195H14.3698L14.4395 28.5297C14.4387 28.5985 14.4558 28.6663 14.4892 28.7265C14.5225 28.7867 14.571 28.8372 14.6298 28.873V28.873Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M20.0309 15.3806H19.9516C19.8534 15.2923 19.7737 15.1854 19.7171 15.066C19.6605 14.9467 19.6281 14.8173 19.6218 14.6853C19.6218 11.5989 19.6218 8.47291 19.6218 5.37701C19.633 5.2458 19.6717 5.11842 19.7354 5.00314C19.799 4.88786 19.8862 4.78726 19.9913 4.70789H20.0912C20.3211 4.70789 20.4083 4.88785 20.4083 5.38732V9.9618V14.7012C20.3512 15.1206 20.3013 15.3806 20.0309 15.3806Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M11.8421 15.131C11.7866 15.1316 11.7318 15.1181 11.6829 15.092C11.634 15.0658 11.5925 15.0277 11.5622 14.9812L10.8431 13.8625L10.5538 14.3818C10.5251 14.4334 10.4832 14.4763 10.4323 14.5062C10.3814 14.536 10.3234 14.5516 10.2644 14.5515V14.5515C10.2066 14.5518 10.1498 14.5375 10.0991 14.5097C10.0485 14.482 10.0058 14.4418 9.97501 14.3929L8.92613 12.6249C8.89069 12.5906 8.86315 12.549 8.84546 12.5029C8.82776 12.4568 8.82032 12.4075 8.82365 12.3582C8.82699 12.309 8.84103 12.2611 8.86478 12.2178C8.88853 12.1746 8.92143 12.1371 8.96119 12.1078C9.00094 12.0786 9.04659 12.0584 9.09496 12.0486C9.14332 12.0388 9.19324 12.0397 9.24123 12.0512C9.28921 12.0627 9.33412 12.0845 9.3728 12.1151C9.41149 12.1458 9.44304 12.1845 9.46524 12.2285L10.2446 13.5168L10.5244 13.0174C10.5453 12.9792 10.5735 12.9456 10.6074 12.9184C10.6414 12.8911 10.6804 12.8709 10.7221 12.8588C10.7639 12.8467 10.8077 12.843 10.8509 12.8479C10.8941 12.8528 10.9359 12.8662 10.9739 12.8874V12.8874C11.0222 12.9138 11.0633 12.9517 11.0937 12.9976L12.0926 14.5832C12.1165 14.6198 12.1329 14.6608 12.1408 14.7037C12.1487 14.7467 12.148 14.7909 12.1387 14.8336C12.1294 14.8763 12.1117 14.9167 12.0866 14.9525C12.0616 14.9884 12.0296 15.0188 11.9927 15.0422H11.9253L11.8421 15.131Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.2' stroke-miterlimit='10'/>\r\n<path d='M28.0912 15.0804C28.0133 15.0807 27.9377 15.0543 27.877 15.0055C27.8164 14.9567 27.7743 14.8885 27.7579 14.8123C27.7416 14.7362 27.7519 14.6568 27.7872 14.5873C27.8225 14.5179 27.8805 14.4627 27.9517 14.4311L29.1599 13.8816L28.6906 13.5217C28.6439 13.4858 28.6073 13.4384 28.5845 13.3841C28.5617 13.3298 28.5534 13.2705 28.5604 13.2121C28.5674 13.1536 28.5896 13.098 28.6246 13.0507C28.6597 13.0033 28.7065 12.9659 28.7603 12.9422L30.6583 12.1494C30.7396 12.1171 30.8302 12.1174 30.9113 12.1502C30.9924 12.1829 31.0577 12.2457 31.0938 12.3254C31.1298 12.4051 31.1337 12.4956 31.1047 12.5781C31.0758 12.6607 31.0161 12.7289 30.9382 12.7686L29.55 13.3774L30.009 13.7271C30.0537 13.7626 30.0886 13.8088 30.1106 13.8615C30.1327 13.9141 30.1411 13.9715 30.1351 14.0282C30.1291 14.0849 30.1088 14.1393 30.0763 14.1861C30.0437 14.233 29.9999 14.2709 29.9488 14.2963L28.2308 15.0891C28.184 15.0957 28.1365 15.0922 28.0912 15.0788V15.0804Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.2' stroke-miterlimit='10'/>\r\n<path d='M18.9975 19.9506C19.0075 20.2375 19.1024 20.5149 19.2701 20.7479C19.4379 20.9809 19.6709 21.159 19.9398 21.2596C20.2087 21.3601 20.5013 21.3787 20.7808 21.313C21.0603 21.2473 21.314 21.1002 21.5098 20.8903C21.7057 20.6805 21.835 20.4172 21.8813 20.1339C21.9276 19.8506 21.8889 19.5599 21.77 19.2986C21.6511 19.0373 21.4575 18.817 21.2135 18.6658C20.9695 18.5145 20.6861 18.439 20.3992 18.4487C20.2085 18.4552 20.021 18.4992 19.8473 18.5782C19.6736 18.6572 19.5172 18.7696 19.387 18.9091C19.2569 19.0486 19.1555 19.2124 19.0886 19.3911C19.0218 19.5698 18.9908 19.7599 18.9975 19.9506C19.0008 20.0451 19.0415 20.1344 19.1107 20.1989C19.1799 20.2634 19.2718 20.2978 19.3664 20.2945C19.4609 20.2912 19.5502 20.2504 19.6147 20.1813C19.6792 20.1121 19.7136 20.0201 19.7103 19.9256C19.7275 19.7472 19.8089 19.5812 19.9394 19.4585C20.0699 19.3357 20.2406 19.2646 20.4196 19.2583C20.5987 19.252 20.7739 19.311 20.9127 19.4244C21.0514 19.5377 21.1443 19.6976 21.1739 19.8743C21.1567 20.0526 21.0753 20.2187 20.9448 20.3414C20.8143 20.4642 20.6436 20.5353 20.4646 20.5416C20.2855 20.5479 20.1103 20.4888 19.9715 20.3755C19.8328 20.2622 19.7399 20.1023 19.7103 19.9256C19.6705 19.4686 18.9446 19.4814 18.9975 19.9506Z' fill='#8254C6'/>\r\n<path d='M22.0515 18.2638C22.3501 18.689 22.5071 19.1976 22.5001 19.7172C22.4931 20.2368 22.3225 20.7409 22.0125 21.158C21.7451 21.5369 22.3817 21.8714 22.6491 21.4925C23.0205 20.9627 23.2209 20.3318 23.2233 19.6848C23.2257 19.0377 23.0301 18.4055 22.6626 17.8728C22.4072 17.4853 21.797 17.9032 22.051 18.2511L22.0515 18.2638Z' fill='#8254C6'/>\r\n<path d='M23.1008 17.5895C23.5557 18.1992 23.8006 18.9401 23.7987 19.7008C23.7967 20.4616 23.5481 21.2012 23.09 21.8086C22.8221 22.1748 23.3366 22.6666 23.6171 22.3C24.1841 21.5748 24.4998 20.6848 24.5165 19.7644C24.5331 18.844 24.2499 17.9431 23.7096 17.1978C23.4412 16.825 22.8439 17.2282 23.1004 17.5768L23.1008 17.5895Z' fill='#8254C6'/>\r\n<path d='M23.9956 16.6657C24.4178 17.0412 24.7541 17.5031 24.9819 18.0202C25.2096 18.5372 25.3234 19.0972 25.3155 19.6621C25.3076 20.227 25.1782 20.7835 24.9361 21.2939C24.694 21.8042 24.3448 22.2565 23.9124 22.62C23.5631 22.9256 24.0927 23.4193 24.4419 23.1113C24.9371 22.6772 25.3348 22.143 25.6086 21.544C25.8824 20.9451 26.0263 20.2949 26.0306 19.6363C26.0351 18.9773 25.8999 18.3249 25.6338 17.722C25.3678 17.1191 24.9769 16.5794 24.487 16.1386C24.1578 15.8187 23.6664 16.3458 23.9956 16.6657Z' fill='#8254C6'/>\r\n<path d='M18.2125 17.874C17.8831 18.4311 17.7321 19.0757 17.7798 19.7212C17.8275 20.3667 18.0716 20.982 18.4794 21.4847C18.7727 21.8439 19.3831 21.453 19.091 21.1064C18.7525 20.7121 18.5469 20.2212 18.5034 19.7034C18.4599 19.1856 18.5808 18.6672 18.8488 18.2221C19.09 17.8187 18.4534 17.4842 18.213 17.8875L18.2125 17.874Z' fill='#8254C6'/>\r\n<path d='M17.1708 17.261C16.6835 18.042 16.4635 18.9603 16.5439 19.8772C16.6244 20.7942 17.001 21.6602 17.6169 22.3443C17.9225 22.6904 18.4036 22.1637 18.1084 21.8172C17.6096 21.2428 17.3106 20.5221 17.2563 19.7633C17.202 19.0046 17.3953 18.2486 17.8071 17.6091C18.0475 17.2041 17.4117 16.8712 17.1705 17.2745L17.1708 17.261Z' fill='#8254C6'/>\r\n<path d='M16.2595 16.273C15.8018 16.747 15.4498 17.3128 15.2268 17.9328C15.0037 18.5529 14.9146 19.2132 14.9653 19.8702C15.016 20.5272 15.2055 21.166 15.5211 21.7445C15.8368 22.3229 16.2715 22.8279 16.7966 23.2261C17.1632 23.5066 17.6546 22.9795 17.288 22.699C16.8307 22.367 16.4503 21.9404 16.1726 21.4483C15.8949 20.9562 15.7264 20.4101 15.6785 19.8471C15.6307 19.2841 15.7046 18.7174 15.8952 18.1854C16.0859 17.6535 16.3888 17.1689 16.7835 16.7645C17.0903 16.4223 16.5758 15.9304 16.2595 16.273Z' fill='#8254C6'/>\r\n</svg>\r\n"
            }
          ],
          current: [
            {
              value: "headache",
              meaning: "\u0633\u0631\u062f\u0631\u062f",
              icon: "<svg width='35' height='35' viewBox='0 0 35 35' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_16159_32828)'>\r\n<path d='M4.98039 9.10027H4.91003C4.82972 9.08719 4.75405 9.0539 4.69015 9.00352L1.17217 6.2435C1.11967 6.20828 1.07462 6.16306 1.0396 6.11042C1.00458 6.05778 0.980266 5.99876 0.968053 5.93673C0.95584 5.8747 0.955964 5.81087 0.968419 5.74889C0.980874 5.68691 1.00542 5.62799 1.04064 5.57549C1.07587 5.52299 1.12109 5.47794 1.17373 5.44292C1.22636 5.4079 1.28538 5.38359 1.34741 5.37137C1.40944 5.35916 1.47327 5.35928 1.53526 5.37174C1.59724 5.38419 1.65616 5.40874 1.70866 5.44396H1.76143L4.61979 7.68508L4.84846 6.05001C4.86447 5.93542 4.92135 5.83048 5.00862 5.75452C5.0959 5.67856 5.20769 5.6367 5.3234 5.63665H5.39375C5.47324 5.64713 5.54883 5.67737 5.61362 5.7246L8.83978 8.22077C8.89784 8.25377 8.9483 8.29864 8.98785 8.35246C9.0274 8.40628 9.05514 8.46783 9.06929 8.5331C9.08343 8.59838 9.08365 8.6659 9.06993 8.73126C9.05621 8.79662 9.02885 8.85835 8.98966 8.91243C8.95046 8.9665 8.9003 9.0117 8.84245 9.04507C8.7846 9.07845 8.72036 9.09924 8.65392 9.1061C8.58749 9.11297 8.52035 9.10574 8.4569 9.08489C8.39345 9.06405 8.33512 9.03006 8.2857 8.98513L5.64721 7.05104L5.40734 8.71249C5.3875 8.81514 5.33465 8.9085 5.25686 8.97836C5.17906 9.04821 5.08058 9.09074 4.97639 9.09947L4.98039 9.10027Z' fill='#8254C6'/>\r\n<path d='M11.0898 6.07609C11.0094 6.07631 10.9301 6.05629 10.8594 6.01787C10.7887 5.97945 10.7288 5.92386 10.6853 5.85622L9.75378 4.39706L9.39318 5.03669C9.3525 5.11344 9.29174 5.1777 9.21739 5.22262C9.14304 5.26754 9.05789 5.29144 8.97102 5.29174C8.88699 5.29281 8.80409 5.27236 8.7302 5.23233C8.6563 5.19231 8.59388 5.13404 8.54887 5.06308L7.13368 2.68124C7.08823 2.62737 7.05486 2.56437 7.03584 2.4965C7.01682 2.42863 7.0126 2.35747 7.02345 2.28783C7.03429 2.21819 7.05995 2.15168 7.09871 2.09281C7.13746 2.03394 7.1884 1.98407 7.24808 1.94657C7.30777 1.90907 7.37479 1.88482 7.44465 1.87546C7.51451 1.86609 7.58557 1.87184 7.65302 1.89229C7.72047 1.91274 7.78275 1.94744 7.83564 1.99402C7.88853 2.04061 7.9308 2.09801 7.9596 2.16233L8.97023 3.82378L9.32203 3.19934C9.36446 3.12757 9.42486 3.0681 9.49727 3.02678C9.56969 2.98547 9.65162 2.96374 9.73499 2.96374C9.81836 2.96374 9.90029 2.98547 9.97271 3.02678C10.0451 3.0681 10.1055 3.12757 10.148 3.19934L11.528 5.34371C11.5626 5.39723 11.5863 5.45713 11.5976 5.51991C11.6088 5.58268 11.6075 5.64707 11.5935 5.70931C11.5796 5.77155 11.5534 5.83039 11.5165 5.88238C11.4796 5.93438 11.4326 5.97849 11.3784 6.01213L11.2817 6.0649C11.2185 6.08096 11.1526 6.08395 11.0882 6.0737L11.0898 6.07609Z' fill='#8254C6'/>\r\n<path d='M7.54056 1.9894C7.61081 1.9891 7.67998 2.00671 7.74153 2.04057C7.80309 2.07442 7.855 2.12341 7.89236 2.18289L8.83262 3.7388L8.95575 3.94109L9.07009 3.73001L9.34273 3.2111C9.37929 3.14928 9.43134 3.09805 9.49373 3.06247C9.55612 3.02688 9.6267 3.00816 9.69853 3.00816C9.77035 3.00816 9.84094 3.02688 9.90333 3.06247C9.96572 3.09805 10.0178 3.14928 10.0543 3.2111L11.4343 5.35548C11.4638 5.40109 11.484 5.45207 11.4938 5.50549C11.5035 5.55891 11.5027 5.61374 11.4912 5.66683C11.4798 5.71992 11.458 5.77023 11.4271 5.8149C11.3962 5.85957 11.3568 5.89771 11.3112 5.92715H11.2233V6.03269V5.93594C11.1344 5.9687 11.0371 5.96997 10.9474 5.93956C10.8578 5.90914 10.7813 5.84888 10.7307 5.76884L9.85124 4.40962L9.72811 4.21613L9.61378 4.41841L9.30596 4.97249C9.26877 5.0362 9.21553 5.08905 9.15156 5.12578C9.0876 5.16251 9.01512 5.18184 8.94136 5.18184C8.86759 5.18184 8.79512 5.16251 8.73115 5.12578C8.66718 5.08905 8.61396 5.0362 8.57677 4.97249L7.16158 2.58186C7.12221 2.51919 7.10038 2.44709 7.09839 2.3731C7.0964 2.29911 7.11432 2.22594 7.15027 2.16124C7.18621 2.09654 7.23887 2.04267 7.30275 2.00527C7.36662 1.96787 7.43936 1.94831 7.51338 1.94863M7.51338 1.80791C7.40973 1.80456 7.30721 1.83037 7.2175 1.8824C7.12779 1.93443 7.05448 2.0106 7.00592 2.10223C6.95735 2.19386 6.93548 2.29728 6.94278 2.40073C6.95009 2.50418 6.98628 2.60351 7.04724 2.6874L8.49762 5.08603C8.54638 5.16873 8.61578 5.23733 8.69904 5.28513C8.7823 5.33292 8.87654 5.35827 8.97254 5.35867C9.06935 5.3591 9.16459 5.33415 9.24876 5.28632C9.33293 5.23848 9.4031 5.16943 9.45227 5.08603L9.76009 4.53195L10.6396 5.89117C10.7083 5.99956 10.8125 6.08073 10.9344 6.12083C11.0563 6.16093 11.1884 6.15747 11.308 6.11104C11.3866 6.08238 11.4578 6.03629 11.516 5.9762C11.5743 5.91612 11.6182 5.84362 11.6444 5.76414C11.6707 5.68466 11.6786 5.60027 11.6675 5.51731C11.6565 5.43434 11.6268 5.35496 11.5807 5.28512L10.2006 3.14074C10.1513 3.05897 10.0817 2.99132 9.9986 2.94436C9.91546 2.8974 9.8216 2.87272 9.72611 2.87272C9.63063 2.87272 9.53675 2.8974 9.45361 2.94436C9.37047 2.99132 9.30088 3.05897 9.25158 3.14074L8.97893 3.65965L8.03788 2.10374C7.98778 2.02558 7.91882 1.96126 7.83738 1.91669C7.75593 1.87212 7.66459 1.84874 7.57174 1.84868L7.51338 1.80791Z' fill='#8254C6'/>\r\n<path d='M16.0555 15.9995C15.6679 15.999 15.2836 15.9275 14.9218 15.7885C14.8861 15.7816 14.8523 15.7672 14.8226 15.7462C14.793 15.7253 14.7681 15.6982 14.7498 15.6668C14.7314 15.6355 14.72 15.6006 14.7162 15.5644C14.7125 15.5283 14.7164 15.4918 14.7279 15.4573C14.7394 15.4229 14.7581 15.3912 14.7828 15.3646C14.8075 15.338 14.8376 15.3169 14.8711 15.3028C14.9046 15.2888 14.9407 15.282 14.977 15.283C15.0134 15.284 15.049 15.2928 15.0817 15.3087C15.4086 15.4381 15.758 15.5009 16.1095 15.4934C16.461 15.4858 16.8074 15.4081 17.1285 15.2648C17.4495 15.1215 17.7386 14.9155 17.9789 14.6589C18.2192 14.4022 18.4058 14.1002 18.5277 13.7704C18.5346 13.7347 18.549 13.7009 18.5699 13.6713C18.5909 13.6416 18.618 13.6168 18.6493 13.5984C18.6807 13.5801 18.7156 13.5686 18.7517 13.5649C18.7879 13.5611 18.8244 13.5651 18.8588 13.5766C18.8933 13.5881 18.9249 13.6068 18.9516 13.6315C18.9782 13.6562 18.9993 13.6863 19.0133 13.7198C19.0274 13.7532 19.0342 13.7894 19.0331 13.8257C19.0321 13.862 19.0234 13.8977 19.0074 13.9303C18.7832 14.5346 18.3807 15.0565 17.8533 15.427C17.3259 15.7975 16.6984 15.9991 16.0539 16.0051L16.0555 15.9995Z' fill='#8254C6'/>\r\n<path d='M13.3309 12.0362H13.2429C13.1802 12.0125 13.1294 11.965 13.1014 11.9041C13.0734 11.8433 13.0706 11.7738 13.0934 11.7108C13.2414 11.321 13.4648 10.9642 13.7509 10.6607C14.0369 10.3573 14.3799 10.1132 14.7603 9.94244C15.1407 9.77165 15.551 9.67752 15.9678 9.6654C16.3846 9.65329 16.7998 9.72344 17.1894 9.87184C17.245 9.89894 17.2889 9.94531 17.3128 10.0023C17.3367 10.0593 17.3392 10.1231 17.3196 10.1817C17.3001 10.2404 17.2599 10.29 17.2065 10.3212C17.1531 10.3524 17.0902 10.3632 17.0295 10.3516C16.7021 10.2224 16.3521 10.16 16.0002 10.1681C15.6483 10.1762 15.3016 10.2547 14.9805 10.3989C14.6593 10.543 14.3703 10.75 14.1304 11.0076C13.8905 11.2652 13.7045 11.5681 13.5835 11.8987C13.5591 11.9437 13.5218 11.9804 13.4763 12.0039C13.4308 12.0275 13.3793 12.0368 13.3284 12.0306L13.3309 12.0362Z' fill='#8254C6'/>\r\n<path d='M16.0578 14.9099H15.9699C15.9023 14.9099 15.8374 14.883 15.7895 14.8352C15.7417 14.7874 15.7148 14.7225 15.7148 14.6549C15.7148 14.5872 15.7417 14.5223 15.7895 14.4745C15.8374 14.4267 15.9023 14.3998 15.9699 14.3998C16.1773 14.4092 16.3845 14.3775 16.5796 14.3065C16.7747 14.2355 16.9538 14.1266 17.1066 13.9861C17.2594 13.8455 17.3829 13.6761 17.4699 13.4876C17.557 13.2992 17.6058 13.0953 17.6138 12.8879C17.6138 12.8202 17.6406 12.7553 17.6885 12.7075C17.7363 12.6597 17.8012 12.6328 17.8688 12.6328C17.9365 12.6328 18.0013 12.6597 18.0492 12.7075C18.097 12.7553 18.1239 12.8202 18.1239 12.8879C18.106 13.4261 17.8812 13.9366 17.4964 14.3133C17.1116 14.6899 16.5963 14.9036 16.0578 14.9099Z' fill='#8254C6'/>\r\n<path d='M14.2288 13.0058C14.1953 13.0047 14.1624 12.9969 14.1319 12.9831C14.1014 12.9692 14.0739 12.9494 14.051 12.9249C14.0281 12.9004 14.0103 12.8717 13.9986 12.8403C13.9868 12.8089 13.9814 12.7755 13.9826 12.742C13.9935 12.4681 14.0583 12.199 14.1734 11.9502C14.2885 11.7014 14.4515 11.4777 14.6531 11.292C14.8548 11.1064 15.0911 10.9623 15.3485 10.8681C15.606 10.7739 15.8795 10.7314 16.1533 10.7431C16.221 10.7431 16.2859 10.77 16.3337 10.8178C16.3815 10.8656 16.4084 10.9305 16.4084 10.9982C16.4084 11.0658 16.3815 11.1307 16.3337 11.1785C16.2859 11.2263 16.221 11.2532 16.1533 11.2532C15.7351 11.2367 15.3273 11.3867 15.0194 11.6702C14.7114 11.9537 14.5283 12.3477 14.5103 12.7659C14.5103 12.8336 14.4834 12.8985 14.4356 12.9463C14.3877 12.9941 14.3229 13.021 14.2552 13.021L14.2288 13.0058Z' fill='#8254C6'/>\r\n<path d='M16.056 13.8471H16.0121C15.7507 13.8414 15.5021 13.7327 15.3203 13.5448C15.1385 13.3569 15.0382 13.1048 15.0411 12.8434C15.044 12.5819 15.1499 12.3322 15.3358 12.1483C15.5217 11.9644 15.7726 11.8613 16.0341 11.8613C16.2955 11.8613 16.5464 11.9644 16.7323 12.1483C16.9182 12.3322 17.0241 12.5819 17.027 12.8434C17.0299 13.1048 16.9296 13.3569 16.7478 13.5448C16.566 13.7327 16.3174 13.8414 16.056 13.8471ZM16.056 12.3176C15.9615 12.3202 15.8699 12.3505 15.7926 12.405C15.7153 12.4594 15.6558 12.5355 15.6216 12.6236C15.5874 12.7117 15.58 12.808 15.6003 12.9003C15.6207 12.9926 15.6678 13.0769 15.7359 13.1425C15.8039 13.2081 15.8898 13.2522 15.9828 13.2691C16.0758 13.2861 16.1718 13.2752 16.2586 13.2378C16.3454 13.2004 16.4192 13.1382 16.4708 13.059C16.5224 12.9798 16.5495 12.8871 16.5486 12.7926C16.5479 12.7289 16.5347 12.6659 16.5095 12.6074C16.4843 12.549 16.4477 12.4961 16.4018 12.4518C16.356 12.4076 16.3018 12.373 16.2424 12.35C16.1831 12.3269 16.1197 12.3159 16.056 12.3176Z' fill='#8254C6'/>\r\n<path d='M32.5997 22.8655C32.5006 19.0538 31.5441 15.3135 29.8013 11.9221C28.8198 10.0677 27.3524 8.51515 25.5563 7.43068C23.7601 6.3462 21.7029 5.77066 19.6047 5.76567C17.9819 5.7609 16.3786 6.11915 14.9122 6.81418C13.4458 7.50922 12.1533 8.52344 11.1296 9.78257C10.8745 10.1024 10.6499 10.3982 10.6722 10.6621C10.6879 10.7456 10.7201 10.8252 10.7669 10.8962C10.8138 10.9672 10.8743 11.0281 10.9449 11.0754C11.0567 11.177 11.1989 11.2388 11.3495 11.2513C11.6485 11.2513 11.9563 10.9315 12.229 10.6621L12.4576 10.4334C13.1113 9.71802 13.8456 9.0808 14.646 8.53448C16.1275 7.60952 17.839 7.11917 19.5855 7.11929C21.423 7.13786 23.2219 7.64925 24.7943 8.6001C26.3668 9.55094 27.6552 10.9064 28.5252 12.525C30.6176 16.322 31.1005 20.5204 31.3116 24.4965C31.3732 25.6567 31.3556 26.8152 31.3116 27.925V29.5952L23.7959 28.2152L24.0686 27.9426C26.9165 24.9843 28.0415 21.3416 27.4882 16.8289C27.3739 15.9494 27.0085 15.7216 26.4864 15.7216H26.1434C25.9104 15.7554 25.6753 15.773 25.4398 15.7743C24.1453 15.7546 22.8994 15.2783 21.9218 14.4295C21.315 13.9498 20.9623 13.6564 20.7177 13.6564C20.473 13.6564 20.19 14.0345 19.6783 14.7197C18.3247 16.5395 16.8127 17.4182 15.0457 17.4182C14.1985 17.3983 13.3618 17.2255 12.576 16.9081C12.3858 16.8295 12.1834 16.7848 11.9779 16.7762C11.818 16.7762 11.3447 16.7762 11.2743 17.6557C10.9545 21.6374 11.9339 24.8196 14.2454 27.3949C14.3637 27.527 14.4752 27.6649 14.5796 27.8082L14.7395 28.0017L14.9594 28.2744L8.05054 29.5313H7.9642C7.77071 29.5313 7.74433 29.3554 7.72434 29.1267C7.35617 25.2129 7.67739 21.2649 8.67339 17.4622C8.84929 16.7154 8.67339 16.4779 8.25123 16.3548C8.16604 16.3268 8.07706 16.312 7.98738 16.3108C7.87305 16.3108 7.53005 16.3108 7.33656 17.0488C6.15978 21.3244 5.84024 25.7905 6.3963 30.1901C6.40152 30.2721 6.40152 30.3543 6.3963 30.4363C7.89065 30.1165 9.40257 29.8383 10.9233 29.6456C11.2412 29.5567 11.5639 29.4862 11.8899 29.4345C12.1879 29.4031 12.4823 29.3442 12.7694 29.2586C13.259 29.1113 13.7629 29.017 14.2726 28.9772C14.3186 28.964 14.3673 28.964 14.4133 28.9772C14.9456 28.7718 15.5269 28.7289 16.0836 28.854H16.3826C16.4398 28.8698 16.49 28.9045 16.5252 28.9524C16.5603 29.0002 16.5782 29.0586 16.5761 29.1179C17.582 29.3461 18.6131 29.4437 19.6439 29.4081C20.7854 29.2624 21.9027 28.9667 22.9668 28.5286C23.0234 28.507 23.0861 28.507 23.1427 28.5286C23.6433 28.5101 24.1417 28.6033 24.6019 28.8013C24.761 28.7973 24.9193 28.8245 25.068 28.8812C27.4762 29.7607 30.0691 29.8743 32.487 30.6402C32.4769 30.532 32.4769 30.4231 32.487 30.3148C32.487 29.4353 32.5397 28.4951 32.5749 27.6076C32.5997 26.1004 32.6788 24.4654 32.5997 22.8655ZM22.667 27.263C21.7355 27.9973 20.5914 28.4105 19.4056 28.4407C18.4159 28.436 17.447 28.1561 16.6073 27.6323C14.0407 26.0764 12.1506 21.9012 12.6431 18.8422V18.6023L12.863 18.6639C13.5112 18.8379 14.1787 18.9296 14.8499 18.9365C15.963 18.9098 17.0549 18.627 18.0412 18.1103C19.0274 17.5935 19.8814 16.8566 20.537 15.9566L20.6249 15.8423L26.0746 17.6812V17.7868C26.9006 20.7139 25.1951 25.4344 22.6638 27.3013L22.667 27.263Z' fill='#8254C6'/>\r\n<path d='M6.60938 30.3646L16.1287 28.6057C16.1287 28.6057 18.6873 30.3023 23.0048 28.3242C32.0676 30.3726 32.0788 30.4686 32.0788 30.4686' stroke='#8254C6' stroke-width='0.262956' stroke-miterlimit='10'/>\r\n<path d='M8.91211 14.4964L9.59812 12.8877' stroke='#8254C6' stroke-width='0.797349' stroke-miterlimit='10' stroke-linecap='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_16159_32828'>\r\n<rect width='34.778' height='34.778' fill='white' transform='translate(0.113281 0.111328)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "stomach_ache",
              meaning: "\u062f\u0644\u200c\u062f\u0631\u062f",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M10.8902 34.3312H10.781C10.6626 34.3316 10.5488 34.2853 10.4643 34.2023C10.1719 33.6813 9.92035 33.1383 9.71183 32.5784C8.9081 30.3558 8.49931 28.0097 8.50395 25.6462C8.50918 22.3943 9.1817 19.178 10.4799 16.1965C11.7827 13.3401 12.374 10.2105 12.2031 7.07574C12.1727 6.92054 12.1971 6.75959 12.272 6.62032C12.3094 6.5791 12.3564 6.54779 12.4088 6.52917C12.4612 6.51056 12.5174 6.50522 12.5724 6.51365C12.8185 6.51365 12.8596 6.64248 12.8694 6.97892C13.0839 10.061 12.5505 13.1492 11.3144 15.9806C9.74139 19.4233 9.03107 23.1974 9.24493 26.9764C9.37 29.2742 9.93493 31.5267 10.9091 33.6115L10.9681 33.7108L11.0174 33.8003C10.9842 33.9515 10.9412 34.1003 10.8885 34.2458L10.8902 34.3312Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.373333' stroke-miterlimit='10'/>\r\n<path d='M29.5695 34.3704C29.514 34.382 29.4567 34.382 29.4012 34.3704C29.3619 34.3556 29.3259 34.3331 29.2953 34.3042C29.2647 34.2753 29.2402 34.2406 29.2232 34.2022C29.2027 34.0435 29.2378 33.8826 29.3225 33.7468C30.1522 32.0155 30.6846 30.1569 30.8971 28.2489C31.3797 24.1247 30.7257 19.947 29.0057 16.1676C27.7838 13.4158 27.2013 10.4229 27.3022 7.41368V7.28484C27.2886 7.16039 27.3055 7.03451 27.3514 6.91804C27.392 6.85368 27.4456 6.79852 27.5088 6.75612C27.5719 6.71372 27.6433 6.68502 27.7182 6.67188C27.8283 6.73727 27.9124 6.83874 27.9562 6.95908C27.9805 7.08013 27.9805 7.20482 27.9562 7.32587C27.9606 7.37528 27.9606 7.42499 27.9562 7.4744C27.8831 10.4196 28.4614 13.3446 29.6499 16.0404C31.0361 19.1573 31.748 22.5319 31.7391 25.9431C31.7398 28.604 31.1865 31.2359 30.1143 33.6713L29.9281 34.0734C29.8173 34.2416 29.704 34.3704 29.5695 34.3704Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.373333' stroke-miterlimit='10'/>\r\n<path d='M20.1405 34.3407C20.096 34.344 20.0514 34.3384 20.0091 34.3243C19.9669 34.3102 19.9278 34.2879 19.8943 34.2586C19.8141 34.1176 19.7851 33.9533 19.8122 33.7933V30.6637C19.824 30.4546 19.7873 30.2457 19.7049 30.0532C19.6224 29.8607 19.4966 29.69 19.3371 29.5543C18.6634 28.8978 17.9905 28.2372 17.3562 27.5734L16.5841 26.8012L16.4749 26.7118C16.4159 26.7118 16.356 26.6125 16.3461 26.5731C16.3142 26.42 16.2978 26.2642 16.2969 26.1078V26.0258H16.406C16.5314 26.0102 16.6587 26.0306 16.7728 26.0849C17.5351 26.8078 18.2983 27.5701 19.0212 28.3004L19.4175 28.6968C19.5464 28.8256 19.6637 28.9643 19.804 29.1325L20.0321 29.3901L20.1142 29.4796L20.966 28.6278L23.3489 26.2514L23.431 26.1694C23.5106 26.0664 23.612 25.9823 23.728 25.9232H23.847C23.9383 25.9157 24.0293 25.9401 24.1047 25.9921C24.1519 26.1166 24.1519 26.2541 24.1047 26.3786C24.0647 26.4567 24.0071 26.5244 23.9364 26.5764L23.847 26.6658L23.1241 27.3888C22.3913 28.1215 21.6388 28.8838 20.8864 29.6166C20.7482 29.7407 20.6392 29.8939 20.5673 30.0652C20.4954 30.2364 20.4622 30.4215 20.4703 30.607V33.7663C20.4925 33.9229 20.4637 34.0826 20.3883 34.2217C20.356 34.2503 20.3183 34.2724 20.2775 34.2864C20.2366 34.3005 20.1934 34.3064 20.1503 34.3037L20.1405 34.3407Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.373333' stroke-miterlimit='10'/>\r\n<path d='M6.47387 15.8628C6.3712 15.8639 6.26994 15.839 6.17943 15.7905C6.08893 15.742 6.0121 15.6715 5.95608 15.5855L4.62429 13.5144L4.08846 14.4761C4.03537 14.5717 3.95755 14.6514 3.86314 14.7067C3.76873 14.762 3.66121 14.7909 3.5518 14.7903C3.4445 14.7909 3.33885 14.7639 3.24491 14.7121C3.15097 14.6602 3.07187 14.5852 3.01514 14.4941L1.07366 11.2028C1.00908 11.139 0.959075 11.062 0.92708 10.9771C0.895085 10.8922 0.881858 10.8014 0.888309 10.7108C0.894759 10.6203 0.920735 10.5323 0.964449 10.4527C1.00816 10.3732 1.06857 10.3041 1.14154 10.2501C1.2145 10.1962 1.29829 10.1587 1.38713 10.1402C1.47598 10.1217 1.56778 10.1226 1.65622 10.143C1.74465 10.1633 1.82763 10.2026 1.89946 10.258C1.97129 10.3135 2.03025 10.3839 2.0723 10.4643L3.51405 12.8489L4.03184 11.9241C4.0705 11.8535 4.12273 11.7912 4.18555 11.7409C4.24837 11.6905 4.32052 11.6531 4.39785 11.6308C4.47518 11.6084 4.55617 11.6016 4.63616 11.6107C4.71614 11.6197 4.79354 11.6445 4.8639 11.6836C4.95314 11.7325 5.02916 11.8024 5.08545 11.8872L6.93503 14.8273C6.97947 14.8951 7.00996 14.971 7.02474 15.0507C7.03951 15.1304 7.03827 15.2122 7.02109 15.2914C7.0039 15.3707 6.97111 15.4456 6.92464 15.512C6.87816 15.5785 6.81893 15.6349 6.7504 15.6782H6.62075L6.47387 15.8628Z' fill='#8254C6'/>\r\n<path d='M32.8591 15.4393C32.7061 15.4395 32.5576 15.3872 32.4385 15.2912C32.3193 15.1951 32.2367 15.0611 32.2045 14.9115C32.1722 14.7619 32.1922 14.6058 32.2612 14.4692C32.3302 14.3326 32.4439 14.2238 32.5834 14.1609L34.9631 13.0793L34.0391 12.3753C33.9474 12.3045 33.8758 12.2111 33.8311 12.1043C33.7863 11.9974 33.7701 11.8808 33.784 11.7658C33.7979 11.6509 33.8415 11.5415 33.9103 11.4484C33.9792 11.3553 34.0711 11.2816 34.1769 11.2347L37.9139 9.68134C37.9939 9.64519 38.0803 9.62516 38.1681 9.6224C38.2559 9.61964 38.3434 9.6342 38.4256 9.66525C38.5078 9.6963 38.583 9.74323 38.6471 9.80337C38.7111 9.8635 38.7627 9.93566 38.7988 10.0157C38.835 10.0958 38.855 10.1822 38.8578 10.27C38.8606 10.3578 38.846 10.4453 38.8149 10.5275C38.7839 10.6097 38.737 10.6849 38.6768 10.749C38.6167 10.813 38.5445 10.8646 38.4645 10.9007L35.7303 12.0963L36.6329 12.7848C36.7207 12.8548 36.7894 12.9458 36.8328 13.0494C36.8761 13.153 36.8926 13.2659 36.8808 13.3776C36.8691 13.4893 36.8294 13.5962 36.7654 13.6885C36.7014 13.7808 36.6152 13.8555 36.5148 13.9057L33.1324 15.459C33.0401 15.4723 32.9461 15.4656 32.8566 15.4393H32.8591Z' fill='#8254C6'/>\r\n<path d='M19.9434 20.7949L20.2773 20.3477L20.6515 20.8441' fill='#8254C6'/>\r\n<path d='M19.9434 20.7949L20.2773 20.3477L20.6515 20.8441' stroke='#8254C6' stroke-width='0.266667' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M19.4045 17.9188C19.4109 18.1024 19.4717 18.28 19.579 18.4292C19.6863 18.5783 19.8355 18.6922 20.0076 18.7566C20.1797 18.821 20.367 18.8329 20.5458 18.7908C20.7247 18.7487 20.8871 18.6546 21.0124 18.5203C21.1378 18.386 21.2205 18.2175 21.2501 18.0362C21.2798 17.8548 21.255 17.6688 21.1789 17.5015C21.1028 17.3343 20.9789 17.1934 20.8227 17.0965C20.6665 16.9997 20.4852 16.9514 20.3016 16.9576C20.1795 16.9618 20.0595 16.9899 19.9484 17.0405C19.8372 17.0911 19.7371 17.163 19.6538 17.2523C19.5705 17.3416 19.5056 17.4464 19.4628 17.5607C19.42 17.6751 19.4002 17.7968 19.4045 17.9188C19.4093 17.9774 19.4364 18.0318 19.4803 18.0708C19.5242 18.1099 19.5814 18.1305 19.6401 18.1285C19.6988 18.1264 19.7544 18.1018 19.7955 18.0598C19.8365 18.0178 19.8598 17.9616 19.8604 17.9028C19.8728 17.79 19.9255 17.6854 20.0087 17.6082C20.0919 17.5309 20.2001 17.4862 20.3135 17.4823C20.427 17.4783 20.5381 17.5153 20.6265 17.5865C20.7149 17.6577 20.7747 17.7584 20.795 17.8701C20.7826 17.983 20.73 18.0876 20.6467 18.1648C20.5635 18.242 20.4553 18.2867 20.3419 18.2907C20.2284 18.2947 20.1173 18.2577 20.0289 18.1864C19.9405 18.1152 19.8807 18.0145 19.8604 17.9028C19.8369 17.6102 19.3703 17.6181 19.4045 17.9188Z' fill='#8254C6'/>\r\n<path d='M21.3576 16.8391C21.5487 17.1112 21.6492 17.4367 21.6447 17.7691C21.6403 18.1016 21.5312 18.4242 21.3328 18.6911C21.1621 18.9335 21.569 19.1478 21.7397 18.9054C21.9769 18.5664 22.1048 18.163 22.1063 17.7493C22.1079 17.3356 21.9829 16.9313 21.7482 16.5905C21.5849 16.3417 21.1944 16.6085 21.3573 16.8313L21.3576 16.8391Z' fill='#8254C6'/>\r\n<path d='M22.0264 16.4086C22.3179 16.7985 22.4751 17.2724 22.4744 17.7592C22.4737 18.246 22.3151 18.7194 22.0225 19.1084C21.8514 19.3429 22.1806 19.6574 22.3595 19.4226C22.7219 18.9585 22.9236 18.3891 22.9341 17.8003C22.9445 17.2115 22.7632 16.6353 22.4175 16.1586C22.2461 15.9198 21.8637 16.178 22.0261 16.4003L22.0264 16.4086Z' fill='#8254C6'/>\r\n<path d='M22.6024 15.8158C22.8727 16.0562 23.0881 16.352 23.2339 16.683C23.3797 17.0141 23.4524 17.3727 23.4472 17.7344C23.4421 18.0959 23.3592 18.4521 23.2042 18.7787C23.0492 19.1054 22.8257 19.3948 22.5488 19.6274C22.3271 19.8228 22.6651 20.1369 22.8858 19.9416C23.203 19.6639 23.4578 19.3222 23.6333 18.9389C23.8089 18.5556 23.9012 18.1395 23.9041 17.7179C23.9071 17.2962 23.8206 16.8788 23.6504 16.493C23.4801 16.1072 23.2301 15.7619 22.9166 15.4798C22.7061 15.2749 22.3914 15.6125 22.6024 15.8158Z' fill='#8254C6'/>\r\n<path d='M18.9003 16.5907C18.6901 16.947 18.5937 17.3591 18.6242 17.7717C18.6547 18.1843 18.8105 18.5777 19.0708 18.8993C19.2581 19.1291 19.6493 18.879 19.4617 18.6571C19.2456 18.4048 19.1143 18.0909 19.0866 17.7599C19.0589 17.4288 19.1362 17.0975 19.3075 16.8128C19.4619 16.5548 19.0546 16.3405 18.9006 16.5986L18.9003 16.5907Z' fill='#8254C6'/>\r\n<path d='M18.2358 16.1979C17.9242 16.6976 17.7834 17.285 17.8349 17.8717C17.8864 18.4583 18.1272 19.0122 18.5211 19.45C18.7165 19.6716 19.0228 19.3339 18.8353 19.113C18.5161 18.7454 18.3248 18.2842 18.29 17.7987C18.2553 17.3131 18.3789 16.8294 18.6425 16.4201C18.7974 16.162 18.3901 15.9478 18.2361 16.2058L18.2358 16.1979Z' fill='#8254C6'/>\r\n<path d='M17.6496 15.5662C17.3565 15.8695 17.1312 16.2316 16.9884 16.6284C16.8455 17.0252 16.7884 17.4478 16.8209 17.8683C16.8534 18.2888 16.9746 18.6976 17.1767 19.0678C17.3787 19.4379 17.657 19.7611 17.9931 20.0158C18.2279 20.1952 18.5421 19.8582 18.3073 19.6788C18.0144 19.4663 17.7708 19.1932 17.5931 18.878C17.4153 18.5629 17.3075 18.2131 17.2771 17.8526C17.2467 17.492 17.2943 17.1291 17.4167 16.7887C17.5391 16.4482 17.7335 16.1381 17.9865 15.8794C18.1828 15.6618 17.8536 15.3468 17.6496 15.5662Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "chest_pain",
              meaning: "\u062f\u0631\u062f \u0633\u06cc\u0646\u0647",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M16.4737 16.2555C16.3881 16.2528 16.3045 16.2286 16.2308 16.185C16.1571 16.1415 16.0955 16.08 16.0519 16.0062L15.0934 14.4445L14.7003 15.1155C14.6543 15.1935 14.5882 15.2576 14.509 15.3015C14.4298 15.3453 14.3403 15.3671 14.2498 15.3648C14.1602 15.3635 14.0724 15.339 13.9951 15.2936C13.9179 15.2482 13.8537 15.1836 13.8089 15.106L12.3822 12.5657C12.334 12.4509 12.3287 12.3226 12.3675 12.2042C12.4062 12.0859 12.4863 11.9855 12.5931 11.9214C12.6999 11.8574 12.8262 11.8339 12.9488 11.8554C13.0715 11.8769 13.1823 11.9419 13.2609 12.0385L14.2858 13.8303L14.6692 13.1912C14.7143 13.1157 14.7782 13.0533 14.8546 13.0099C14.931 12.9665 15.0174 12.9437 15.1053 12.9437C15.1932 12.9437 15.2796 12.9665 15.3561 13.0099C15.4325 13.0533 15.4964 13.1157 15.5415 13.1912L16.9402 15.4718C16.975 15.529 16.9982 15.5926 17.0084 15.6588C17.0186 15.725 17.0156 15.7926 16.9995 15.8576C16.9835 15.9226 16.9547 15.9838 16.9149 16.0377C16.8752 16.0916 16.8251 16.1371 16.7677 16.1716L16.6622 16.2195C16.6014 16.2446 16.5363 16.2576 16.4705 16.2578L16.4737 16.2555Z' fill='#8254C6'/>\r\n<path d='M12.8432 11.8772C12.9168 11.8783 12.989 11.8983 13.0528 11.9352C13.1165 11.9721 13.1698 12.0247 13.2074 12.0881L14.166 13.7456L14.2906 13.9661L14.4152 13.7552L14.722 13.2184C14.7598 13.1527 14.8143 13.0981 14.8799 13.0602C14.9455 13.0222 15.02 13.0022 15.0958 13.0022C15.1716 13.0022 15.2461 13.0222 15.3117 13.0602C15.3774 13.0981 15.4318 13.1527 15.4697 13.2184L16.8588 15.5086C16.8885 15.557 16.9084 15.6108 16.9172 15.667C16.9261 15.7231 16.9238 15.7804 16.9104 15.8356C16.8971 15.8909 16.8729 15.9429 16.8394 15.9888C16.8059 16.0346 16.7636 16.0734 16.715 16.1029H16.6288V16.2195V16.1237C16.5347 16.1581 16.4317 16.1588 16.3372 16.1255C16.2428 16.0923 16.1629 16.0273 16.1111 15.9416L15.2388 14.4853L15.1142 14.2744L14.9896 14.4853L14.6541 15.0605C14.6156 15.1282 14.5598 15.1846 14.4925 15.2238C14.4251 15.263 14.3486 15.2837 14.2707 15.2837C14.1927 15.2837 14.1162 15.263 14.0488 15.2238C13.9815 15.1846 13.9257 15.1282 13.8872 15.0605L12.4597 12.521C12.4177 12.4544 12.3946 12.3776 12.3931 12.2988C12.3916 12.2201 12.4117 12.1424 12.4512 12.0742C12.4907 12.0061 12.5481 11.95 12.6172 11.9122C12.6863 11.8744 12.7645 11.8562 12.8432 11.8596M12.8432 11.7158C12.7402 11.7154 12.6388 11.7421 12.5495 11.7934C12.4602 11.8447 12.3859 11.9187 12.3344 12.0079C12.2828 12.0971 12.2557 12.1983 12.2559 12.3013C12.256 12.4043 12.2833 12.5055 12.3351 12.5945L13.7626 15.134C13.8106 15.223 13.8809 15.2981 13.9666 15.3518C14.0523 15.4056 14.1504 15.4362 14.2515 15.4407C14.3546 15.4442 14.4568 15.4203 14.5477 15.3714C14.6387 15.3226 14.715 15.2506 14.7691 15.1627L15.1046 14.5876L15.9769 16.0438C16.0462 16.1579 16.1525 16.2448 16.2781 16.2902C16.4036 16.3355 16.5409 16.3365 16.6671 16.293C16.7504 16.2645 16.8261 16.2176 16.8888 16.1557C16.9514 16.0938 16.9992 16.0186 17.0287 15.9357C17.0582 15.8528 17.0686 15.7642 17.0591 15.6767C17.0496 15.5892 17.0204 15.505 16.9738 15.4303L15.5751 13.1497C15.5212 13.0726 15.4495 13.0096 15.3661 12.9661C15.2826 12.9226 15.1899 12.8999 15.0958 12.8999C15.0017 12.8999 14.909 12.9226 14.8256 12.9661C14.7422 13.0096 14.6704 13.0726 14.6165 13.1497L14.3098 13.6865L13.3512 12.029C13.3005 11.9466 13.2302 11.8781 13.1466 11.8296C13.0629 11.7811 12.9686 11.7541 12.8719 11.751L12.8432 11.7158Z' fill='#8254C6'/>\r\n<path d='M23.1422 16.1795L23.0368 16.122C22.929 16.0417 22.8573 15.922 22.8376 15.7891C22.8178 15.6561 22.8515 15.5208 22.9313 15.4126L24.5218 13.2558C24.5743 13.1865 24.6438 13.1317 24.7236 13.0969C24.8034 13.0621 24.8907 13.0484 24.9773 13.057C25.064 13.0657 25.1469 13.0965 25.2182 13.1464C25.2895 13.1963 25.3468 13.2637 25.3845 13.3421L25.7104 14.0227L26.8887 12.3364C26.9249 12.2736 26.9739 12.219 27.0325 12.1763C27.0911 12.1337 27.158 12.1038 27.229 12.0886C27.2999 12.0734 27.3732 12.0733 27.4441 12.0883C27.5151 12.1033 27.5821 12.133 27.6408 12.1755C27.6995 12.2181 27.7487 12.2725 27.785 12.3352C27.8214 12.3979 27.8442 12.4676 27.8519 12.5397C27.8596 12.6118 27.8521 12.6847 27.8298 12.7537C27.8076 12.8228 27.771 12.8863 27.7226 12.9403L26.0747 15.3367C26.0225 15.4083 25.9527 15.4653 25.8722 15.5023C25.7916 15.5392 25.7029 15.5548 25.6146 15.5476C25.5241 15.5403 25.4373 15.5088 25.3632 15.4566C25.289 15.4043 25.2302 15.3332 25.1928 15.2505L24.8573 14.5507L23.7845 16.0165C23.712 16.1119 23.6092 16.1797 23.493 16.2087C23.3769 16.2378 23.2542 16.2263 23.1454 16.1763L23.1422 16.1795Z' fill='#8254C6'/>\r\n<path d='M28.8247 16.043C30.4343 19.3182 30.5589 22.1851 28.6234 25.3276C28.1646 26.0285 27.8396 26.8082 27.6648 27.6274C27.2691 30.2031 27.5127 32.8366 28.3741 35.296C28.5179 35.7562 29.2464 35.5549 29.1027 35.0947C28.5441 33.3848 28.2688 31.595 28.2879 29.7962C28.2879 27.2855 29.3894 26.1456 30.463 24.0447C31.9808 21.169 30.8752 18.3915 29.5045 15.6412C29.2936 15.2099 28.6417 15.5837 28.8526 16.0247L28.8247 16.043Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110437'/>\r\n<path d='M22.8176 4.79678C22.5683 9.41553 24.8298 8.39145 28.2215 9.77899C34.2582 12.2417 33.5009 18.5659 33.3379 23.7974C33.2356 27.2625 33.4183 30.7301 33.8843 34.1652C33.9514 34.6349 34.6991 34.6445 34.6416 34.1652C34.144 30.4183 33.9804 26.6346 34.1527 22.8588C34.2773 19.9167 34.6033 16.7934 33.5201 13.9768C33.0237 12.5529 32.1492 11.2909 30.9902 10.3262C28.585 8.46734 23.3216 9.04248 23.5836 4.79758C23.5836 4.69716 23.5437 4.60085 23.4727 4.52985C23.4017 4.45884 23.3054 4.41895 23.205 4.41895C23.1046 4.41895 23.0082 4.45884 22.9372 4.52985C22.8662 4.60085 22.8263 4.69716 22.8263 4.79758L22.8176 4.79678Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110437'/>\r\n<path d='M10.5325 16.2176C9.40216 18.527 8.17518 21.1423 9.15293 23.7265C9.81435 25.4607 11.261 26.6022 11.6444 28.5194C11.9291 30.5828 11.6918 32.6847 10.9543 34.6327C10.8009 35.0928 11.5294 35.2941 11.6828 34.834C12.4487 32.7562 12.7051 30.525 12.4305 28.3276C12.2526 27.4593 11.8972 26.6372 11.3864 25.9128C9.46926 22.7703 9.57551 19.8954 11.1851 16.6282C11.396 16.1968 10.7442 15.8134 10.5333 16.2448L10.5325 16.2176Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110437'/>\r\n<path d='M16.4445 5.33298C16.6649 9.51078 11.9983 8.9548 9.62259 10.4781C8.17359 11.4488 7.08001 12.8648 6.50721 14.5122C5.54863 17.0516 5.74036 19.8011 5.82663 22.4651C6.01252 26.553 5.85566 30.6493 5.35772 34.711C5.29062 35.1903 6.04789 35.1807 6.11499 34.711C6.58648 31.2764 6.76925 27.8083 6.66139 24.3432C6.48884 19.3905 5.50231 12.3082 11.7778 10.3248C15.275 9.2232 17.4214 9.80714 17.1818 5.34256C17.1818 4.86327 16.4053 4.85369 16.4245 5.34256L16.4445 5.33298Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110437'/>\r\n<path d='M18.6103 22.0326C18.6105 22.3011 18.6896 22.5635 18.8377 22.7874C18.9859 23.0113 19.1965 23.1867 19.4435 23.2919C19.6905 23.397 19.963 23.4273 20.227 23.379C20.4911 23.3306 20.7351 23.2057 20.9288 23.0198C21.1225 22.8339 21.2573 22.5952 21.3165 22.3334C21.3757 22.0716 21.3566 21.7981 21.2617 21.547C21.1668 21.2959 21.0001 21.0782 20.7825 20.921C20.565 20.7637 20.306 20.6739 20.0377 20.6626C19.8547 20.6575 19.6725 20.6887 19.5015 20.7543C19.3306 20.8198 19.1743 20.9186 19.0416 21.0448C18.9089 21.171 18.8025 21.3222 18.7285 21.4896C18.6545 21.6571 18.6143 21.8376 18.6103 22.0206C18.6103 22.1109 18.6461 22.1974 18.7099 22.2613C18.7737 22.3251 18.8603 22.3609 18.9506 22.3609C19.0408 22.3609 19.1274 22.3251 19.1912 22.2613C19.255 22.1974 19.2909 22.1109 19.2909 22.0206C19.2909 21.8841 19.3313 21.7507 19.4072 21.6372C19.483 21.5237 19.5908 21.4352 19.7169 21.383C19.843 21.3308 19.9818 21.3171 20.1157 21.3437C20.2495 21.3703 20.3725 21.4361 20.469 21.5326C20.5656 21.6291 20.6313 21.7521 20.6579 21.886C20.6846 22.0199 20.6709 22.1586 20.6187 22.2848C20.5664 22.4109 20.478 22.5187 20.3645 22.5945C20.251 22.6703 20.1175 22.7108 19.981 22.7108C19.798 22.7108 19.6224 22.6381 19.493 22.5087C19.3636 22.3792 19.2909 22.2037 19.2909 22.0206C19.2621 21.6212 18.5815 21.6212 18.6103 22.0326Z' fill='#8254C6'/>\r\n<path d='M21.5311 20.5583C21.7987 20.9676 21.9307 21.4507 21.9083 21.9392C21.8859 22.4277 21.7104 22.8968 21.4064 23.2799C21.1476 23.625 21.7324 23.9605 21.9912 23.625C22.3555 23.138 22.5626 22.5515 22.5849 21.9438C22.6071 21.336 22.4435 20.7359 22.1158 20.2236C21.8857 19.8594 21.301 20.2236 21.5311 20.5687V20.5583Z' fill='#8254C6'/>\r\n<path d='M22.5391 19.9535C22.9465 20.5422 23.1519 21.2472 23.1242 21.9626C23.0966 22.678 22.8374 23.365 22.3857 23.9205C22.1173 24.256 22.5966 24.7353 22.865 24.3998C23.4217 23.7368 23.748 22.911 23.7947 22.0465C23.8414 21.1821 23.6059 20.3259 23.1238 19.6069C22.8842 19.245 22.2994 19.6093 22.5391 19.9535Z' fill='#8254C6'/>\r\n<path d='M23.4213 19.1313C23.8049 19.4989 24.105 19.9446 24.3013 20.4383C24.4977 20.9319 24.5856 21.462 24.5593 21.9926C24.5329 22.5232 24.3928 23.042 24.1485 23.5137C23.9043 23.9855 23.5614 24.3993 23.1433 24.727C22.8078 25.005 23.2871 25.4843 23.6226 25.2063C24.1022 24.8146 24.4934 24.3258 24.7706 23.772C25.0478 23.2183 25.2047 22.6122 25.231 21.9935C25.2572 21.3749 25.1522 20.7576 24.923 20.1824C24.6937 19.6072 24.3452 19.087 23.9006 18.656C23.836 18.601 23.753 18.5722 23.6682 18.5754C23.5833 18.5787 23.5028 18.6136 23.4425 18.6734C23.3822 18.7332 23.3466 18.8134 23.3427 18.8982C23.3387 18.983 23.3668 19.0662 23.4213 19.1313Z' fill='#8254C6'/>\r\n<path d='M17.932 20.056C17.6043 20.5683 17.4407 21.1683 17.4629 21.7761C17.4852 22.3838 17.6923 22.9703 18.0566 23.4573C18.3154 23.8024 18.9002 23.4573 18.6414 23.1122C18.3375 22.7291 18.1619 22.2601 18.1395 21.7716C18.1171 21.2831 18.2491 20.7999 18.5167 20.3907C18.7468 20.0264 18.1621 19.6813 17.932 20.0456V20.056Z' fill='#8254C6'/>\r\n<path d='M16.9228 19.4557C16.4407 20.1747 16.2052 21.0309 16.2519 21.8953C16.2986 22.7598 16.6249 23.5856 17.1816 24.2486C17.45 24.5937 17.9293 24.1048 17.6609 23.7693C17.2092 23.2139 16.95 22.5268 16.9223 21.8114C16.8947 21.096 17.1 20.391 17.5075 19.8024C17.7463 19.4365 17.1624 19.0914 16.9228 19.4557Z' fill='#8254C6'/>\r\n<path d='M16.1478 18.4988C15.7017 18.929 15.352 19.449 15.1219 20.0243C14.8917 20.5997 14.7863 21.2174 14.8125 21.8365C14.8388 22.4556 14.9962 23.0622 15.2743 23.616C15.5524 24.1698 15.9448 24.6582 16.4257 25.0491C16.7612 25.3271 17.2405 24.8478 16.905 24.5698C16.4869 24.2421 16.1441 23.8283 15.8998 23.3565C15.6555 22.8848 15.5154 22.366 15.4891 21.8354C15.4627 21.3048 15.5507 20.7747 15.747 20.281C15.9433 19.7874 16.2435 19.3417 16.6271 18.9741C16.6816 18.909 16.7096 18.8258 16.7057 18.741C16.7018 18.6562 16.6661 18.576 16.6059 18.5162C16.5456 18.4564 16.465 18.4214 16.3802 18.4182C16.2953 18.415 16.2124 18.4438 16.1478 18.4988Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "contusion",
              meaning: "\u06a9\u0628\u0648\u062f\u06cc",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M28.8248 16.0401C30.4345 19.3155 30.5591 22.1827 28.6235 25.3254C28.1647 26.0263 27.8396 26.8061 27.6648 27.6254C27.2691 30.2013 27.5127 32.835 28.3742 35.2946C28.518 35.7547 29.2466 35.5534 29.1028 35.0933C28.5441 33.3832 28.2689 31.5933 28.2879 29.7943C28.2879 27.2835 29.3896 26.1435 30.4633 24.0425C31.9811 21.1665 30.8755 18.3888 29.5046 15.6383C29.2937 15.2069 28.6418 15.5808 28.8527 16.0218L28.8248 16.0401Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110448'/>\r\n<path d='M22.8156 4.79388C22.5664 9.41297 24.828 8.38881 28.22 9.77646C34.2571 12.2394 33.4997 18.5641 33.3368 23.7959C33.2344 27.2612 33.4172 30.7291 33.8832 34.1645C33.9503 34.6342 34.6981 34.6438 34.6405 34.1645C34.1429 30.4173 33.9793 26.6333 34.1516 22.8572C34.2762 19.915 34.6022 16.7914 33.5189 13.9745C33.0225 12.5505 32.1479 11.2885 30.9889 10.3237C28.5835 8.46471 23.3197 9.0399 23.5817 4.79468C23.5817 4.69425 23.5418 4.59794 23.4708 4.52692C23.3998 4.45591 23.3035 4.41602 23.2031 4.41602C23.1026 4.41602 23.0063 4.45591 22.9353 4.52692C22.8643 4.59794 22.8244 4.69425 22.8244 4.79468L22.8156 4.79388Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110448'/>\r\n<path d='M10.5307 16.2147C9.40026 18.5242 8.17318 21.1398 9.151 23.7241C9.81247 25.4585 11.2592 26.6001 11.6427 28.5174C11.9274 30.5809 11.6901 32.683 10.9525 34.6311C10.7991 35.0913 11.5277 35.2926 11.681 34.8324C12.447 32.7545 12.7035 30.5232 12.4288 28.3256C12.2509 27.4573 11.8954 26.6351 11.3847 25.9106C9.46736 22.7679 9.57361 19.8927 11.1833 16.6253C11.3942 16.1939 10.7424 15.8105 10.5315 16.2419L10.5307 16.2147Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110448'/>\r\n<path d='M16.4433 5.33008C16.6638 9.50819 11.9968 8.95217 9.62096 10.4756C8.17185 11.4463 7.07819 12.8625 6.50534 14.5099C5.54669 17.0496 5.73843 19.7993 5.82471 22.4635C6.01061 26.5517 5.85375 30.6483 5.35577 34.7103C5.28866 35.1896 6.04599 35.18 6.1131 34.7103C6.58461 31.2754 6.7674 27.8071 6.65953 24.3417C6.48698 19.3887 5.50037 12.3058 11.7763 10.3222C15.2738 9.22059 17.4204 9.80457 17.1807 5.33966C17.1807 4.86034 16.4042 4.85075 16.4234 5.33966L16.4433 5.33008Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.110448'/>\r\n<path d='M9.3094 15.1883C9.30955 15.3643 9.3614 15.5364 9.45854 15.6832C9.55568 15.8299 9.6938 15.9449 9.85575 16.0138C10.0177 16.0827 10.1963 16.1025 10.3694 16.0708C10.5425 16.039 10.7025 15.9571 10.8294 15.8351C10.9563 15.7132 11.0446 15.5567 11.0833 15.385C11.122 15.2133 11.1094 15.034 11.047 14.8694C10.9846 14.7048 10.8753 14.5622 10.7325 14.4593C10.5898 14.3563 10.4199 14.2976 10.2441 14.2904C10.124 14.287 10.0044 14.3074 9.89224 14.3505C9.78008 14.3935 9.67755 14.4584 9.59058 14.5413C9.50361 14.6242 9.43391 14.7234 9.38551 14.8334C9.33711 14.9434 9.31097 15.0618 9.30859 15.1819C9.30859 15.2411 9.33208 15.2978 9.37388 15.3395C9.41568 15.3813 9.47237 15.4048 9.53149 15.4048C9.5906 15.4048 9.64729 15.3813 9.68909 15.3395C9.73089 15.2978 9.75436 15.2411 9.75436 15.1819C9.75436 15.0925 9.78089 15.0051 9.83058 14.9307C9.88026 14.8564 9.95088 14.7984 10.0335 14.7642C10.1161 14.73 10.207 14.721 10.2947 14.7385C10.3825 14.7559 10.463 14.799 10.5263 14.8622C10.5895 14.9255 10.6326 15.006 10.65 15.0937C10.6674 15.1814 10.6585 15.2724 10.6243 15.355C10.5901 15.4376 10.5321 15.5082 10.4577 15.5579C10.3834 15.6076 10.296 15.6341 10.2065 15.6341C10.0866 15.6341 9.9716 15.5865 9.88681 15.5017C9.80201 15.4169 9.75436 15.3019 9.75436 15.1819C9.73599 14.9183 9.29023 14.9183 9.3094 15.1883Z' fill='#8254C6'/>\r\n<path d='M11.2257 14.2207C11.4012 14.4886 11.488 14.8051 11.4737 15.1251C11.4593 15.4452 11.3446 15.7526 11.1458 16.0038C10.9765 16.2298 11.3591 16.4495 11.5285 16.2298C11.7669 15.9106 11.9023 15.5261 11.9166 15.1279C11.9309 14.7296 11.8233 14.3365 11.6084 14.001C11.4574 13.7613 11.0747 14.001 11.2257 14.2271V14.2207Z' fill='#8254C6'/>\r\n<path d='M11.8848 13.825C12.1517 14.2107 12.2862 14.6725 12.268 15.1412C12.2499 15.6098 12.0801 16.0599 11.7842 16.4237C11.6084 16.6434 11.9224 16.9574 12.0981 16.7377C12.4624 16.3034 12.6758 15.7626 12.7063 15.1965C12.7369 14.6305 12.5829 14.0699 12.2675 13.5989C12.1109 13.3608 11.7283 13.5989 11.8848 13.825Z' fill='#8254C6'/>\r\n<path d='M12.4599 13.2858C12.7112 13.5267 12.9078 13.8187 13.0365 14.1421C13.1651 14.4655 13.2227 14.8128 13.2055 15.1604C13.1882 15.5081 13.0964 15.8479 12.9364 16.157C12.7763 16.4661 12.5517 16.7371 12.2778 16.9519C12.0581 17.134 12.372 17.448 12.5917 17.2658C12.9062 17.0091 13.1628 16.6887 13.3446 16.3257C13.5264 15.9627 13.6293 15.5653 13.6465 15.1597C13.6637 14.7541 13.5949 14.3495 13.4445 13.9724C13.2941 13.5953 13.0655 13.2543 12.7739 12.9719C12.7319 12.9321 12.676 12.9104 12.6182 12.9112C12.5603 12.912 12.5051 12.9353 12.4642 12.9762C12.4233 13.0171 12.4 13.0723 12.3992 13.1301C12.3984 13.188 12.4202 13.2438 12.4599 13.2858Z' fill='#8254C6'/>\r\n<path d='M8.86418 13.8943C8.6492 14.2299 8.54167 14.623 8.55595 15.0212C8.57022 15.4195 8.70562 15.8039 8.94407 16.1232C9.11343 16.3493 9.49688 16.1232 9.32672 15.8971C9.12791 15.6459 9.0132 15.3385 8.99886 15.0185C8.98452 14.6984 9.07129 14.382 9.24684 14.114C9.39783 13.8744 9.01437 13.6491 8.86418 13.8879V13.8943Z' fill='#8254C6'/>\r\n<path d='M8.20436 13.4996C7.88898 13.9706 7.73498 14.5312 7.76552 15.0972C7.79606 15.6632 8.00948 16.204 8.37371 16.6384C8.54946 16.8644 8.86342 16.5441 8.68767 16.3244C8.39178 15.9605 8.222 15.5105 8.20385 15.0418C8.18569 14.5732 8.32015 14.1113 8.58701 13.7257C8.74439 13.4876 8.36094 13.2615 8.20436 13.4996Z' fill='#8254C6'/>\r\n<path d='M7.69529 12.8713C7.4026 13.1531 7.17312 13.494 7.02205 13.8712C6.87099 14.2484 6.80176 14.6533 6.81898 15.0593C6.8362 15.4653 6.93947 15.8629 7.12194 16.226C7.30441 16.589 7.56192 16.9092 7.87743 17.1652C8.09712 17.3474 8.41107 17.0334 8.19138 16.8513C7.91744 16.6366 7.69285 16.3655 7.5328 16.0564C7.37274 15.7473 7.28098 15.4075 7.26371 15.0598C7.24643 14.7122 7.30407 14.3649 7.43269 14.0415C7.56132 13.7181 7.75793 13.4261 8.00924 13.1853C8.04898 13.1432 8.07077 13.0874 8.06997 13.0296C8.06916 12.9717 8.04584 12.9165 8.00495 12.8756C7.96405 12.8347 7.90882 12.8114 7.85099 12.8106C7.79316 12.8098 7.7373 12.8316 7.69529 12.8713Z' fill='#8254C6'/>\r\n<path d='M15.6549 30.3195C15.655 30.4916 15.7057 30.6599 15.8007 30.8034C15.8956 30.947 16.0306 31.0595 16.1889 31.127C16.3472 31.1945 16.5219 31.214 16.6912 31.1832C16.8605 31.1523 17.017 31.0724 17.1413 30.9534C17.2656 30.8344 17.3523 30.6815 17.3905 30.5137C17.4287 30.3459 17.4167 30.1706 17.3562 30.0095C17.2956 29.8484 17.1891 29.7086 17.0499 29.6075C16.9106 29.5064 16.7447 29.4484 16.5728 29.4408C16.4546 29.4376 16.3371 29.4578 16.2268 29.5004C16.1166 29.5429 16.0158 29.6069 15.9305 29.6886C15.8451 29.7704 15.7768 29.8682 15.7295 29.9765C15.6822 30.0848 15.6568 30.2014 15.6549 30.3195C15.6549 30.3776 15.6779 30.4332 15.719 30.4743C15.76 30.5153 15.8157 30.5384 15.8738 30.5384C15.9318 30.5384 15.9875 30.5153 16.0285 30.4743C16.0696 30.4332 16.0926 30.3776 16.0926 30.3195C16.0926 30.2318 16.1186 30.1461 16.1674 30.0732C16.2161 30.0003 16.2853 29.9434 16.3663 29.9099C16.4474 29.8763 16.5365 29.8676 16.6225 29.8847C16.7085 29.9018 16.7875 29.944 16.8495 30.006C16.9115 30.068 16.9538 30.147 16.9709 30.233C16.988 30.319 16.9792 30.4082 16.9456 30.4892C16.9121 30.5702 16.8553 30.6395 16.7823 30.6882C16.7094 30.7369 16.6237 30.7629 16.536 30.7629C16.4184 30.7629 16.3057 30.7162 16.2225 30.633C16.1394 30.5499 16.0926 30.4371 16.0926 30.3195C16.0735 30.0567 15.6365 30.0567 15.6549 30.3195Z' fill='#8254C6'/>\r\n<path d='M17.5315 29.3735C17.7038 29.6367 17.7887 29.9474 17.7744 30.2616C17.7601 30.5758 17.6471 30.8775 17.4517 31.1238C17.2855 31.3459 17.661 31.5616 17.8279 31.3459C18.0622 31.0326 18.1955 30.6553 18.2097 30.2643C18.224 29.8734 18.1187 29.4873 17.9078 29.1578C17.76 28.9237 17.3838 29.1578 17.5315 29.3799V29.3735Z' fill='#8254C6'/>\r\n<path d='M18.1803 28.9851C18.4425 29.3636 18.5747 29.8171 18.557 30.2773C18.5393 30.7374 18.3726 31.1794 18.0821 31.5367C17.9095 31.7524 18.2179 32.0607 18.3904 31.845C18.748 31.4187 18.9575 30.8878 18.9874 30.3321C19.0174 29.7765 18.8662 29.2261 18.5566 28.7638C18.4016 28.5289 18.0261 28.763 18.1803 28.9851Z' fill='#8254C6'/>\r\n<path d='M18.7483 28.4551C18.995 28.6915 19.1881 28.9781 19.3144 29.2956C19.4407 29.6131 19.4972 29.9541 19.4803 30.2954C19.4633 30.6367 19.3732 30.9703 19.216 31.2737C19.0589 31.5771 18.8383 31.8432 18.5694 32.054C18.3537 32.2329 18.662 32.5405 18.8777 32.3624C19.1867 32.1104 19.4387 31.7959 19.6173 31.4395C19.7959 31.0832 19.897 30.693 19.9139 30.2947C19.9308 29.8964 19.8632 29.4991 19.7154 29.1289C19.5676 28.7586 19.3431 28.4239 19.0567 28.1467C19.0155 28.1072 18.9605 28.0854 18.9034 28.0859C18.8463 28.0865 18.7918 28.1095 18.7514 28.1498C18.7111 28.1902 18.6881 28.2447 18.6876 28.3018C18.687 28.3589 18.7088 28.4139 18.7483 28.4551Z' fill='#8254C6'/>\r\n<path d='M15.2172 29.0531C15.0064 29.3827 14.9011 29.7687 14.9153 30.1597C14.9296 30.5507 15.0628 30.928 15.2971 31.2413C15.4633 31.4634 15.8396 31.2413 15.6734 31.0192C15.478 30.7727 15.3652 30.4711 15.3508 30.1569C15.3365 29.8428 15.4214 29.5321 15.5935 29.2688C15.7413 29.0348 15.3658 28.8127 15.2172 29.0468V29.0531Z' fill='#8254C6'/>\r\n<path d='M14.5693 28.6625C14.2597 29.1248 14.1085 29.6752 14.1385 30.2308C14.1685 30.7864 14.378 31.3173 14.7355 31.7437C14.9081 31.9658 15.2148 31.651 15.0439 31.4354C14.7533 31.0781 14.5867 30.6361 14.5689 30.1759C14.5512 29.7158 14.6834 29.2623 14.9456 28.8837C15.099 28.6529 14.7219 28.4308 14.5693 28.6625Z' fill='#8254C6'/>\r\n<path d='M14.07 28.049C13.7826 28.3257 13.5573 28.6603 13.4089 29.0307C13.2606 29.401 13.1926 29.7986 13.2096 30.1972C13.2265 30.5958 13.3279 30.9862 13.5071 31.3427C13.6863 31.6991 13.9392 32.0134 14.249 32.2647C14.4647 32.4437 14.773 32.1353 14.5573 31.9563C14.2884 31.7456 14.0678 31.4795 13.9107 31.1761C13.7535 30.8726 13.6634 30.539 13.6464 30.1977C13.6295 29.8564 13.686 29.5155 13.8123 29.198C13.9386 28.8805 14.1317 28.5938 14.3784 28.3574C14.4179 28.3162 14.4397 28.2612 14.4392 28.2041C14.4386 28.1471 14.4156 28.0925 14.3753 28.0522C14.3349 28.0118 14.2804 27.9889 14.2233 27.9883C14.1662 27.9877 14.1112 28.0095 14.07 28.049Z' fill='#8254C6'/>\r\n<path d='M27.526 12.863C27.5261 13.0442 27.5795 13.2214 27.6796 13.3726C27.7796 13.5238 27.9218 13.6422 28.0886 13.7132C28.2554 13.7843 28.4393 13.8047 28.6176 13.7721C28.7959 13.7395 28.9607 13.6552 29.0915 13.5297C29.2223 13.4042 29.3134 13.243 29.3534 13.0662C29.3934 12.8894 29.3805 12.7048 29.3165 12.5352C29.2524 12.3656 29.14 12.2186 28.9931 12.1124C28.8462 12.0062 28.6713 11.9455 28.4902 11.9379C28.3665 11.9345 28.2433 11.9556 28.1277 12C28.0122 12.0444 27.9066 12.1112 27.8169 12.1966C27.7273 12.282 27.6555 12.3842 27.6055 12.4975C27.5556 12.6108 27.5286 12.7328 27.526 12.8566C27.5294 12.9151 27.5551 12.9702 27.5978 13.0104C27.6405 13.0507 27.697 13.0731 27.7556 13.0731C27.8143 13.0731 27.8708 13.0507 27.9135 13.0104C27.9562 12.9702 27.9819 12.9151 27.9853 12.8566C27.9853 12.7644 28.0126 12.6744 28.0638 12.5978C28.115 12.5212 28.1877 12.4615 28.2728 12.4263C28.3579 12.391 28.4516 12.3818 28.5419 12.3998C28.6323 12.4177 28.7153 12.4621 28.7804 12.5272C28.8455 12.5924 28.8899 12.6754 28.9079 12.7657C28.9258 12.856 28.9166 12.9497 28.8814 13.0348C28.8461 13.1199 28.7864 13.1926 28.7098 13.2438C28.6332 13.295 28.5432 13.3223 28.4511 13.3223C28.3276 13.3223 28.2091 13.2732 28.1217 13.1859C28.0344 13.0985 27.9853 12.9801 27.9853 12.8566C27.9662 12.5849 27.5068 12.5849 27.526 12.863Z' fill='#8254C6'/>\r\n<path d='M29.5007 11.8682C29.6813 12.1445 29.7703 12.4707 29.7553 12.8004C29.7402 13.1302 29.6218 13.4469 29.4168 13.7056C29.2418 13.9389 29.6365 14.165 29.8114 13.9389C30.0574 13.6099 30.1972 13.2137 30.2122 12.8032C30.2272 12.3927 30.1167 11.9874 29.8953 11.6413C29.7403 11.3953 29.3449 11.6413 29.5007 11.8746V11.8682Z' fill='#8254C6'/>\r\n<path d='M30.1788 11.4605C30.4533 11.8584 30.5916 12.3345 30.5729 12.8175C30.5541 13.3005 30.3794 13.7645 30.0749 14.1399C29.8936 14.3668 30.2171 14.6904 30.3985 14.4635C30.7742 14.0158 30.9943 13.4582 31.0259 12.8746C31.0574 12.2909 30.8987 11.7129 30.5734 11.2272C30.4121 10.9812 30.0166 11.2272 30.1788 11.4605Z' fill='#8254C6'/>\r\n<path d='M30.7746 10.9038C31.0337 11.1521 31.2364 11.4531 31.369 11.7865C31.5016 12.12 31.5611 12.478 31.5432 12.8364C31.5254 13.1948 31.4308 13.5452 31.2658 13.8638C31.1008 14.1825 30.8693 14.4619 30.5868 14.6833C30.36 14.871 30.6843 15.1946 30.9104 15.0068C31.2347 14.7423 31.4994 14.412 31.6869 14.0378C31.8744 13.6636 31.9805 13.2539 31.9982 12.8357C32.016 12.4175 31.9449 12.0003 31.7898 11.6116C31.6346 11.2228 31.3989 10.8713 31.0981 10.5803C31.0544 10.5419 30.9976 10.5216 30.9395 10.5236C30.8813 10.5255 30.826 10.5494 30.7849 10.5906C30.7437 10.6317 30.7198 10.687 30.7179 10.7452C30.7159 10.8033 30.7362 10.8601 30.7746 10.9038Z' fill='#8254C6'/>\r\n<path d='M27.0663 11.53C26.8449 11.876 26.7344 12.2813 26.7494 12.6918C26.7644 13.1024 26.9042 13.4985 27.1502 13.8275C27.3251 14.0608 27.7198 13.8275 27.5448 13.5943C27.3398 13.3355 27.2214 13.0189 27.2063 12.6891C27.1913 12.3593 27.2804 12.0332 27.4609 11.7568C27.6159 11.5108 27.2213 11.2775 27.0663 11.5236V11.53Z' fill='#8254C6'/>\r\n<path d='M26.388 11.1226C26.0628 11.6082 25.904 12.1863 25.9356 12.7699C25.9671 13.3535 26.1873 13.9111 26.563 14.3588C26.7443 14.5921 27.0679 14.2614 26.8865 14.0353C26.5818 13.6598 26.407 13.1957 26.3883 12.7125C26.3696 12.2293 26.5079 11.753 26.7827 11.3551C26.9448 11.1098 26.5502 10.8757 26.388 11.1226Z' fill='#8254C6'/>\r\n<path d='M25.8619 10.4758C25.5599 10.7662 25.3232 11.1175 25.1673 11.5064C25.0114 11.8952 24.94 12.3128 24.9577 12.7314C24.9755 13.15 25.082 13.56 25.2703 13.9343C25.4585 14.3085 25.7242 14.6385 26.0496 14.9023C26.2765 15.0901 26.6 14.7665 26.3732 14.5788C26.0907 14.3574 25.8592 14.078 25.6942 13.7593C25.5292 13.4407 25.4346 13.0903 25.4168 12.7319C25.399 12.3735 25.4584 12.0155 25.591 11.6821C25.7236 11.3486 25.9263 11.0476 26.1854 10.7993C26.2238 10.7556 26.2441 10.6988 26.2421 10.6407C26.2402 10.5825 26.2163 10.5272 26.1751 10.4861C26.134 10.4449 26.0787 10.421 26.0205 10.4191C25.9624 10.4172 25.9057 10.4374 25.8619 10.4758Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "back_ache",
              meaning: "\u06a9\u0645\u0631\u062f\u0631\u062f",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M9.58531 35.2153V35.2946H10.3345C9.87717 33.9016 9.54291 32.4712 9.33558 31.0198C8.80598 27.2143 9.33557 24.2485 10.9933 21.6814C12.2295 19.8647 13.0605 17.8034 13.4298 15.6373C13.7992 13.4712 13.6982 11.251 13.1339 9.12729C12.865 8.25216 12.5033 7.4083 12.0549 6.61014L11.6854 5.87124C11.6854 5.79196 11.4754 5.73171 11.3255 5.68176H11.2256V5.76104C11.1893 5.95594 11.1629 6.15254 11.1463 6.3501L11.2066 6.43969L11.2764 6.53958C12.3326 8.44243 12.9044 10.576 12.9413 12.752C12.9415 15.8033 12.0528 18.7885 10.3837 21.3428C8.71413 23.9035 8.03957 26.9867 8.48727 30.0106C8.73111 31.769 9.09802 33.5082 9.58531 35.2153Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M28.7407 21.8226C29.8828 23.6138 30.4956 25.6911 30.5087 27.8154C30.5397 30.3117 30.1412 32.7947 29.3306 35.156H29.9799C30.2899 34.157 30.5888 33.2287 30.8187 32.2599C31.362 30.3434 31.4853 28.3322 31.1802 26.3638C30.8751 24.3953 30.1487 22.5158 29.0507 20.8538C27.6085 18.6253 26.8197 16.0372 26.7738 13.3832C26.6754 10.9441 27.2515 8.52512 28.4387 6.39221C28.4953 6.19644 28.4953 5.98863 28.4387 5.79285C28.4359 5.74638 28.4359 5.69979 28.4387 5.65332H28.3784C28.1786 5.77303 27.982 5.90305 27.7894 6.04259C27.7586 6.07758 27.7349 6.11824 27.7196 6.1623V6.26219C26.4798 8.50062 25.9145 11.0501 26.092 13.6028C26.2088 16.5326 27.1239 19.3749 28.7384 21.8226H28.7407Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M14.6298 28.873C15.2463 29.0722 15.8894 29.1768 16.5373 29.183C17.175 29.1836 17.8088 29.0825 18.4146 28.8833C18.6003 28.8113 18.7956 28.7675 18.9942 28.7533C19.4437 28.7533 19.4437 29.2028 19.4437 29.6119V35.1948H20.2428V29.9036C20.2154 29.6313 20.2154 29.357 20.2428 29.0847C20.2558 28.9925 20.3032 28.9086 20.3753 28.8498C20.4475 28.791 20.5392 28.7616 20.6321 28.7675C20.8866 28.7899 21.1378 28.8402 21.3813 28.9174H21.501C22.0481 29.0654 22.6119 29.1426 23.1786 29.1473C23.8611 29.155 24.5388 29.0329 25.1757 28.7874C25.2454 28.7874 25.3152 28.6177 25.3858 28.4877L25.4357 28.3775H25.366C25.2698 28.2998 25.1569 28.2455 25.0361 28.2189H24.8966C24.6504 28.2238 24.4057 28.2573 24.1672 28.3188C23.8006 28.4053 23.4252 28.4489 23.0486 28.4488C22.0746 28.4391 21.1282 28.1247 20.3419 27.5498C20.2073 27.4452 20.043 27.3858 19.8726 27.3801C19.6613 27.3977 19.4583 27.4701 19.2836 27.5902V27.5902C18.7719 27.927 18.198 28.158 17.5957 28.2697C17.3828 28.2803 17.1695 28.2803 16.9567 28.2697H14.8954C14.7398 28.2872 14.59 28.3383 14.4562 28.4195H14.3698L14.4395 28.5297C14.4387 28.5985 14.4558 28.6663 14.4892 28.7265C14.5225 28.7867 14.571 28.8372 14.6298 28.873V28.873Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M20.0309 15.3806H19.9516C19.8534 15.2923 19.7737 15.1854 19.7171 15.066C19.6605 14.9467 19.6281 14.8173 19.6218 14.6853C19.6218 11.5989 19.6218 8.47291 19.6218 5.37701C19.633 5.2458 19.6717 5.11842 19.7354 5.00314C19.799 4.88786 19.8862 4.78726 19.9913 4.70789H20.0912C20.3211 4.70789 20.4083 4.88785 20.4083 5.38732V9.9618V14.7012C20.3512 15.1206 20.3013 15.3806 20.0309 15.3806Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M11.8421 15.131C11.7866 15.1316 11.7318 15.1181 11.6829 15.092C11.634 15.0658 11.5925 15.0277 11.5622 14.9812L10.8431 13.8625L10.5538 14.3818C10.5251 14.4334 10.4832 14.4763 10.4323 14.5062C10.3814 14.536 10.3234 14.5516 10.2644 14.5515V14.5515C10.2066 14.5518 10.1498 14.5375 10.0991 14.5097C10.0485 14.482 10.0058 14.4418 9.97501 14.3929L8.92613 12.6249C8.89069 12.5906 8.86315 12.549 8.84546 12.5029C8.82776 12.4568 8.82032 12.4075 8.82365 12.3582C8.82699 12.309 8.84103 12.2611 8.86478 12.2178C8.88853 12.1746 8.92143 12.1371 8.96119 12.1078C9.00094 12.0786 9.04659 12.0584 9.09496 12.0486C9.14332 12.0388 9.19324 12.0397 9.24123 12.0512C9.28921 12.0627 9.33412 12.0845 9.3728 12.1151C9.41149 12.1458 9.44304 12.1845 9.46524 12.2285L10.2446 13.5168L10.5244 13.0174C10.5453 12.9792 10.5735 12.9456 10.6074 12.9184C10.6414 12.8911 10.6804 12.8709 10.7221 12.8588C10.7639 12.8467 10.8077 12.843 10.8509 12.8479C10.8941 12.8528 10.9359 12.8662 10.9739 12.8874V12.8874C11.0222 12.9138 11.0633 12.9517 11.0937 12.9976L12.0926 14.5832C12.1165 14.6198 12.1329 14.6608 12.1408 14.7037C12.1487 14.7467 12.148 14.7909 12.1387 14.8336C12.1294 14.8763 12.1117 14.9167 12.0866 14.9525C12.0616 14.9884 12.0296 15.0188 11.9927 15.0422H11.9253L11.8421 15.131Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.2' stroke-miterlimit='10'/>\r\n<path d='M28.0912 15.0804C28.0133 15.0807 27.9377 15.0543 27.877 15.0055C27.8164 14.9567 27.7743 14.8885 27.7579 14.8123C27.7416 14.7362 27.7519 14.6568 27.7872 14.5873C27.8225 14.5179 27.8805 14.4627 27.9517 14.4311L29.1599 13.8816L28.6906 13.5217C28.6439 13.4858 28.6073 13.4384 28.5845 13.3841C28.5617 13.3298 28.5534 13.2705 28.5604 13.2121C28.5674 13.1536 28.5896 13.098 28.6246 13.0507C28.6597 13.0033 28.7065 12.9659 28.7603 12.9422L30.6583 12.1494C30.7396 12.1171 30.8302 12.1174 30.9113 12.1502C30.9924 12.1829 31.0577 12.2457 31.0938 12.3254C31.1298 12.4051 31.1337 12.4956 31.1047 12.5781C31.0758 12.6607 31.0161 12.7289 30.9382 12.7686L29.55 13.3774L30.009 13.7271C30.0537 13.7626 30.0886 13.8088 30.1106 13.8615C30.1327 13.9141 30.1411 13.9715 30.1351 14.0282C30.1291 14.0849 30.1088 14.1393 30.0763 14.1861C30.0437 14.233 29.9999 14.2709 29.9488 14.2963L28.2308 15.0891C28.184 15.0957 28.1365 15.0922 28.0912 15.0788V15.0804Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.2' stroke-miterlimit='10'/>\r\n<path d='M18.9975 19.9506C19.0075 20.2375 19.1024 20.5149 19.2701 20.7479C19.4379 20.9809 19.6709 21.159 19.9398 21.2596C20.2087 21.3601 20.5013 21.3787 20.7808 21.313C21.0603 21.2473 21.314 21.1002 21.5098 20.8903C21.7057 20.6805 21.835 20.4172 21.8813 20.1339C21.9276 19.8506 21.8889 19.5599 21.77 19.2986C21.6511 19.0373 21.4575 18.817 21.2135 18.6658C20.9695 18.5145 20.6861 18.439 20.3992 18.4487C20.2085 18.4552 20.021 18.4992 19.8473 18.5782C19.6736 18.6572 19.5172 18.7696 19.387 18.9091C19.2569 19.0486 19.1555 19.2124 19.0886 19.3911C19.0218 19.5698 18.9908 19.7599 18.9975 19.9506C19.0008 20.0451 19.0415 20.1344 19.1107 20.1989C19.1799 20.2634 19.2718 20.2978 19.3664 20.2945C19.4609 20.2912 19.5502 20.2504 19.6147 20.1813C19.6792 20.1121 19.7136 20.0201 19.7103 19.9256C19.7275 19.7472 19.8089 19.5812 19.9394 19.4585C20.0699 19.3357 20.2406 19.2646 20.4196 19.2583C20.5987 19.252 20.7739 19.311 20.9127 19.4244C21.0514 19.5377 21.1443 19.6976 21.1739 19.8743C21.1567 20.0526 21.0753 20.2187 20.9448 20.3414C20.8143 20.4642 20.6436 20.5353 20.4646 20.5416C20.2855 20.5479 20.1103 20.4888 19.9715 20.3755C19.8328 20.2622 19.7399 20.1023 19.7103 19.9256C19.6705 19.4686 18.9446 19.4814 18.9975 19.9506Z' fill='#8254C6'/>\r\n<path d='M22.0515 18.2638C22.3501 18.689 22.5071 19.1976 22.5001 19.7172C22.4931 20.2368 22.3225 20.7409 22.0125 21.158C21.7451 21.5369 22.3817 21.8714 22.6491 21.4925C23.0205 20.9627 23.2209 20.3318 23.2233 19.6848C23.2257 19.0377 23.0301 18.4055 22.6626 17.8728C22.4072 17.4853 21.797 17.9032 22.051 18.2511L22.0515 18.2638Z' fill='#8254C6'/>\r\n<path d='M23.1008 17.5895C23.5557 18.1992 23.8006 18.9401 23.7987 19.7008C23.7967 20.4616 23.5481 21.2012 23.09 21.8086C22.8221 22.1748 23.3366 22.6666 23.6171 22.3C24.1841 21.5748 24.4998 20.6848 24.5165 19.7644C24.5331 18.844 24.2499 17.9431 23.7096 17.1978C23.4412 16.825 22.8439 17.2282 23.1004 17.5768L23.1008 17.5895Z' fill='#8254C6'/>\r\n<path d='M23.9956 16.6657C24.4178 17.0412 24.7541 17.5031 24.9819 18.0202C25.2096 18.5372 25.3234 19.0972 25.3155 19.6621C25.3076 20.227 25.1782 20.7835 24.9361 21.2939C24.694 21.8042 24.3448 22.2565 23.9124 22.62C23.5631 22.9256 24.0927 23.4193 24.4419 23.1113C24.9371 22.6772 25.3348 22.143 25.6086 21.544C25.8824 20.9451 26.0263 20.2949 26.0306 19.6363C26.0351 18.9773 25.8999 18.3249 25.6338 17.722C25.3678 17.1191 24.9769 16.5794 24.487 16.1386C24.1578 15.8187 23.6664 16.3458 23.9956 16.6657Z' fill='#8254C6'/>\r\n<path d='M18.2125 17.874C17.8831 18.4311 17.7321 19.0757 17.7798 19.7212C17.8275 20.3667 18.0716 20.982 18.4794 21.4847C18.7727 21.8439 19.3831 21.453 19.091 21.1064C18.7525 20.7121 18.5469 20.2212 18.5034 19.7034C18.4599 19.1856 18.5808 18.6672 18.8488 18.2221C19.09 17.8187 18.4534 17.4842 18.213 17.8875L18.2125 17.874Z' fill='#8254C6'/>\r\n<path d='M17.1708 17.261C16.6835 18.042 16.4635 18.9603 16.5439 19.8772C16.6244 20.7942 17.001 21.6602 17.6169 22.3443C17.9225 22.6904 18.4036 22.1637 18.1084 21.8172C17.6096 21.2428 17.3106 20.5221 17.2563 19.7633C17.202 19.0046 17.3953 18.2486 17.8071 17.6091C18.0475 17.2041 17.4117 16.8712 17.1705 17.2745L17.1708 17.261Z' fill='#8254C6'/>\r\n<path d='M16.2595 16.273C15.8018 16.747 15.4498 17.3128 15.2268 17.9328C15.0037 18.5529 14.9146 19.2132 14.9653 19.8702C15.016 20.5272 15.2055 21.166 15.5211 21.7445C15.8368 22.3229 16.2715 22.8279 16.7966 23.2261C17.1632 23.5066 17.6546 22.9795 17.288 22.699C16.8307 22.367 16.4503 21.9404 16.1726 21.4483C15.8949 20.9562 15.7264 20.4101 15.6785 19.8471C15.6307 19.2841 15.7046 18.7174 15.8952 18.1854C16.0859 17.6535 16.3888 17.1689 16.7835 16.7645C17.0903 16.4223 16.5758 15.9304 16.2595 16.273Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "nausea",
              meaning: "\u062d\u0627\u0644\u062a \u062a\u0647\u0648\u0639",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M9.58531 35.2153V35.2946H10.3345C9.87717 33.9016 9.54291 32.4712 9.33558 31.0198C8.80598 27.2143 9.33557 24.2485 10.9933 21.6814C12.2295 19.8647 13.0605 17.8034 13.4298 15.6373C13.7992 13.4712 13.6982 11.251 13.1339 9.12729C12.865 8.25216 12.5033 7.4083 12.0549 6.61014L11.6854 5.87124C11.6854 5.79196 11.4754 5.73171 11.3255 5.68176H11.2256V5.76104C11.1893 5.95594 11.1629 6.15254 11.1463 6.3501L11.2066 6.43969L11.2764 6.53958C12.3326 8.44243 12.9044 10.576 12.9413 12.752C12.9415 15.8033 12.0528 18.7885 10.3837 21.3428C8.71413 23.9035 8.03957 26.9867 8.48727 30.0106C8.73111 31.769 9.09802 33.5082 9.58531 35.2153Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M28.7407 21.8226C29.8828 23.6138 30.4956 25.6911 30.5087 27.8154C30.5397 30.3117 30.1412 32.7947 29.3306 35.156H29.9799C30.2899 34.157 30.5888 33.2287 30.8187 32.2599C31.362 30.3434 31.4853 28.3322 31.1802 26.3638C30.8751 24.3953 30.1487 22.5158 29.0507 20.8538C27.6085 18.6253 26.8197 16.0372 26.7738 13.3832C26.6754 10.9441 27.2515 8.52512 28.4387 6.39221C28.4953 6.19644 28.4953 5.98863 28.4387 5.79285C28.4359 5.74638 28.4359 5.69979 28.4387 5.65332H28.3784C28.1786 5.77303 27.982 5.90305 27.7894 6.04259C27.7586 6.07758 27.7349 6.11824 27.7196 6.1623V6.26219C26.4798 8.50062 25.9145 11.0501 26.092 13.6028C26.2088 16.5326 27.1239 19.3749 28.7384 21.8226H28.7407Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M14.6298 28.873C15.2463 29.0722 15.8894 29.1768 16.5373 29.183C17.175 29.1836 17.8088 29.0825 18.4146 28.8833C18.6003 28.8113 18.7956 28.7675 18.9942 28.7533C19.4437 28.7533 19.4437 29.2028 19.4437 29.6119V35.1948H20.2428V29.9036C20.2154 29.6313 20.2154 29.357 20.2428 29.0847C20.2558 28.9925 20.3032 28.9086 20.3753 28.8498C20.4475 28.791 20.5392 28.7616 20.6321 28.7675C20.8866 28.7899 21.1378 28.8402 21.3813 28.9174H21.501C22.0481 29.0654 22.6119 29.1426 23.1786 29.1473C23.8611 29.155 24.5388 29.0329 25.1757 28.7874C25.2454 28.7874 25.3152 28.6177 25.3858 28.4877L25.4357 28.3775H25.366C25.2698 28.2998 25.1569 28.2455 25.0361 28.2189H24.8966C24.6504 28.2238 24.4057 28.2573 24.1672 28.3188C23.8006 28.4053 23.4252 28.4489 23.0486 28.4488C22.0746 28.4391 21.1282 28.1247 20.3419 27.5498C20.2073 27.4452 20.043 27.3858 19.8726 27.3801C19.6613 27.3977 19.4583 27.4701 19.2836 27.5902V27.5902C18.7719 27.927 18.198 28.158 17.5957 28.2697C17.3828 28.2803 17.1695 28.2803 16.9567 28.2697H14.8954C14.7398 28.2872 14.59 28.3383 14.4562 28.4195H14.3698L14.4395 28.5297C14.4387 28.5985 14.4558 28.6663 14.4892 28.7265C14.5225 28.7867 14.571 28.8372 14.6298 28.873V28.873Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M20.0309 15.3806H19.9516C19.8534 15.2923 19.7737 15.1854 19.7171 15.066C19.6605 14.9467 19.6281 14.8173 19.6218 14.6853C19.6218 11.5989 19.6218 8.47291 19.6218 5.37701C19.633 5.2458 19.6717 5.11842 19.7354 5.00314C19.799 4.88786 19.8862 4.78726 19.9913 4.70789H20.0912C20.3211 4.70789 20.4083 4.88785 20.4083 5.38732V9.9618V14.7012C20.3512 15.1206 20.3013 15.3806 20.0309 15.3806Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.4' stroke-miterlimit='10'/>\r\n<path d='M11.8421 15.131C11.7866 15.1316 11.7318 15.1181 11.6829 15.092C11.634 15.0658 11.5925 15.0277 11.5622 14.9812L10.8431 13.8625L10.5538 14.3818C10.5251 14.4334 10.4832 14.4763 10.4323 14.5062C10.3814 14.536 10.3234 14.5516 10.2644 14.5515V14.5515C10.2066 14.5518 10.1498 14.5375 10.0991 14.5097C10.0485 14.482 10.0058 14.4418 9.97501 14.3929L8.92613 12.6249C8.89069 12.5906 8.86315 12.549 8.84546 12.5029C8.82776 12.4568 8.82032 12.4075 8.82365 12.3582C8.82699 12.309 8.84103 12.2611 8.86478 12.2178C8.88853 12.1746 8.92143 12.1371 8.96119 12.1078C9.00094 12.0786 9.04659 12.0584 9.09496 12.0486C9.14332 12.0388 9.19324 12.0397 9.24123 12.0512C9.28921 12.0627 9.33412 12.0845 9.3728 12.1151C9.41149 12.1458 9.44304 12.1845 9.46524 12.2285L10.2446 13.5168L10.5244 13.0174C10.5453 12.9792 10.5735 12.9456 10.6074 12.9184C10.6414 12.8911 10.6804 12.8709 10.7221 12.8588C10.7639 12.8467 10.8077 12.843 10.8509 12.8479C10.8941 12.8528 10.9359 12.8662 10.9739 12.8874V12.8874C11.0222 12.9138 11.0633 12.9517 11.0937 12.9976L12.0926 14.5832C12.1165 14.6198 12.1329 14.6608 12.1408 14.7037C12.1487 14.7467 12.148 14.7909 12.1387 14.8336C12.1294 14.8763 12.1117 14.9167 12.0866 14.9525C12.0616 14.9884 12.0296 15.0188 11.9927 15.0422H11.9253L11.8421 15.131Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.2' stroke-miterlimit='10'/>\r\n<path d='M28.0912 15.0804C28.0133 15.0807 27.9377 15.0543 27.877 15.0055C27.8164 14.9567 27.7743 14.8885 27.7579 14.8123C27.7416 14.7362 27.7519 14.6568 27.7872 14.5873C27.8225 14.5179 27.8805 14.4627 27.9517 14.4311L29.1599 13.8816L28.6906 13.5217C28.6439 13.4858 28.6073 13.4384 28.5845 13.3841C28.5617 13.3298 28.5534 13.2705 28.5604 13.2121C28.5674 13.1536 28.5896 13.098 28.6246 13.0507C28.6597 13.0033 28.7065 12.9659 28.7603 12.9422L30.6583 12.1494C30.7396 12.1171 30.8302 12.1174 30.9113 12.1502C30.9924 12.1829 31.0577 12.2457 31.0938 12.3254C31.1298 12.4051 31.1337 12.4956 31.1047 12.5781C31.0758 12.6607 31.0161 12.7289 30.9382 12.7686L29.55 13.3774L30.009 13.7271C30.0537 13.7626 30.0886 13.8088 30.1106 13.8615C30.1327 13.9141 30.1411 13.9715 30.1351 14.0282C30.1291 14.0849 30.1088 14.1393 30.0763 14.1861C30.0437 14.233 29.9999 14.2709 29.9488 14.2963L28.2308 15.0891C28.184 15.0957 28.1365 15.0922 28.0912 15.0788V15.0804Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.2' stroke-miterlimit='10'/>\r\n<path d='M18.9975 19.9506C19.0075 20.2375 19.1024 20.5149 19.2701 20.7479C19.4379 20.9809 19.6709 21.159 19.9398 21.2596C20.2087 21.3601 20.5013 21.3787 20.7808 21.313C21.0603 21.2473 21.314 21.1002 21.5098 20.8903C21.7057 20.6805 21.835 20.4172 21.8813 20.1339C21.9276 19.8506 21.8889 19.5599 21.77 19.2986C21.6511 19.0373 21.4575 18.817 21.2135 18.6658C20.9695 18.5145 20.6861 18.439 20.3992 18.4487C20.2085 18.4552 20.021 18.4992 19.8473 18.5782C19.6736 18.6572 19.5172 18.7696 19.387 18.9091C19.2569 19.0486 19.1555 19.2124 19.0886 19.3911C19.0218 19.5698 18.9908 19.7599 18.9975 19.9506C19.0008 20.0451 19.0415 20.1344 19.1107 20.1989C19.1799 20.2634 19.2718 20.2978 19.3664 20.2945C19.4609 20.2912 19.5502 20.2504 19.6147 20.1813C19.6792 20.1121 19.7136 20.0201 19.7103 19.9256C19.7275 19.7472 19.8089 19.5812 19.9394 19.4585C20.0699 19.3357 20.2406 19.2646 20.4196 19.2583C20.5987 19.252 20.7739 19.311 20.9127 19.4244C21.0514 19.5377 21.1443 19.6976 21.1739 19.8743C21.1567 20.0526 21.0753 20.2187 20.9448 20.3414C20.8143 20.4642 20.6436 20.5353 20.4646 20.5416C20.2855 20.5479 20.1103 20.4888 19.9715 20.3755C19.8328 20.2622 19.7399 20.1023 19.7103 19.9256C19.6705 19.4686 18.9446 19.4814 18.9975 19.9506Z' fill='#8254C6'/>\r\n<path d='M22.0515 18.2638C22.3501 18.689 22.5071 19.1976 22.5001 19.7172C22.4931 20.2368 22.3225 20.7409 22.0125 21.158C21.7451 21.5369 22.3817 21.8714 22.6491 21.4925C23.0205 20.9627 23.2209 20.3318 23.2233 19.6848C23.2257 19.0377 23.0301 18.4055 22.6626 17.8728C22.4072 17.4853 21.797 17.9032 22.051 18.2511L22.0515 18.2638Z' fill='#8254C6'/>\r\n<path d='M23.1008 17.5895C23.5557 18.1992 23.8006 18.9401 23.7987 19.7008C23.7967 20.4616 23.5481 21.2012 23.09 21.8086C22.8221 22.1748 23.3366 22.6666 23.6171 22.3C24.1841 21.5748 24.4998 20.6848 24.5165 19.7644C24.5331 18.844 24.2499 17.9431 23.7096 17.1978C23.4412 16.825 22.8439 17.2282 23.1004 17.5768L23.1008 17.5895Z' fill='#8254C6'/>\r\n<path d='M23.9956 16.6657C24.4178 17.0412 24.7541 17.5031 24.9819 18.0202C25.2096 18.5372 25.3234 19.0972 25.3155 19.6621C25.3076 20.227 25.1782 20.7835 24.9361 21.2939C24.694 21.8042 24.3448 22.2565 23.9124 22.62C23.5631 22.9256 24.0927 23.4193 24.4419 23.1113C24.9371 22.6772 25.3348 22.143 25.6086 21.544C25.8824 20.9451 26.0263 20.2949 26.0306 19.6363C26.0351 18.9773 25.8999 18.3249 25.6338 17.722C25.3678 17.1191 24.9769 16.5794 24.487 16.1386C24.1578 15.8187 23.6664 16.3458 23.9956 16.6657Z' fill='#8254C6'/>\r\n<path d='M18.2125 17.874C17.8831 18.4311 17.7321 19.0757 17.7798 19.7212C17.8275 20.3667 18.0716 20.982 18.4794 21.4847C18.7727 21.8439 19.3831 21.453 19.091 21.1064C18.7525 20.7121 18.5469 20.2212 18.5034 19.7034C18.4599 19.1856 18.5808 18.6672 18.8488 18.2221C19.09 17.8187 18.4534 17.4842 18.213 17.8875L18.2125 17.874Z' fill='#8254C6'/>\r\n<path d='M17.1708 17.261C16.6835 18.042 16.4635 18.9603 16.5439 19.8772C16.6244 20.7942 17.001 21.6602 17.6169 22.3443C17.9225 22.6904 18.4036 22.1637 18.1084 21.8172C17.6096 21.2428 17.3106 20.5221 17.2563 19.7633C17.202 19.0046 17.3953 18.2486 17.8071 17.6091C18.0475 17.2041 17.4117 16.8712 17.1705 17.2745L17.1708 17.261Z' fill='#8254C6'/>\r\n<path d='M16.2595 16.273C15.8018 16.747 15.4498 17.3128 15.2268 17.9328C15.0037 18.5529 14.9146 19.2132 14.9653 19.8702C15.016 20.5272 15.2055 21.166 15.5211 21.7445C15.8368 22.3229 16.2715 22.8279 16.7966 23.2261C17.1632 23.5066 17.6546 22.9795 17.288 22.699C16.8307 22.367 16.4503 21.9404 16.1726 21.4483C15.8949 20.9562 15.7264 20.4101 15.6785 19.8471C15.6307 19.2841 15.7046 18.7174 15.8952 18.1854C16.0859 17.6535 16.3888 17.1689 16.7835 16.7645C17.0903 16.4223 16.5758 15.9304 16.2595 16.273Z' fill='#8254C6'/>\r\n</svg>\r\n"
            }
          ],
          psychological: [
            {
              value: "anxiety",
              meaning: "\u0627\u0636\u0637\u0631\u0627\u0628",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M13 25.4335L15.3234 27.5665L18.1234 25L20.9234 27.5665L23.7234 25L27 28' stroke='#8254C6' stroke-width='1.5' stroke-linecap='round'/>\r\n<path d='M27.0323 18.3127C27.0323 17.9139 26.9141 17.5241 26.6925 17.1926C26.471 16.861 26.1561 16.6026 25.7877 16.45C25.4193 16.2974 25.0139 16.2575 24.6228 16.3352C24.2317 16.413 23.8725 16.6051 23.5905 16.887C23.3086 17.169 23.1165 17.5282 23.0387 17.9193C22.9609 18.3104 23.0009 18.7158 23.1535 19.0842C23.3061 19.4526 23.5645 19.7675 23.896 19.9891C24.2276 20.2106 24.6174 20.3288 25.0162 20.3288C25.5507 20.3284 26.0633 20.1158 26.4413 19.7378C26.8193 19.3598 27.0318 18.8472 27.0323 18.3127ZM24.345 18.3127C24.345 18.1797 24.3844 18.0498 24.4583 17.9393C24.5321 17.8288 24.6371 17.7426 24.7599 17.6918C24.8827 17.6409 25.0178 17.6276 25.1482 17.6535C25.2785 17.6795 25.3983 17.7435 25.4923 17.8375C25.5863 17.9314 25.6503 18.0512 25.6762 18.1816C25.7021 18.3119 25.6888 18.4471 25.6379 18.5699C25.5871 18.6927 25.5009 18.7976 25.3904 18.8715C25.2799 18.9453 25.15 18.9847 25.0171 18.9847C24.8389 18.9845 24.6681 18.9136 24.5421 18.7876C24.4161 18.6616 24.3452 18.4908 24.345 18.3127V18.3127Z' fill='#8254C6'/>\r\n<path d='M20.4554 5C17.3988 4.99982 14.4107 5.90607 11.8691 7.60413C9.32751 9.30219 7.34652 11.7158 6.17667 14.5397C5.00682 17.3637 4.70064 20.4711 5.29685 23.469C5.89307 26.467 7.3649 29.2208 9.52622 31.3822C11.6875 33.5437 14.4413 35.0157 17.4392 35.6121C20.4371 36.2085 23.5445 35.9025 26.3685 34.7328C29.1925 33.5631 31.6063 31.5822 33.3045 29.0407C35.0027 26.4992 35.9091 23.5112 35.9091 20.4545C35.9044 16.3573 34.2747 12.4293 31.3777 9.53206C28.4806 6.63482 24.5526 5.00495 20.4554 5V5ZM20.4554 34.565C17.6647 34.565 14.9366 33.7374 12.6161 32.1869C10.2957 30.6365 8.48708 28.4327 7.4191 25.8544C6.35111 23.276 6.07168 20.4389 6.61613 17.7017C7.16059 14.9646 8.50448 12.4503 10.4779 10.477C12.4512 8.50358 14.9655 7.15969 17.7026 6.61523C20.4398 6.07078 23.2769 6.35021 25.8553 7.4182C28.4336 8.48619 30.6374 10.2948 32.1878 12.6152C33.7383 14.9357 34.5659 17.6638 34.5659 20.4545C34.5619 24.1956 33.074 27.7824 30.4286 30.4277C27.7832 33.0731 24.1965 34.561 20.4554 34.565Z' fill='#8254C6'/>\r\n<path d='M17.0952 17.7673C17.0952 17.3685 16.9769 16.9787 16.7554 16.6471C16.5339 16.3156 16.219 16.0572 15.8506 15.9046C15.4822 15.752 15.0768 15.712 14.6857 15.7898C14.2946 15.8676 13.9353 16.0597 13.6534 16.3416C13.3714 16.6236 13.1794 16.9828 13.1016 17.3739C13.0238 17.765 13.0637 18.1704 13.2163 18.5388C13.3689 18.9072 13.6274 19.2221 13.9589 19.4436C14.2905 19.6652 14.6803 19.7834 15.079 19.7834C15.6136 19.783 16.1261 19.5704 16.5041 19.1924C16.8821 18.8144 17.0947 18.3018 17.0952 17.7673ZM14.4079 17.7673C14.4079 17.6343 14.4473 17.5044 14.5211 17.3939C14.595 17.2834 14.6999 17.1972 14.8227 17.1464C14.9455 17.0955 15.0807 17.0822 15.211 17.1081C15.3414 17.1341 15.4611 17.1981 15.5551 17.292C15.6491 17.386 15.7131 17.5058 15.7391 17.6361C15.765 17.7665 15.7517 17.9016 15.7008 18.0244C15.6499 18.1472 15.5638 18.2522 15.4533 18.3261C15.3428 18.3999 15.2128 18.4393 15.0799 18.4393C14.9018 18.4391 14.7309 18.3682 14.605 18.2422C14.479 18.1162 14.4081 17.9454 14.4079 17.7673V17.7673Z' fill='#8254C6'/>\r\n<path d='M27.4708 11.7898L24.7835 10.4457C24.6241 10.3659 24.4394 10.3527 24.2703 10.4091C24.1011 10.4654 23.9613 10.5866 23.8815 10.7461C23.8017 10.9055 23.7885 11.0901 23.8449 11.2593C23.9012 11.4284 24.0224 11.5683 24.1819 11.6481L26.8692 12.9922C27.0286 13.072 27.2132 13.0851 27.3824 13.0288C27.5516 12.9725 27.6914 12.8513 27.7712 12.6918C27.851 12.5324 27.8641 12.3478 27.8078 12.1786C27.7515 12.0094 27.6303 11.8696 27.4708 11.7898Z' fill='#8254C6'/>\r\n<path d='M13.7375 13.0626C13.8414 13.0625 13.9439 13.0384 14.037 12.9922L16.7243 11.6481C16.8838 11.5683 17.005 11.4284 17.0613 11.2593C17.1177 11.0901 17.1045 10.9055 17.0247 10.7461C16.9449 10.5866 16.8051 10.4654 16.6359 10.4091C16.4667 10.3527 16.2821 10.3659 16.1227 10.4457L13.4354 11.7907C13.3001 11.8585 13.1917 11.97 13.1277 12.1071C13.0637 12.2443 13.0478 12.399 13.0826 12.5462C13.1175 12.6935 13.201 12.8247 13.3197 12.9185C13.4384 13.0124 13.5853 13.0635 13.7366 13.0635L13.7375 13.0626Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "depression",
              meaning: "\u0627\u0641\u0633\u0631\u062f\u06af\u06cc",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M19.9991 4.54541C16.9425 4.54523 13.9544 5.45148 11.4128 7.14954C8.87121 8.8476 6.89023 11.2612 5.72037 14.0851C4.55052 16.9091 4.24434 20.0165 4.84055 23.0144C5.43677 26.0124 6.9086 28.7662 9.06992 30.9277C11.2312 33.0891 13.985 34.5611 16.9829 35.1575C19.9808 35.7539 23.0882 35.4479 25.9122 34.2782C28.7362 33.1085 31.15 31.1276 32.8482 28.5861C34.5464 26.0446 35.4528 23.0566 35.4528 20C35.4481 15.9028 33.8184 11.9747 30.9214 9.07747C28.0243 6.18023 24.0963 4.55036 19.9991 4.54541V4.54541ZM19.9991 34.1104C17.2084 34.1104 14.4803 33.2828 12.1598 31.7324C9.83936 30.1819 8.03078 27.9781 6.9628 25.3998C5.89481 22.8214 5.61538 19.9843 6.15983 17.2471C6.70429 14.51 8.04818 11.9957 10.0216 10.0224C11.9949 8.04899 14.5092 6.7051 17.2463 6.16064C19.9835 5.61619 22.8206 5.89562 25.399 6.96361C27.9773 8.0316 30.1811 9.84017 31.7315 12.1606C33.282 14.4811 34.1096 17.2092 34.1096 20C34.1056 23.741 32.6177 27.3278 29.9723 29.9731C27.327 32.6185 23.7402 34.1064 19.9991 34.1104Z' fill='#8254C6'/>\r\n<path d='M16.6389 17.3127C16.6389 16.9139 16.5206 16.5241 16.2991 16.1926C16.0776 15.861 15.7627 15.6026 15.3943 15.45C15.0259 15.2974 14.6205 15.2575 14.2294 15.3352C13.8383 15.413 13.479 15.6051 13.1971 15.887C12.9151 16.169 12.7231 16.5282 12.6453 16.9193C12.5675 17.3104 12.6074 17.7158 12.76 18.0842C12.9126 18.4526 13.1711 18.7675 13.5026 18.9891C13.8342 19.2106 14.224 19.3288 14.6227 19.3288C15.1573 19.3284 15.6698 19.1158 16.0478 18.7378C16.4258 18.3598 16.6384 17.8472 16.6389 17.3127ZM13.9516 17.3127C13.9516 17.1797 13.991 17.0498 14.0648 16.9393C14.1387 16.8288 14.2436 16.7426 14.3664 16.6918C14.4892 16.6409 14.6244 16.6276 14.7547 16.6535C14.8851 16.6795 15.0048 16.7435 15.0988 16.8375C15.1928 16.9314 15.2568 17.0512 15.2828 17.1816C15.3087 17.3119 15.2954 17.4471 15.2445 17.5699C15.1936 17.6927 15.1075 17.7976 14.997 17.8715C14.8865 17.9453 14.7565 17.9847 14.6236 17.9847C14.4455 17.9845 14.2746 17.9136 14.1487 17.7876C14.0227 17.6616 13.9518 17.4908 13.9516 17.3127V17.3127Z' fill='#8254C6'/>\r\n<path d='M25.3747 15.2965C24.8997 15.2955 24.4397 15.4626 24.0762 15.7683C23.7127 16.0739 23.4691 16.4984 23.3886 16.9665C23.3081 17.4346 23.3959 17.916 23.6364 18.3256C23.8769 18.7352 24.2546 19.0463 24.7026 19.204V21.3432C24.7026 21.5214 24.7734 21.6924 24.8995 21.8184C25.0255 21.9445 25.1964 22.0153 25.3747 22.0153C25.5529 22.0153 25.7239 21.9445 25.8499 21.8184C25.9759 21.6924 26.0467 21.5214 26.0467 21.3432V19.204C26.4948 19.0463 26.8725 18.7352 27.113 18.3256C27.3535 17.916 27.4413 17.4346 27.3608 16.9665C27.2803 16.4984 27.0367 16.0739 26.6732 15.7683C26.3096 15.4626 25.8496 15.2955 25.3747 15.2965V15.2965ZM25.3747 17.9838C25.2418 17.9838 25.1118 17.9444 25.0013 17.8706C24.8908 17.7967 24.8047 17.6918 24.7538 17.569C24.7029 17.4462 24.6896 17.311 24.7156 17.1807C24.7415 17.0503 24.8055 16.9306 24.8995 16.8366C24.9935 16.7426 25.1132 16.6786 25.2436 16.6526C25.3739 16.6267 25.5091 16.64 25.6319 16.6909C25.7547 16.7417 25.8596 16.8279 25.9335 16.9384C26.0073 17.0489 26.0467 17.1789 26.0467 17.3118C26.0465 17.4899 25.9756 17.6608 25.8496 17.7867C25.7237 17.9127 25.5528 17.9836 25.3747 17.9838V17.9838Z' fill='#8254C6'/>\r\n<path d='M19.9987 23.3594C18.7641 23.3576 17.543 23.6159 16.4148 24.1174C15.2867 24.619 14.2769 25.3526 13.4511 26.2704C13.3902 26.3358 13.3429 26.4127 13.312 26.4966C13.2811 26.5804 13.2673 26.6696 13.2713 26.7589C13.2753 26.8482 13.2971 26.9358 13.3354 27.0166C13.3737 27.0973 13.4277 27.1696 13.4943 27.2293C13.5608 27.2889 13.6386 27.3347 13.7231 27.3639C13.8076 27.3931 13.897 27.4051 13.9862 27.3993C14.0754 27.3936 14.1626 27.37 14.2426 27.3301C14.3225 27.2903 14.3938 27.2348 14.4521 27.1671C15.1529 26.3914 16.0087 25.7714 16.9641 25.347C17.9195 24.9226 18.9533 24.7033 19.9987 24.7033C21.0442 24.7033 22.078 24.9226 23.0334 25.347C23.9888 25.7714 24.8445 26.3914 25.5454 27.1671C25.6037 27.2348 25.6749 27.2903 25.7549 27.3301C25.8349 27.37 25.9221 27.3936 26.0112 27.3993C26.1004 27.4051 26.1899 27.3931 26.2744 27.3639C26.3588 27.3347 26.4366 27.2889 26.5032 27.2293C26.5698 27.1696 26.6238 27.0973 26.6621 27.0166C26.7004 26.9358 26.7222 26.8482 26.7262 26.7589C26.7302 26.6696 26.7164 26.5804 26.6855 26.4966C26.6546 26.4127 26.6073 26.3358 26.5464 26.2704C25.7205 25.3527 24.7107 24.6192 23.5826 24.1176C22.4545 23.616 21.2333 23.3577 19.9987 23.3594V23.3594Z' fill='#8254C6'/>\r\n<path d='M27.0145 11.3352L24.3272 9.99111C24.1678 9.91132 23.9831 9.89815 23.814 9.95448C23.6448 10.0108 23.505 10.132 23.4252 10.2915C23.3454 10.4509 23.3322 10.6355 23.3886 10.8047C23.4449 10.9739 23.5661 11.1137 23.7256 11.1935L26.4129 12.5376C26.5723 12.6174 26.7569 12.6306 26.9261 12.5742C27.0953 12.5179 27.2351 12.3967 27.3149 12.2372C27.3947 12.0778 27.4079 11.8932 27.3515 11.724C27.2952 11.5548 27.174 11.415 27.0145 11.3352Z' fill='#8254C6'/>\r\n<path d='M13.2812 12.608C13.3851 12.6079 13.4876 12.5838 13.5807 12.5376L16.268 11.1935C16.4275 11.1137 16.5487 10.9738 16.605 10.8047C16.6614 10.6355 16.6482 10.4509 16.5684 10.2915C16.4886 10.132 16.3488 10.0108 16.1796 9.95448C16.0104 9.89815 15.8258 9.91132 15.6664 9.99111L12.9791 11.3361C12.8438 11.4039 12.7354 11.5154 12.6714 11.6526C12.6074 11.7897 12.5915 11.9444 12.6263 12.0916C12.6612 12.2389 12.7447 12.3701 12.8634 12.464C12.9821 12.5578 13.129 12.6089 13.2803 12.6089L13.2812 12.608Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "mood_swings",
              meaning:
                "\u0646\u0648\u0633\u0627\u0646\u0627\u062a \u062e\u0644\u0642\u06cc",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M19.9987 23.3594C18.7641 23.3576 17.543 23.6159 16.4148 24.1174C15.2867 24.619 14.2769 25.3526 13.4511 26.2704C13.3902 26.3358 13.3429 26.4127 13.312 26.4966C13.2811 26.5804 13.2673 26.6696 13.2713 26.7589C13.2753 26.8482 13.2971 26.9358 13.3354 27.0166C13.3737 27.0973 13.4277 27.1696 13.4943 27.2293C13.5608 27.2889 13.6386 27.3347 13.7231 27.3639C13.8076 27.3931 13.897 27.4051 13.9862 27.3993C14.0754 27.3936 14.1626 27.37 14.2426 27.3301C14.3225 27.2903 14.3938 27.2348 14.4521 27.1671C15.1529 26.3914 16.0087 25.7714 16.9641 25.347C17.9195 24.9226 18.9533 24.7033 19.9987 24.7033C21.0442 24.7033 22.078 24.9226 23.0334 25.347C23.9888 25.7714 24.8445 26.3914 25.5454 27.1671C25.6037 27.2348 25.6749 27.2903 25.7549 27.3301C25.8349 27.37 25.9221 27.3936 26.0112 27.3993C26.1004 27.4051 26.1899 27.3931 26.2744 27.3639C26.3588 27.3347 26.4366 27.2889 26.5032 27.2293C26.5698 27.1696 26.6238 27.0973 26.6621 27.0166C26.7004 26.9358 26.7222 26.8482 26.7262 26.7589C26.7302 26.6696 26.7164 26.5804 26.6855 26.4966C26.6546 26.4127 26.6073 26.3358 26.5464 26.2704C25.7206 25.3526 24.7108 24.619 23.5826 24.1174C22.4545 23.6159 21.2334 23.3576 19.9987 23.3594Z' fill='#8254C6'/>\r\n<path d='M19.9991 4.54541C16.9425 4.54523 13.9544 5.45148 11.4128 7.14954C8.87121 8.8476 6.89023 11.2612 5.72037 14.0851C4.55052 16.9091 4.24434 20.0165 4.84055 23.0144C5.43677 26.0124 6.9086 28.7662 9.06992 30.9277C11.2312 33.0891 13.985 34.5611 16.9829 35.1575C19.9808 35.7539 23.0882 35.4479 25.9122 34.2782C28.7362 33.1085 31.15 31.1276 32.8482 28.5861C34.5464 26.0446 35.4528 23.0566 35.4528 20C35.4481 15.9028 33.8184 11.9747 30.9214 9.07747C28.0243 6.18023 24.0963 4.55036 19.9991 4.54541V4.54541ZM19.9991 34.1104C17.2084 34.1104 14.4803 33.2828 12.1598 31.7324C9.83936 30.1819 8.03078 27.9781 6.9628 25.3998C5.89481 22.8214 5.61538 19.9843 6.15983 17.2471C6.70429 14.51 8.04818 11.9957 10.0216 10.0224C11.9949 8.04899 14.5092 6.7051 17.2463 6.16064C19.9835 5.61619 22.8206 5.89562 25.399 6.96361C27.9773 8.0316 30.1811 9.84017 31.7315 12.1606C33.282 14.4811 34.1096 17.2092 34.1096 20C34.1056 23.741 32.6177 27.3278 29.9723 29.9731C27.327 32.6185 23.7402 34.1064 19.9991 34.1104Z' fill='#8254C6'/>\r\n<path d='M17.9827 17.3124C17.9827 17.1875 17.9479 17.0651 17.8823 16.9588C17.8167 16.8526 17.7227 16.7667 17.6111 16.7108L12.2355 14.0235C12.0761 13.9437 11.8915 13.9305 11.7223 13.9868C11.5531 14.0432 11.4133 14.1644 11.3335 14.3238C11.2537 14.4833 11.2406 14.6679 11.2969 14.837C11.3532 15.0062 11.4744 15.1461 11.6339 15.2258L15.8079 17.3133L11.6348 19.3999C11.5558 19.4393 11.4854 19.4939 11.4276 19.5606C11.3697 19.6272 11.3256 19.7046 11.2976 19.7884C11.2697 19.8721 11.2585 19.9605 11.2648 20.0485C11.271 20.1365 11.2945 20.2225 11.334 20.3014C11.3734 20.3804 11.428 20.4508 11.4947 20.5086C11.5613 20.5665 11.6387 20.6106 11.7224 20.6386C11.8062 20.6665 11.8946 20.6777 11.9826 20.6715C12.0706 20.6652 12.1566 20.6417 12.2355 20.6023L17.6111 17.9149C17.7229 17.859 17.8169 17.7729 17.8825 17.6665C17.9482 17.5601 17.9829 17.4375 17.9827 17.3124V17.3124Z' fill='#8254C6'/>\r\n<path d='M28.3624 19.3979L24.1884 17.3114L28.3615 15.2248C28.521 15.1451 28.6422 15.0054 28.6986 14.8363C28.7551 14.6672 28.742 14.4827 28.6623 14.3232C28.5827 14.1638 28.4429 14.0425 28.2738 13.9861C28.1048 13.9297 27.9202 13.9427 27.7608 14.0224L22.3852 16.7097C22.2736 16.7655 22.1796 16.8513 22.114 16.9575C22.0483 17.0637 22.0135 17.1861 22.0135 17.3109C22.0135 17.4358 22.0483 17.5581 22.114 17.6643C22.1796 17.7705 22.2736 17.8563 22.3852 17.9121L27.7608 20.5994C27.9202 20.6792 28.1048 20.6924 28.274 20.6361C28.4431 20.5797 28.583 20.4585 28.6628 20.2991C28.7426 20.1396 28.7557 19.955 28.6994 19.7858C28.6431 19.6167 28.5218 19.4768 28.3624 19.397V19.3979Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "anger",
              meaning: "\u062e\u0634\u0645",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M19.9991 4.54541C16.9425 4.54523 13.9544 5.45148 11.4128 7.14954C8.87121 8.8476 6.89023 11.2612 5.72037 14.0851C4.55052 16.9091 4.24434 20.0165 4.84055 23.0144C5.43677 26.0124 6.9086 28.7662 9.06992 30.9277C11.2312 33.0891 13.985 34.5611 16.9829 35.1575C19.9808 35.7539 23.0882 35.4479 25.9122 34.2782C28.7362 33.1085 31.15 31.1276 32.8482 28.5861C34.5464 26.0446 35.4528 23.0566 35.4528 20C35.4481 15.9028 33.8184 11.9747 30.9214 9.07747C28.0243 6.18023 24.0963 4.55036 19.9991 4.54541V4.54541ZM19.9991 34.1104C17.2084 34.1104 14.4803 33.2828 12.1598 31.7324C9.83936 30.1819 8.03078 27.9781 6.9628 25.3998C5.89481 22.8214 5.61538 19.9843 6.15983 17.2471C6.70429 14.51 8.04818 11.9957 10.0216 10.0224C11.9949 8.04899 14.5092 6.7051 17.2463 6.16064C19.9835 5.61619 22.8206 5.89562 25.399 6.96361C27.9773 8.0316 30.1811 9.84017 31.7315 12.1606C33.282 14.4811 34.1096 17.2092 34.1096 20C34.1056 23.741 32.6177 27.3278 29.9723 29.9731C27.327 32.6185 23.7402 34.1064 19.9991 34.1104Z' fill='#8254C6'/>\r\n<path d='M16.6389 18.6568C16.6389 18.258 16.5206 17.8682 16.2991 17.5367C16.0776 17.2051 15.7627 16.9467 15.3943 16.7941C15.0259 16.6415 14.6205 16.6016 14.2294 16.6794C13.8383 16.7572 13.479 16.9492 13.1971 17.2311C12.9151 17.5131 12.7231 17.8724 12.6453 18.2635C12.5675 18.6546 12.6074 19.0599 12.76 19.4283C12.9126 19.7967 13.1711 20.1116 13.5026 20.3332C13.8342 20.5547 14.224 20.673 14.6227 20.673C15.1573 20.6725 15.6698 20.4599 16.0478 20.0819C16.4258 19.7039 16.6384 19.1914 16.6389 18.6568ZM13.9516 18.6568C13.9516 18.5239 13.991 18.3939 14.0648 18.2834C14.1387 18.1729 14.2436 18.0868 14.3664 18.0359C14.4892 17.985 14.6244 17.9717 14.7547 17.9977C14.8851 18.0236 15.0048 18.0876 15.0988 18.1816C15.1928 18.2756 15.2568 18.3953 15.2828 18.5257C15.3087 18.656 15.2954 18.7912 15.2445 18.914C15.1936 19.0368 15.1075 19.1417 14.997 19.2156C14.8865 19.2894 14.7565 19.3288 14.6236 19.3288C14.4455 19.3286 14.2746 19.2577 14.1487 19.1317C14.0227 19.0058 13.9518 18.835 13.9516 18.6568V18.6568Z' fill='#8254C6'/>\r\n<path d='M25.3755 16.6406C24.9768 16.6406 24.587 16.7589 24.2554 16.9804C23.9239 17.2019 23.6654 17.5168 23.5128 17.8852C23.3603 18.2536 23.3203 18.659 23.3981 19.0501C23.4759 19.4412 23.6679 19.8005 23.9499 20.0824C24.2319 20.3644 24.5911 20.5564 24.9822 20.6342C25.3733 20.712 25.7787 20.6721 26.1471 20.5195C26.5155 20.3669 26.8304 20.1085 27.0519 19.7769C27.2735 19.4454 27.3917 19.0555 27.3917 18.6568C27.3912 18.1222 27.1787 17.6097 26.8007 17.2317C26.4227 16.8537 25.9101 16.6411 25.3755 16.6406V16.6406ZM25.3755 19.3279C25.2426 19.3279 25.1127 19.2885 25.0022 19.2147C24.8916 19.1408 24.8055 19.0359 24.7546 18.9131C24.7038 18.7903 24.6905 18.6552 24.7164 18.5248C24.7423 18.3944 24.8063 18.2747 24.9003 18.1807C24.9943 18.0867 25.1141 18.0227 25.2444 17.9967C25.3748 17.9708 25.5099 17.9841 25.6327 18.035C25.7555 18.0859 25.8605 18.172 25.9343 18.2825C26.0082 18.393 26.0476 18.523 26.0476 18.6559C26.0474 18.8341 25.9765 19.0049 25.8505 19.1308C25.7245 19.2568 25.5537 19.3277 25.3755 19.3279V19.3279Z' fill='#8254C6'/>\r\n<path d='M22.6865 13.9521C22.7904 13.9521 22.8929 13.928 22.986 13.8817L25.6733 12.5376C25.7523 12.4981 25.8227 12.4434 25.8805 12.3767C25.9383 12.31 25.9824 12.2326 26.0103 12.1488C26.0382 12.065 26.0493 11.9766 26.043 11.8886C26.0367 11.8005 26.0132 11.7145 25.9737 11.6356C25.9342 11.5566 25.8795 11.4862 25.8128 11.4284C25.7461 11.3706 25.6686 11.3265 25.5849 11.2986C25.5011 11.2707 25.4127 11.2596 25.3246 11.2659C25.2366 11.2721 25.1506 11.2957 25.0717 11.3352L22.3843 12.6793C22.2491 12.7472 22.1407 12.8587 22.0766 12.9958C22.0126 13.1329 21.9968 13.2876 22.0316 13.4349C22.0665 13.5821 22.15 13.7133 22.2687 13.8072C22.3874 13.9011 22.5343 13.9521 22.6856 13.9521H22.6865Z' fill='#8254C6'/>\r\n<path d='M14.3238 12.5385L17.0111 13.8826C17.1706 13.9624 17.3552 13.9755 17.5244 13.9192C17.6935 13.8629 17.8334 13.7416 17.9132 13.5822C17.9929 13.4228 18.0061 13.2381 17.9498 13.069C17.8935 12.8998 17.7722 12.76 17.6128 12.6802L14.9255 11.3361C14.766 11.2563 14.5814 11.2431 14.4122 11.2995C14.2431 11.3558 14.1032 11.477 14.0235 11.6364C13.9437 11.7959 13.9305 11.9805 13.9868 12.1497C14.0432 12.3188 14.1644 12.4587 14.3238 12.5385V12.5385Z' fill='#8254C6'/>\r\n<path d='M19.9987 23.3594C18.7641 23.3576 17.543 23.6159 16.4148 24.1174C15.2867 24.619 14.2769 25.3526 13.4511 26.2704C13.3902 26.3358 13.3429 26.4127 13.312 26.4966C13.2811 26.5804 13.2673 26.6696 13.2713 26.7589C13.2753 26.8482 13.2971 26.9358 13.3354 27.0166C13.3737 27.0973 13.4277 27.1696 13.4943 27.2293C13.5608 27.2889 13.6386 27.3347 13.7231 27.3639C13.8076 27.3931 13.897 27.4051 13.9862 27.3993C14.0754 27.3936 14.1626 27.37 14.2426 27.3301C14.3225 27.2903 14.3938 27.2348 14.4521 27.1671C15.1529 26.3914 16.0087 25.7714 16.9641 25.347C17.9195 24.9226 18.9533 24.7033 19.9987 24.7033C21.0442 24.7033 22.078 24.9226 23.0334 25.347C23.9888 25.7714 24.8445 26.3914 25.5454 27.1671C25.6037 27.2348 25.6749 27.2903 25.7549 27.3301C25.8349 27.37 25.9221 27.3936 26.0112 27.3993C26.1004 27.4051 26.1899 27.3931 26.2744 27.3639C26.3588 27.3347 26.4366 27.2889 26.5032 27.2293C26.5698 27.1696 26.6238 27.0973 26.6621 27.0166C26.7004 26.9358 26.7222 26.8482 26.7262 26.7589C26.7302 26.6696 26.7164 26.5804 26.6855 26.4966C26.6546 26.4127 26.6073 26.3358 26.5464 26.2704C25.7206 25.3526 24.7107 24.6191 23.5826 24.1175C22.4545 23.6159 21.2333 23.3576 19.9987 23.3594Z' fill='#8254C6'/>\r\n</svg>\r\n"
            }
          ],
          womens: [
            {
              value: "uterineCancer",
              meaning: "\u0633\u0631\u0637\u0627\u0646 \u0631\u062d\u0645",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_160_577)'>\r\n<path d='M7.03377 13.0728H7.03825C7.11457 13.0728 7.53266 13.0321 7.64274 13.0212C7.6669 13.0243 7.69073 13.0284 7.71521 13.031C7.86104 13.0466 8.00759 13.0544 8.15425 13.0545C9.38081 13.0545 10.3478 12.4915 10.4344 11.675C10.531 10.7632 9.48818 9.93019 8.06002 9.77883C7.81196 9.75247 7.56199 9.74899 7.31329 9.76844C7.29953 9.76556 7.28593 9.76252 7.27153 9.76172C4.89201 9.61772 3.38193 9.13915 3.01937 8.41403C2.87137 8.11803 2.89041 7.89324 3.08273 7.6622C3.71825 6.899 5.64929 7.42076 7.35601 7.88172C8.47153 8.183 9.62401 8.49436 10.6768 8.55131C10.6893 8.55356 10.7021 8.55484 10.715 8.55532C10.9459 8.56476 11.1773 8.57211 11.4078 8.57611C12.2731 8.59131 12.9563 9.15595 13.0691 9.94923C13.0794 10.0212 13.0923 10.1009 13.1062 10.1859C13.1453 10.4246 13.1894 10.6952 13.1949 10.94C13.2402 12.987 13.7733 14.6251 14.8248 15.9478C15.0997 16.2936 15.3538 16.544 15.5779 16.7646C16.1256 17.3041 16.4005 17.5748 16.3187 18.5787L16.3005 18.8024C16.1997 20.0401 16.1962 21.3422 16.8467 22.4769L17.2005 23.0939C17.7096 23.9819 17.9494 24.5075 17.9494 25.4873C17.9494 25.5009 17.9504 25.5142 17.9522 25.5273C17.9525 25.5592 17.9515 25.6195 17.9504 25.7075C17.941 26.4188 17.9125 28.584 18.2083 32.0134C18.2149 32.0897 18.2515 32.1602 18.3101 32.2094C18.3686 32.2587 18.4444 32.2827 18.5206 32.2761C18.5969 32.2695 18.6674 32.2329 18.7167 32.1744C18.766 32.1158 18.7899 32.0401 18.7834 31.9638C18.4899 28.5628 18.5182 26.4195 18.5275 25.715C18.5288 25.6248 18.5298 25.5499 18.5248 25.4872H18.5266C18.5266 24.3299 18.2147 23.7025 17.7011 22.8067L17.3474 22.1897C16.775 21.1915 16.7826 19.9942 16.8758 18.8489L16.8941 18.6252C16.9976 17.3528 16.5499 16.9116 15.983 16.3534C15.7706 16.1441 15.5298 15.907 15.2768 15.5886C14.3067 14.3683 13.8146 12.8435 13.7722 10.9272C13.7658 10.642 13.7162 10.3376 13.6762 10.0928C13.663 10.012 13.6506 9.93627 13.6408 9.86779C13.487 8.78779 12.5731 8.01931 11.4182 7.99899C11.2186 7.99544 11.0189 7.98974 10.8194 7.98188C10.8085 7.98021 10.7976 7.9792 10.7867 7.97883C9.77554 7.93739 8.62225 7.62572 7.50417 7.3238C5.54129 6.79372 3.51169 6.24524 2.63969 7.29292C2.30225 7.6982 2.25505 8.17499 2.50369 8.67211C2.89313 9.45083 4.04801 9.9678 5.93921 10.2158C5.59985 10.4523 5.38017 10.7672 5.34113 11.1348C5.29457 11.575 5.51186 12.0062 5.94962 12.3584C3.78225 11.8979 1.77729 10.3771 1.22609 9.03484C0.890732 8.21804 1.05009 7.355 1.67505 6.60412C2.95713 5.0638 5.39425 5.72683 7.54433 6.31179L7.85361 6.39563C8.86961 6.67004 9.91905 6.95356 10.7771 7.00428C10.7902 7.00668 10.8035 7.00812 10.8171 7.00876L10.8453 7.00987C12.3566 7.06987 13.8094 6.57323 14.9374 5.60923C16.8845 3.94539 18.915 3.93707 19.891 3.93323L19.9152 3.93308C21.3298 3.92684 22.9312 3.92076 24.6165 5.41084C25.8502 6.50188 27.3952 7.07308 28.9658 7.01532L29.136 7.00876C30.0094 6.97324 31.096 6.6798 32.1493 6.39532L32.4565 6.31195C34.6066 5.72731 37.0435 5.06428 38.3258 6.60428C38.9507 7.35516 39.1101 8.21836 38.7747 9.035C38.3107 10.1648 36.6574 11.4673 34.7643 12.0825C35.0082 11.7913 35.123 11.4657 35.088 11.135C35.0461 10.7406 34.7984 10.4059 34.4157 10.1646C36.0966 9.90028 37.1325 9.40107 37.4971 8.67227C37.7456 8.17515 37.6986 7.69836 37.361 7.29324C36.4891 6.2454 34.4594 6.79372 32.4938 7.32475C31.3784 7.62603 30.225 7.93756 29.2141 7.97916C28.7776 7.99676 28.3986 8.00524 28.0555 8.00204C27.5496 8.00124 27.0914 8.18859 26.7411 8.53643C26.3856 8.88939 26.1899 9.36283 26.1898 9.86939C26.1896 10.1206 26.1742 10.3652 26.1541 10.6592C25.9987 12.9249 25.5338 14.3539 24.5493 15.5913C24.2962 15.9096 24.0552 16.1465 23.8427 16.3556C23.2762 16.9129 22.8286 17.3532 22.9314 18.6246L22.9653 19.0444C23.0514 20.1088 23.0947 21.2265 22.6094 22.168L22.2562 22.8537C21.811 23.7171 21.5592 24.2564 21.5598 25.316C21.5616 25.3432 21.7264 28.0795 21.3032 31.9577C21.2991 31.9954 21.3024 32.0335 21.3131 32.0699C21.3237 32.1062 21.3414 32.1401 21.3651 32.1697C21.3888 32.1992 21.4181 32.2238 21.4513 32.242C21.4846 32.2602 21.5211 32.2717 21.5587 32.2758C21.5964 32.2799 21.6345 32.2766 21.6709 32.2659C21.7072 32.2553 21.7411 32.2376 21.7707 32.2139C21.8002 32.1902 21.8248 32.1609 21.843 32.1276C21.8612 32.0944 21.8727 32.0579 21.8768 32.0203C22.3058 28.0891 22.1374 25.3072 22.1363 25.2979C22.1363 24.3862 22.3418 23.9473 22.7691 23.118L23.1224 22.4323C23.6773 21.3558 23.6331 20.1454 23.5405 18.998L23.5066 18.5782C23.4254 17.5756 23.7002 17.3054 24.2474 16.7672C24.4717 16.5465 24.7258 16.2964 25.0008 15.9508C26.0648 14.6134 26.5658 13.0918 26.7298 10.6987C26.7462 10.459 26.7667 10.1606 26.7667 9.86971C26.7669 9.51787 26.9021 9.18988 27.1477 8.94604C27.3882 8.70732 27.7114 8.58092 28.0517 8.57932C28.404 8.58156 28.7918 8.57404 29.2376 8.5558C30.3131 8.5118 31.4982 8.19164 32.647 7.88124C34.351 7.42108 36.2821 6.89931 36.9174 7.66267C37.1098 7.89355 37.1288 8.11851 36.9808 8.41451C36.6214 9.13307 35.1338 9.60908 32.7909 9.75772C32.6528 9.7582 32.5123 9.76396 32.3685 9.77916C31.7142 9.8486 31.111 10.0678 30.6701 10.3964C30.1851 10.758 29.945 11.2123 29.9941 11.6753C30.0806 12.492 31.0475 13.0548 32.2742 13.0548C32.4174 13.0548 32.564 13.0472 32.7133 13.0313C32.7579 13.0265 32.8018 13.0195 32.8459 13.0132C35.4544 12.9307 38.5339 11.1396 39.3082 9.25435C39.7286 8.23035 39.5371 7.1582 38.769 6.23516C37.2496 4.41036 34.6226 5.12492 32.3048 5.75516L31.996 5.83899C30.976 6.11451 29.9211 6.39931 29.1125 6.43227L28.9446 6.43883C27.5226 6.49067 26.1211 5.97132 24.9986 4.97883C23.1485 3.34283 21.3542 3.34987 19.9126 3.35627L19.8885 3.35643C18.8438 3.36059 16.6702 3.36955 14.5622 5.17099C13.5579 6.0294 12.2648 6.4766 10.919 6.43548C10.9088 6.43395 10.8984 6.43299 10.888 6.4326C10.079 6.39948 9.02402 6.11452 8.00162 5.83852L7.69553 5.75548C5.37777 5.12492 2.75057 4.41035 1.23137 6.23548C0.463053 7.15836 0.271533 8.23067 0.692173 9.25451C1.40465 10.9892 4.18417 12.9841 7.03377 13.0728ZM5.91473 11.1958C5.96865 10.6876 6.81905 10.2276 7.99921 10.3528C9.17937 10.4779 9.91442 11.106 9.8605 11.6142C9.80658 12.1224 8.95553 12.582 7.77601 12.4572C7.22305 12.3987 6.72081 12.2188 6.36161 11.9512C6.17937 11.8152 5.87873 11.5361 5.91473 11.1958ZM34.0666 11.9512C33.7075 12.2188 33.2051 12.3987 32.6522 12.4572C31.472 12.582 30.6214 12.1224 30.5677 11.6142C30.5315 11.2739 30.8323 10.9948 31.0147 10.8588C31.3738 10.5911 31.8762 10.4113 32.4291 10.3528C32.5622 10.3387 32.691 10.332 32.815 10.332C33.7909 10.332 34.4658 10.7449 34.5136 11.1958C34.5498 11.5361 34.2491 11.8152 34.0666 11.9512Z' fill='#8254C6'/>\r\n<mask id='mask0_160_577' style='mask-type:luminance' maskUnits='userSpaceOnUse' x='-1' y='2' width='42' height='32'>\r\n<path d='M40.4739 2.35547H-0.526062V33.3555H40.4739V2.35547Z' fill='white'/>\r\n<path d='M7.03377 13.0728H7.03825C7.11457 13.0728 7.53266 13.0321 7.64274 13.0212C7.6669 13.0243 7.69073 13.0284 7.71521 13.031C7.86104 13.0466 8.00759 13.0544 8.15425 13.0545C9.38081 13.0545 10.3478 12.4915 10.4344 11.675C10.531 10.7632 9.48818 9.93019 8.06002 9.77883C7.81196 9.75247 7.56199 9.74899 7.31329 9.76844C7.29953 9.76556 7.28593 9.76252 7.27153 9.76172C4.89201 9.61772 3.38193 9.13915 3.01937 8.41403C2.87137 8.11803 2.89041 7.89324 3.08273 7.6622C3.71825 6.899 5.64929 7.42076 7.35601 7.88172C8.47153 8.183 9.62401 8.49436 10.6768 8.55131C10.6893 8.55356 10.7021 8.55484 10.715 8.55532C10.9459 8.56476 11.1773 8.57211 11.4078 8.57611C12.2731 8.59131 12.9563 9.15595 13.0691 9.94923C13.0794 10.0212 13.0923 10.1009 13.1062 10.1859C13.1453 10.4246 13.1894 10.6952 13.1949 10.94C13.2402 12.987 13.7733 14.6251 14.8248 15.9478C15.0997 16.2936 15.3538 16.544 15.5779 16.7646C16.1256 17.3041 16.4005 17.5748 16.3187 18.5787L16.3005 18.8024C16.1997 20.0401 16.1962 21.3422 16.8467 22.4769L17.2005 23.0939C17.7096 23.9819 17.9494 24.5075 17.9494 25.4873C17.9494 25.5009 17.9504 25.5142 17.9522 25.5273C17.9525 25.5592 17.9515 25.6195 17.9504 25.7075C17.941 26.4188 17.9125 28.584 18.2083 32.0134C18.2149 32.0897 18.2515 32.1602 18.3101 32.2094C18.3686 32.2587 18.4444 32.2827 18.5206 32.2761C18.5969 32.2695 18.6674 32.2329 18.7167 32.1744C18.766 32.1158 18.7899 32.0401 18.7834 31.9638C18.4899 28.5628 18.5182 26.4195 18.5275 25.715C18.5288 25.6248 18.5298 25.5499 18.5248 25.4872H18.5266C18.5266 24.3299 18.2147 23.7025 17.7011 22.8067L17.3474 22.1897C16.775 21.1915 16.7826 19.9942 16.8758 18.8489L16.8941 18.6252C16.9976 17.3528 16.5499 16.9116 15.983 16.3534C15.7706 16.1441 15.5298 15.907 15.2768 15.5886C14.3067 14.3683 13.8146 12.8435 13.7722 10.9272C13.7658 10.642 13.7162 10.3376 13.6762 10.0928C13.663 10.012 13.6506 9.93627 13.6408 9.86779C13.487 8.78779 12.5731 8.01931 11.4182 7.99899C11.2186 7.99544 11.0189 7.98974 10.8194 7.98188C10.8085 7.98021 10.7976 7.9792 10.7867 7.97883C9.77554 7.93739 8.62225 7.62572 7.50417 7.3238C5.54129 6.79372 3.51169 6.24524 2.63969 7.29292C2.30225 7.6982 2.25505 8.17499 2.50369 8.67211C2.89313 9.45083 4.04801 9.9678 5.93921 10.2158C5.59985 10.4523 5.38017 10.7672 5.34113 11.1348C5.29457 11.575 5.51186 12.0062 5.94962 12.3584C3.78225 11.8979 1.77729 10.3771 1.22609 9.03484C0.890732 8.21804 1.05009 7.355 1.67505 6.60412C2.95713 5.0638 5.39425 5.72683 7.54433 6.31179L7.85361 6.39563C8.86961 6.67004 9.91905 6.95356 10.7771 7.00428C10.7902 7.00668 10.8035 7.00812 10.8171 7.00876L10.8453 7.00987C12.3566 7.06987 13.8094 6.57323 14.9374 5.60923C16.8845 3.94539 18.915 3.93707 19.891 3.93323L19.9152 3.93308C21.3298 3.92684 22.9312 3.92076 24.6165 5.41084C25.8502 6.50188 27.3952 7.07308 28.9658 7.01532L29.136 7.00876C30.0094 6.97324 31.096 6.6798 32.1493 6.39532L32.4565 6.31195C34.6066 5.72731 37.0435 5.06428 38.3258 6.60428C38.9507 7.35516 39.1101 8.21836 38.7747 9.035C38.3107 10.1648 36.6574 11.4673 34.7643 12.0825C35.0082 11.7913 35.123 11.4657 35.088 11.135C35.0461 10.7406 34.7984 10.4059 34.4157 10.1646C36.0966 9.90028 37.1325 9.40107 37.4971 8.67227C37.7456 8.17515 37.6986 7.69836 37.361 7.29324C36.4891 6.2454 34.4594 6.79372 32.4938 7.32475C31.3784 7.62603 30.225 7.93756 29.2141 7.97916C28.7776 7.99676 28.3986 8.00524 28.0555 8.00204C27.5496 8.00124 27.0914 8.18859 26.7411 8.53643C26.3856 8.88939 26.1899 9.36283 26.1898 9.86939C26.1896 10.1206 26.1742 10.3652 26.1541 10.6592C25.9987 12.9249 25.5338 14.3539 24.5493 15.5913C24.2962 15.9096 24.0552 16.1465 23.8427 16.3556C23.2762 16.9129 22.8286 17.3532 22.9314 18.6246L22.9653 19.0444C23.0514 20.1088 23.0947 21.2265 22.6094 22.168L22.2562 22.8537C21.811 23.7171 21.5592 24.2564 21.5598 25.316C21.5616 25.3432 21.7264 28.0795 21.3032 31.9577C21.2991 31.9954 21.3024 32.0335 21.3131 32.0699C21.3237 32.1062 21.3414 32.1401 21.3651 32.1697C21.3888 32.1992 21.4181 32.2238 21.4513 32.242C21.4846 32.2602 21.5211 32.2717 21.5587 32.2758C21.5964 32.2799 21.6345 32.2766 21.6709 32.2659C21.7072 32.2553 21.7411 32.2376 21.7707 32.2139C21.8002 32.1902 21.8248 32.1609 21.843 32.1276C21.8612 32.0944 21.8727 32.0579 21.8768 32.0203C22.3058 28.0891 22.1374 25.3072 22.1363 25.2979C22.1363 24.3862 22.3418 23.9473 22.7691 23.118L23.1224 22.4323C23.6773 21.3558 23.6331 20.1454 23.5405 18.998L23.5066 18.5782C23.4254 17.5756 23.7002 17.3054 24.2474 16.7672C24.4717 16.5465 24.7258 16.2964 25.0008 15.9508C26.0648 14.6134 26.5658 13.0918 26.7298 10.6987C26.7462 10.459 26.7667 10.1606 26.7667 9.86971C26.7669 9.51787 26.9021 9.18988 27.1477 8.94604C27.3882 8.70732 27.7114 8.58092 28.0517 8.57932C28.404 8.58156 28.7918 8.57404 29.2376 8.5558C30.3131 8.5118 31.4982 8.19164 32.647 7.88124C34.351 7.42108 36.2821 6.89931 36.9174 7.66267C37.1098 7.89355 37.1288 8.11851 36.9808 8.41451C36.6214 9.13307 35.1338 9.60908 32.7909 9.75772C32.6528 9.7582 32.5123 9.76396 32.3685 9.77916C31.7142 9.8486 31.111 10.0678 30.6701 10.3964C30.1851 10.758 29.945 11.2123 29.9941 11.6753C30.0806 12.492 31.0475 13.0548 32.2742 13.0548C32.4174 13.0548 32.564 13.0472 32.7133 13.0313C32.7579 13.0265 32.8018 13.0195 32.8459 13.0132C35.4544 12.9307 38.5339 11.1396 39.3082 9.25435C39.7286 8.23035 39.5371 7.1582 38.769 6.23516C37.2496 4.41036 34.6226 5.12492 32.3048 5.75516L31.996 5.83899C30.976 6.11451 29.9211 6.39931 29.1125 6.43227L28.9446 6.43883C27.5226 6.49067 26.1211 5.97132 24.9986 4.97883C23.1485 3.34283 21.3542 3.34987 19.9126 3.35627L19.8885 3.35643C18.8438 3.36059 16.6702 3.36955 14.5622 5.17099C13.5579 6.0294 12.2648 6.4766 10.919 6.43548C10.9088 6.43395 10.8984 6.43299 10.888 6.4326C10.079 6.39948 9.02402 6.11452 8.00162 5.83852L7.69553 5.75548C5.37777 5.12492 2.75057 4.41035 1.23137 6.23548C0.463053 7.15836 0.271533 8.23067 0.692173 9.25451C1.40465 10.9892 4.18417 12.9841 7.03377 13.0728ZM5.91473 11.1958C5.96865 10.6876 6.81905 10.2276 7.99921 10.3528C9.17937 10.4779 9.91442 11.106 9.8605 11.6142C9.80658 12.1224 8.95553 12.582 7.77601 12.4572C7.22305 12.3987 6.72081 12.2188 6.36161 11.9512C6.17937 11.8152 5.87873 11.5361 5.91473 11.1958ZM34.0666 11.9512C33.7075 12.2188 33.2051 12.3987 32.6522 12.4572C31.472 12.582 30.6214 12.1224 30.5677 11.6142C30.5315 11.2739 30.8323 10.9948 31.0147 10.8588C31.3738 10.5911 31.8762 10.4113 32.4291 10.3528C32.5622 10.3387 32.691 10.332 32.815 10.332C33.7909 10.332 34.4658 10.7449 34.5136 11.1958C34.5498 11.5361 34.2491 11.8152 34.0666 11.9512Z' fill='black'/>\r\n</mask>\r\n<g mask='url(#mask0_160_577)'>\r\n<path d='M7.03377 13.0728H7.03825C7.11457 13.0728 7.53266 13.0321 7.64274 13.0212C7.6669 13.0243 7.69073 13.0284 7.71521 13.031C7.86104 13.0466 8.00759 13.0544 8.15425 13.0545C9.38081 13.0545 10.3478 12.4915 10.4344 11.675C10.531 10.7632 9.48818 9.93019 8.06002 9.77883C7.81196 9.75247 7.56199 9.74899 7.31329 9.76844C7.29953 9.76556 7.28593 9.76252 7.27153 9.76172C4.89201 9.61772 3.38193 9.13915 3.01937 8.41403C2.87137 8.11803 2.89041 7.89324 3.08273 7.6622C3.71825 6.899 5.64929 7.42076 7.35601 7.88172C8.47153 8.183 9.62401 8.49436 10.6768 8.55131C10.6893 8.55356 10.7021 8.55484 10.715 8.55532C10.9459 8.56476 11.1773 8.57211 11.4078 8.57611C12.2731 8.59131 12.9563 9.15595 13.0691 9.94923C13.0794 10.0212 13.0923 10.1009 13.1062 10.1859C13.1453 10.4246 13.1894 10.6952 13.1949 10.94C13.2402 12.987 13.7733 14.6251 14.8248 15.9478C15.0997 16.2936 15.3538 16.544 15.5779 16.7646C16.1256 17.3041 16.4005 17.5748 16.3187 18.5787L16.3005 18.8024C16.1997 20.0401 16.1962 21.3422 16.8467 22.4769L17.2005 23.0939C17.7096 23.9819 17.9494 24.5075 17.9494 25.4873C17.9494 25.5009 17.9504 25.5142 17.9522 25.5273C17.9525 25.5592 17.9515 25.6195 17.9504 25.7075C17.941 26.4188 17.9125 28.584 18.2083 32.0134C18.2149 32.0897 18.2515 32.1602 18.3101 32.2094C18.3686 32.2587 18.4444 32.2827 18.5206 32.2761C18.5969 32.2695 18.6674 32.2329 18.7167 32.1744C18.766 32.1158 18.7899 32.0401 18.7834 31.9638C18.4899 28.5628 18.5182 26.4195 18.5275 25.715C18.5288 25.6248 18.5298 25.5499 18.5248 25.4872H18.5266C18.5266 24.3299 18.2147 23.7025 17.7011 22.8067L17.3474 22.1897C16.775 21.1915 16.7826 19.9942 16.8758 18.8489L16.8941 18.6252C16.9976 17.3528 16.5499 16.9116 15.983 16.3534C15.7706 16.1441 15.5298 15.907 15.2768 15.5886C14.3067 14.3683 13.8146 12.8435 13.7722 10.9272C13.7658 10.642 13.7162 10.3376 13.6762 10.0928C13.663 10.012 13.6506 9.93627 13.6408 9.86779C13.487 8.78779 12.5731 8.01931 11.4182 7.99899C11.2186 7.99544 11.0189 7.98974 10.8194 7.98188C10.8085 7.98021 10.7976 7.9792 10.7867 7.97883C9.77554 7.93739 8.62225 7.62572 7.50417 7.3238C5.54129 6.79372 3.51169 6.24524 2.63969 7.29292C2.30225 7.6982 2.25505 8.17499 2.50369 8.67211C2.89313 9.45083 4.04801 9.9678 5.93921 10.2158C5.59985 10.4523 5.38017 10.7672 5.34113 11.1348C5.29457 11.575 5.51186 12.0062 5.94962 12.3584C3.78225 11.8979 1.77729 10.3771 1.22609 9.03484C0.890732 8.21804 1.05009 7.355 1.67505 6.60412C2.95713 5.0638 5.39425 5.72683 7.54433 6.31179L7.85361 6.39563C8.86961 6.67004 9.91905 6.95356 10.7771 7.00428C10.7902 7.00668 10.8035 7.00812 10.8171 7.00876L10.8453 7.00987C12.3566 7.06987 13.8094 6.57323 14.9374 5.60923C16.8845 3.94539 18.915 3.93707 19.891 3.93323L19.9152 3.93308C21.3298 3.92684 22.9312 3.92076 24.6165 5.41084C25.8502 6.50188 27.3952 7.07308 28.9658 7.01532L29.136 7.00876C30.0094 6.97324 31.096 6.6798 32.1493 6.39532L32.4565 6.31195C34.6066 5.72731 37.0435 5.06428 38.3258 6.60428C38.9507 7.35516 39.1101 8.21836 38.7747 9.035C38.3107 10.1648 36.6574 11.4673 34.7643 12.0825C35.0082 11.7913 35.123 11.4657 35.088 11.135C35.0461 10.7406 34.7984 10.4059 34.4157 10.1646C36.0966 9.90028 37.1325 9.40107 37.4971 8.67227C37.7456 8.17515 37.6986 7.69836 37.361 7.29324C36.4891 6.2454 34.4594 6.79372 32.4938 7.32475C31.3784 7.62603 30.225 7.93756 29.2141 7.97916C28.7776 7.99676 28.3986 8.00524 28.0555 8.00204C27.5496 8.00124 27.0914 8.18859 26.7411 8.53643C26.3856 8.88939 26.1899 9.36283 26.1898 9.86939C26.1896 10.1206 26.1742 10.3652 26.1541 10.6592C25.9987 12.9249 25.5338 14.3539 24.5493 15.5913C24.2962 15.9096 24.0552 16.1465 23.8427 16.3556C23.2762 16.9129 22.8286 17.3532 22.9314 18.6246L22.9653 19.0444C23.0514 20.1088 23.0947 21.2265 22.6094 22.168L22.2562 22.8537C21.811 23.7171 21.5592 24.2564 21.5598 25.316C21.5616 25.3432 21.7264 28.0795 21.3032 31.9577C21.2991 31.9954 21.3024 32.0335 21.3131 32.0699C21.3237 32.1062 21.3414 32.1401 21.3651 32.1697C21.3888 32.1992 21.4181 32.2238 21.4513 32.242C21.4846 32.2602 21.5211 32.2717 21.5587 32.2758C21.5964 32.2799 21.6345 32.2766 21.6709 32.2659C21.7072 32.2553 21.7411 32.2376 21.7707 32.2139C21.8002 32.1902 21.8248 32.1609 21.843 32.1276C21.8612 32.0944 21.8727 32.0579 21.8768 32.0203C22.3058 28.0891 22.1374 25.3072 22.1363 25.2979C22.1363 24.3862 22.3418 23.9473 22.7691 23.118L23.1224 22.4323C23.6773 21.3558 23.6331 20.1454 23.5405 18.998L23.5066 18.5782C23.4254 17.5756 23.7002 17.3054 24.2474 16.7672C24.4717 16.5465 24.7258 16.2964 25.0008 15.9508C26.0648 14.6134 26.5658 13.0918 26.7298 10.6987C26.7462 10.459 26.7667 10.1606 26.7667 9.86971C26.7669 9.51787 26.9021 9.18988 27.1477 8.94604C27.3882 8.70732 27.7114 8.58092 28.0517 8.57932C28.404 8.58156 28.7918 8.57404 29.2376 8.5558C30.3131 8.5118 31.4982 8.19164 32.647 7.88124C34.351 7.42108 36.2821 6.89931 36.9174 7.66267C37.1098 7.89355 37.1288 8.11851 36.9808 8.41451C36.6214 9.13307 35.1338 9.60908 32.7909 9.75772C32.6528 9.7582 32.5123 9.76396 32.3685 9.77916C31.7142 9.8486 31.111 10.0678 30.6701 10.3964C30.1851 10.758 29.945 11.2123 29.9941 11.6753C30.0806 12.492 31.0475 13.0548 32.2742 13.0548C32.4174 13.0548 32.564 13.0472 32.7133 13.0313C32.7579 13.0265 32.8018 13.0195 32.8459 13.0132C35.4544 12.9307 38.5339 11.1396 39.3082 9.25435C39.7286 8.23035 39.5371 7.1582 38.769 6.23516C37.2496 4.41036 34.6226 5.12492 32.3048 5.75516L31.996 5.83899C30.976 6.11451 29.9211 6.39931 29.1125 6.43227L28.9446 6.43883C27.5226 6.49067 26.1211 5.97132 24.9986 4.97883C23.1485 3.34283 21.3542 3.34987 19.9126 3.35627L19.8885 3.35643C18.8438 3.36059 16.6702 3.36955 14.5622 5.17099C13.5579 6.0294 12.2648 6.4766 10.919 6.43548C10.9088 6.43395 10.8984 6.43299 10.888 6.4326C10.079 6.39948 9.02402 6.11452 8.00162 5.83852L7.69553 5.75548C5.37777 5.12492 2.75057 4.41035 1.23137 6.23548C0.463053 7.15836 0.271533 8.23067 0.692173 9.25451C1.40465 10.9892 4.18417 12.9841 7.03377 13.0728ZM5.91473 11.1958C5.96865 10.6876 6.81905 10.2276 7.99921 10.3528C9.17937 10.4779 9.91442 11.106 9.8605 11.6142C9.80658 12.1224 8.95553 12.582 7.77601 12.4572C7.22305 12.3987 6.72081 12.2188 6.36161 11.9512C6.17937 11.8152 5.87873 11.5361 5.91473 11.1958ZM34.0666 11.9512C33.7075 12.2188 33.2051 12.3987 32.6522 12.4572C31.472 12.582 30.6214 12.1224 30.5677 11.6142C30.5315 11.2739 30.8323 10.9948 31.0147 10.8588C31.3738 10.5911 31.8762 10.4113 32.4291 10.3528C32.5622 10.3387 32.691 10.332 32.815 10.332C33.7909 10.332 34.4658 10.7449 34.5136 11.1958C34.5498 11.5361 34.2491 11.8152 34.0666 11.9512Z' stroke='#8254C6' stroke-width='0.5'/>\r\n</g>\r\n<path d='M18.0654 19.4564L18.084 19.2324C18.1619 18.2756 17.9967 17.6035 17.7351 17.0921C17.4723 16.5785 17.1094 16.2202 16.7754 15.8913L16.774 15.8898C16.574 15.6929 16.381 15.5028 16.1784 15.248C15.3954 14.2628 15.0016 12.9991 14.9661 11.3952C14.9634 11.2722 14.9986 10.9473 15.0674 10.4369C15.1368 9.92196 15.2418 9.20863 15.3818 8.3008C15.5018 7.52383 15.9526 6.85664 16.6202 6.47258C17.6048 5.9056 18.6716 5.6178 19.7891 5.6178H19.807C20.9239 5.6178 21.9905 5.9056 22.9753 6.47257C23.6428 6.85678 24.0937 7.52379 24.2135 8.3008C24.3536 9.20847 24.4586 9.92172 24.528 10.4367C24.5967 10.9471 24.6319 11.272 24.6293 11.3952C24.5937 12.9991 24.2 14.2628 23.417 15.248C23.2147 15.5025 23.0215 15.6928 22.8214 15.8898L22.8199 15.8913C22.4859 16.2203 22.1229 16.5786 21.8602 17.0923C21.5986 17.6037 21.4334 18.2757 21.5113 19.2325L21.5296 19.4564C21.5662 19.9069 21.5785 20.2489 21.5684 20.564L18.0654 19.4564ZM18.0654 19.4564C18.0288 19.9065 18.0167 20.2486 18.0268 20.564ZM18.0654 19.4564L19.74 22.2343ZM19.74 22.2343C18.8072 22.215 18.056 21.4826 18.0268 20.564ZM19.74 22.2343H19.7421ZM19.74 22.2343H19.7421ZM19.7421 22.2343H19.8531ZM19.7421 22.2343H19.8531ZM19.8531 22.2343L19.8558 22.2342ZM19.8531 22.2343L19.8558 22.2342ZM19.8558 22.2342L19.8611 22.2341ZM19.8558 22.2342L19.8611 22.2341ZM16.7864 14.7643C16.9584 14.9808 17.1311 15.151 17.3185 15.3357L17.3204 15.3376L17.323 15.3401C17.6588 15.6709 18.0903 16.0959 18.4131 16.7198C18.7377 17.3472 18.9498 18.1701 18.8581 19.2955M16.7864 14.7643L18.7584 19.2874L18.8581 19.2955M16.7864 14.7643C16.1192 13.925 15.7747 12.821 15.7427 11.378L15.6427 11.3802M16.7864 14.7643L20.8363 19.2875L20.8546 19.5114C20.8893 19.9371 20.9006 20.2551 20.8915 20.5424C20.8739 21.0989 20.4165 21.5442 19.8496 21.5571M19.7488 21.4573C19.2329 21.4461 18.8192 21.0415 18.8033 20.5393C18.7917 20.1725 18.8184 19.7829 18.8398 19.5195L18.7034 20.5424C18.721 21.0999 19.1798 21.5456 19.7478 21.5573M19.7488 21.4573H19.7477L19.7478 21.5573M19.7488 21.4573C19.7492 21.4573 19.7495 21.4573 19.7499 21.4573L19.7478 21.5573M19.7488 21.4573L19.8483 21.4571ZM19.7478 21.5573L19.8496 21.5571ZM19.8496 21.5571L19.8473 21.4572C19.8477 21.4572 19.848 21.4571 19.8483 21.4571M19.8496 21.5571L19.8494 21.4571H19.8483M19.8483 21.4571C20.3633 21.4448 20.7757 21.0407 20.7916 20.5392C20.8005 20.257 20.7894 19.9431 20.7549 19.5195L20.7366 19.2957C20.645 18.1704 20.8572 17.3474 21.1819 16.72C21.5047 16.0959 21.9363 15.6708 22.2721 15.34L22.2744 15.3377C22.4626 15.1522 22.636 14.9815 22.8084 14.7645C23.4757 13.925 23.8202 12.821 23.8522 11.378C23.8527 11.3524 23.848 11.2387 23.7937 10.8134C23.7397 10.3906 23.6375 9.66454 23.4453 8.41913C23.3613 7.87428 23.048 7.41086 22.5874 7.14575C21.721 6.6471 20.7855 6.3946 19.8059 6.3946H19.7898C18.8094 6.3946 17.874 6.64695 17.0076 7.14575C16.5471 7.41086 16.2337 7.87412 16.1495 8.41915C15.9574 9.66471 15.8552 10.3908 15.8012 10.8136C15.7468 11.2395 15.7422 11.3527 15.7427 11.378L15.6427 11.3802M15.6427 11.3802C15.6413 11.312 15.6662 10.8957 16.0507 8.40388C16.1394 7.82996 16.4699 7.33988 16.9578 7.05908L15.6427 11.3802ZM19.8611 22.2341C19.861 22.2341 19.8612 22.2341 19.8611 22.2341ZM19.8611 22.2341C20.7881 22.2148 21.5392 21.4823 21.5684 20.564L19.8611 22.2341ZM19.6137 33.3124L19.6156 33.308C19.75 32.9897 19.8957 32.6445 20.0382 32.2559C20.2127 32.6932 20.4056 33.2012 20.5638 33.6717C20.6581 33.9524 20.7396 34.2186 20.7975 34.4479C20.8558 34.6793 20.8882 34.8658 20.8882 34.9903C20.8882 35.5991 20.4743 36.0642 20.0002 36.0642C19.526 36.0642 19.1122 35.5992 19.1122 34.9903C19.112 34.5039 19.3264 33.9923 19.6137 33.3124ZM20 36.745C20.876 36.745 21.5688 35.9464 21.5688 34.9903C21.5688 34.7477 21.4951 34.4025 21.3879 34.025C21.2799 33.6446 21.1349 33.2217 20.9864 32.8194C20.6893 32.0147 20.3764 31.2876 20.3122 31.1398C20.2842 31.0755 20.2371 31.0213 20.1771 30.9848C20.1172 30.9483 20.0474 30.9311 19.9774 30.9358C19.9074 30.9404 19.8405 30.9666 19.7859 31.0107C19.7313 31.0548 19.6917 31.1147 19.6725 31.1822C19.4615 31.9223 19.2101 32.5176 18.9863 33.0473L18.9815 33.0585C18.6798 33.7724 18.431 34.3611 18.431 34.9903C18.4312 35.9464 19.124 36.745 20 36.745Z' fill='#8254C6'/>\r\n<path d='M18.0654 19.4564L18.084 19.2324C18.1619 18.2756 17.9967 17.6035 17.7351 17.0921C17.4723 16.5785 17.1094 16.2202 16.7754 15.8913L16.774 15.8898C16.574 15.6929 16.381 15.5028 16.1784 15.248C15.3954 14.2628 15.0016 12.9991 14.9661 11.3952C14.9634 11.2722 14.9986 10.9473 15.0674 10.4369C15.1368 9.92196 15.2418 9.20863 15.3818 8.3008C15.5018 7.52383 15.9526 6.85664 16.6202 6.47258C17.6048 5.9056 18.6716 5.6178 19.7891 5.6178H19.807C20.9239 5.6178 21.9905 5.9056 22.9753 6.47257C23.6428 6.85678 24.0937 7.52379 24.2135 8.3008C24.3536 9.20847 24.4586 9.92172 24.528 10.4367C24.5967 10.9471 24.6319 11.272 24.6293 11.3952C24.5937 12.9991 24.2 14.2628 23.417 15.248C23.2147 15.5025 23.0215 15.6928 22.8214 15.8898L22.8199 15.8913C22.4859 16.2203 22.1229 16.5786 21.8602 17.0923C21.5986 17.6037 21.4334 18.2757 21.5113 19.2325L21.5296 19.4564C21.5662 19.9069 21.5785 20.2489 21.5684 20.564M18.0654 19.4564L21.5684 20.564M18.0654 19.4564C18.0288 19.9065 18.0167 20.2486 18.0268 20.564M18.0654 19.4564L19.74 22.2343M21.5684 20.564C21.5392 21.4823 20.7881 22.2148 19.8611 22.2341M21.5684 20.564L19.8611 22.2341M18.0268 20.564C18.056 21.4826 18.8072 22.215 19.74 22.2343M18.0268 20.564L18.1267 20.5608M19.74 22.2343H19.7421H19.8531L19.8558 22.2342L19.8611 22.2341M19.8611 22.2341C19.8612 22.2341 19.861 22.2341 19.8611 22.2341ZM16.7864 14.7643C16.9584 14.9808 17.1311 15.151 17.3185 15.3357L17.3204 15.3376L17.323 15.3401C17.6588 15.6709 18.0903 16.0959 18.4131 16.7198C18.7377 17.3472 18.9498 18.1701 18.8581 19.2955M16.7864 14.7643L18.7584 19.2874L18.8581 19.2955M16.7864 14.7643C16.1192 13.925 15.7747 12.821 15.7427 11.378M16.7864 14.7643L20.8363 19.2875L20.8546 19.5114C20.8893 19.9371 20.9006 20.2551 20.8915 20.5424C20.8739 21.0989 20.4165 21.5442 19.8496 21.5571M18.8581 19.2955L18.8398 19.5195M15.7427 11.378L15.6427 11.3802M15.7427 11.378C15.7422 11.3527 15.7468 11.2395 15.8012 10.8136C15.8552 10.3908 15.9574 9.66471 16.1495 8.41915C16.2337 7.87412 16.5471 7.41086 17.0076 7.14575C17.874 6.64695 18.8094 6.3946 19.7898 6.3946H19.8059C20.7855 6.3946 21.721 6.6471 22.5874 7.14575C23.048 7.41086 23.3613 7.87428 23.4453 8.41913C23.6375 9.66454 23.7397 10.3906 23.7937 10.8134C23.848 11.2387 23.8527 11.3524 23.8522 11.378C23.8202 12.821 23.4757 13.925 22.8084 14.7645C22.636 14.9815 22.4626 15.1522 22.2744 15.3377L22.2721 15.34C21.9363 15.6708 21.5047 16.0959 21.1819 16.72C20.8572 17.3474 20.645 18.1704 20.7366 19.2957L20.7549 19.5195C20.7894 19.9431 20.8005 20.257 20.7916 20.5392C20.7757 21.0407 20.3633 21.4448 19.8483 21.4571M15.6427 11.3802C15.6413 11.312 15.6662 10.8957 16.0507 8.40388C16.1394 7.82996 16.4699 7.33988 16.9578 7.05908L15.6427 11.3802ZM19.8496 21.5571L19.7478 21.5573M19.8496 21.5571L19.8473 21.4572C19.8477 21.4572 19.848 21.4571 19.8483 21.4571M19.8496 21.5571L19.8494 21.4571H19.8483M18.8398 19.5195C18.8184 19.7829 18.7917 20.1725 18.8033 20.5393C18.8192 21.0415 19.2329 21.4461 19.7488 21.4573M18.8398 19.5195L18.7034 20.5424C18.721 21.0999 19.1798 21.5456 19.7478 21.5573M19.7488 21.4573H19.7477L19.7478 21.5573M19.7488 21.4573C19.7492 21.4573 19.7495 21.4573 19.7499 21.4573L19.7478 21.5573M19.7488 21.4573L19.8483 21.4571M19.6137 33.3124L19.6156 33.308C19.75 32.9897 19.8957 32.6445 20.0382 32.2559C20.2127 32.6932 20.4056 33.2012 20.5638 33.6717C20.6581 33.9524 20.7396 34.2186 20.7975 34.4479C20.8558 34.6793 20.8882 34.8658 20.8882 34.9903C20.8882 35.5991 20.4743 36.0642 20.0002 36.0642C19.526 36.0642 19.1122 35.5992 19.1122 34.9903C19.112 34.5039 19.3264 33.9923 19.6137 33.3124ZM20 36.745C20.876 36.745 21.5688 35.9464 21.5688 34.9903C21.5688 34.7477 21.4951 34.4025 21.3879 34.025C21.2799 33.6446 21.1349 33.2217 20.9864 32.8194C20.6893 32.0147 20.3764 31.2876 20.3122 31.1398C20.2842 31.0755 20.2371 31.0213 20.1771 30.9848C20.1172 30.9483 20.0474 30.9311 19.9774 30.9358C19.9074 30.9404 19.8405 30.9666 19.7859 31.0107C19.7313 31.0548 19.6917 31.1147 19.6725 31.1822C19.4615 31.9223 19.2101 32.5176 18.9863 33.0473L18.9815 33.0585C18.6798 33.7724 18.431 34.3611 18.431 34.9903C18.4312 35.9464 19.124 36.745 20 36.745Z' stroke='#8254C6' stroke-width='0.5'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_160_577'>\r\n<rect width='40' height='34' fill='white' transform='translate(0 3)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "ovarianCancer",
              meaning:
                "\u0633\u0631\u0637\u0627\u0646 \u062a\u062e\u0645\u062f\u0627\u0646",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_158_491)'>\r\n<path d='M4.46881 16.2202L4.76319 16.4718C6.36142 17.8381 8.76955 20.9442 10.336 19.2106C11.9025 17.4769 15.1245 15.8464 15.1245 15.8464C15.9249 15.3166 16.7021 14.7518 17.4493 14.1486C17.5786 14.044 17.7115 13.9438 17.8475 13.848M8.761 23.0923L4.46875 19.189M31.9697 17.4904C33.8121 18.6108 35.1361 20.5002 35.4962 22.7134L35.5312 24.9053C35.2175 27.3364 33.7451 29.4038 31.6853 30.5366C30.0063 31.4597 28.3968 32.51 26.9057 33.7136C25.6131 34.7576 23.9679 35.382 22.1775 35.382C20.3864 35.382 18.7418 34.7576 17.4492 33.7136C15.9713 32.5206 14.3775 31.4786 12.7147 30.5617L10.3333 28.6667' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M10.9586 29.2491C9.60092 27.8869 8.76111 26.0069 8.76111 23.9315C8.76111 21.0845 10.3399 18.6071 12.6696 17.3263C12.8669 17.2179 13.0632 17.1074 13.2583 16.995M26.6402 24.8901C26.6402 23.1532 27.8658 21.7025 29.4995 21.3558M20.3032 27.6938C22.0348 27.5571 23.5774 28.6649 24.0515 30.2661M15.6452 20.8605C16.8624 22.0996 17.0046 23.9933 16.0822 25.3855M27.9052 10.8507C27.7061 10.2614 27.6447 9.62767 27.7443 8.9951C27.9709 7.54713 28.0848 6.08376 28.085 4.61816' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M29.1171 12.6825C29.6356 13.2969 29.8936 13.9751 29.7427 14.5901C30.0117 14.5757 30.281 14.6121 30.5368 14.6965C31.5552 15.0303 32.1826 16.0819 31.9916 17.1365C31.7668 18.3783 30.5474 19.1561 29.3407 18.8587C29.1596 18.8143 28.9848 18.7467 28.8209 18.6577C28.8209 18.6571 28.8203 18.6571 28.8203 18.6571C28.4834 19.0165 27.968 19.1893 27.4556 19.0629C27.1062 18.9771 26.8206 18.7666 26.6321 18.4911C25.942 19.0779 24.9894 19.3365 24.0425 19.1036C23.0956 18.8706 22.3723 18.1999 22.0328 17.3595C21.7385 17.5161 21.3878 17.5699 21.0384 17.4841C20.526 17.3576 20.1496 16.9655 20.0182 16.4909C19.8315 16.494 19.6446 16.4729 19.4633 16.4282C18.2584 16.132 17.5394 14.8813 17.9126 13.6783C18.2308 12.6525 19.2766 12.0087 20.3363 12.1859C20.6019 12.2301 20.8569 12.3233 21.0884 12.4609V12.4602C21.2669 11.7375 21.9852 11.2008 22.9364 10.9177C24.4676 10.4624 25.5937 9.1636 25.774 7.5766C25.8863 6.59445 25.9425 5.60671 25.9424 4.61816' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M21.0885 12.4603C21.3493 12.6153 21.5746 12.8235 21.7497 13.0713M28.874 14.8241C29.1439 14.6861 29.4399 14.6064 29.7426 14.5901M20.0175 16.4911C19.9533 16.2589 19.95 16.0141 20.0079 15.7803C20.0437 15.6344 20.1026 15.4951 20.1824 15.3679M29.1959 17.586C29.2076 17.7358 29.1951 17.8865 29.1591 18.0323C29.1019 18.2663 28.9853 18.4817 28.8207 18.6575' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_158_491'>\r\n<rect width='32' height='32' fill='white' transform='translate(4 4)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "breastCancer",
              meaning:
                "\u0633\u0631\u0637\u0627\u0646 \u0633\u06cc\u0646\u0647",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_158_498)'>\r\n<path d='M18.9167 29.4773V35.375H32.9426V4.625H18.9167L12.7763 13.2475C11.4476 15.1113 9.77874 17.4356 9.15156 19.7157H8.78131C7.83349 19.7157 7.0575 20.4917 7.0575 21.4413C7.0575 22.3891 7.83349 23.1651 8.78131 23.1651H9.05062C9.75574 26.5276 12.7409 29.3799 16.8209 29.4774C20.1267 29.5553 23.6186 28.0725 25.5001 26.3204' stroke='#8254C6' stroke-width='1.2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M19.0548 13.6533C20.3552 13.6533 20.6687 14.7039 21.7955 15.3558C22.9205 16.006 23.9887 15.7509 24.6389 16.8776C25.2891 18.0044 24.5344 18.7998 24.5344 20.102C24.5344 21.4024 25.2891 22.1996 24.6389 23.3264C23.9887 24.4514 22.9204 24.198 21.7955 24.8482C20.6687 25.4984 20.3552 26.5489 19.0548 26.5489C17.7526 26.5489 17.4408 25.4984 16.3141 24.8482C15.1874 24.198 14.1208 24.4514 13.4706 23.3264C12.8187 22.1996 13.5734 21.4024 13.5734 20.102C13.5734 18.7999 12.8187 18.0044 13.4706 16.8776C14.1208 15.7509 15.1874 16.006 16.3141 15.3558C17.4408 14.7039 17.7526 13.6533 19.0548 13.6533Z' stroke='#8254C6' stroke-width='1.2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M19.0548 23.1882V23.1917M21.6521 20.8815V20.8851M17.8714 20.3359C18.6704 20.3359 19.3206 19.684 19.3206 18.8867C19.3206 18.0877 18.6704 17.4375 17.8714 17.4375C17.0742 17.4375 16.4222 18.0877 16.4222 18.8867C16.4222 19.6839 17.0742 20.3359 17.8714 20.3359Z' stroke='#8254C6' stroke-width='1.2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_158_498'>\r\n<rect width='28' height='32' fill='white' transform='translate(6 4)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "uterineAdhesions",
              meaning:
                "\u0686\u0633\u0628\u0646\u062f\u06af\u06cc \u0631\u062d\u0645",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_160_574)'>\r\n<path d='M32.3113 7.42885L32.0048 7.5123C30.9826 7.78918 29.9256 8.0754 29.1127 8.10866L28.9453 8.11523C27.517 8.16848 26.1086 7.64461 24.981 6.6443C23.1386 5.01056 21.3503 5.01844 19.9126 5.02369L19.8892 5.02384C18.8477 5.02792 16.6803 5.03638 14.5792 6.83715C13.5699 7.70238 12.272 8.15083 10.9171 8.11173C10.9071 8.11011 10.897 8.10908 10.8868 8.10866C10.0745 8.0754 9.01762 7.78918 7.99478 7.51215L7.68875 7.42885C5.37849 6.79835 2.76017 6.08396 1.25151 7.90151C0.489766 8.8194 0.299656 9.88522 0.716383 10.9029C1.42591 12.6352 4.19522 14.6275 7.03493 14.7161L7.03915 14.7163C7.11391 14.7163 7.53907 14.6749 7.64366 14.6644C7.66867 14.6674 7.69311 14.6718 7.71813 14.6744C7.86329 14.69 8.00758 14.6975 8.14955 14.6975C8.64307 14.6975 9.10956 14.6052 9.49456 14.4286C10.0358 14.18 10.3605 13.7926 10.4086 13.3378C10.4566 12.883 10.2204 12.4358 9.74301 12.0791C9.30574 11.7522 8.70722 11.5341 8.05747 11.4651C7.81043 11.4385 7.56144 11.4352 7.31377 11.4551C7.29949 11.4515 7.28495 11.4491 7.27027 11.4479C4.88104 11.3029 3.36322 10.8178 2.99624 10.0819C2.84293 9.7742 2.86286 9.54006 3.06286 9.29921C3.70867 8.52078 5.64802 9.04596 7.36409 9.51103C8.47886 9.81301 9.63056 10.1249 10.68 10.1815C10.6919 10.1837 10.704 10.1852 10.7164 10.1856C10.9471 10.1948 11.1782 10.2024 11.4085 10.2063C12.2868 10.2218 12.9806 10.7974 13.0953 11.6059C13.1055 11.678 13.1185 11.7578 13.1324 11.8428C13.1716 12.0831 13.2159 12.3554 13.2213 12.6027C13.2665 14.6497 13.7977 16.2877 14.8454 17.6097C15.1193 17.9551 15.3726 18.2056 15.5964 18.4265C16.1498 18.9733 16.4276 19.2475 16.3449 20.2666L16.3267 20.4909C16.2262 21.7283 16.2225 23.0293 16.8696 24.1611L17.2233 24.7801C17.7348 25.6748 17.9757 26.2047 17.9757 27.1938C17.9757 27.2066 17.9766 27.2194 17.9785 27.232C17.9789 27.2636 17.9779 27.3249 17.9767 27.415C17.9673 28.1282 17.9388 30.2987 18.2346 33.7367C18.2418 33.8052 18.2756 33.8682 18.3286 33.9121C18.3816 33.9559 18.4496 33.9772 18.5181 33.9713C18.5866 33.9653 18.65 33.9327 18.6947 33.8805C18.7396 33.8281 18.762 33.7603 18.7574 33.6914C18.4639 30.2796 18.4923 28.1287 18.5016 27.4219C18.5027 27.329 18.5037 27.2544 18.4991 27.1938H18.5006C18.5006 26.0395 18.19 25.4133 17.6786 24.5184L17.3248 23.8995C16.749 22.892 16.7563 21.6863 16.8497 20.5336L16.8679 20.3094C16.9706 19.0455 16.5486 18.6286 15.9646 18.0517C15.7517 17.8413 15.5103 17.603 15.2563 17.2823C14.2825 16.0535 13.7886 14.5191 13.7459 12.5912C13.7396 12.307 13.6901 12.0027 13.6502 11.7581C13.6376 11.6828 13.6259 11.6074 13.6148 11.5319C13.463 10.4616 12.5596 9.70024 11.4177 9.68011C11.2173 9.67651 11.0169 9.67072 10.8166 9.66275C10.8064 9.66114 10.796 9.66011 10.7856 9.65969C9.77237 9.61811 8.61777 9.30534 7.49587 9.00132C5.54169 8.47206 3.52104 7.92471 2.65995 8.96222C2.32497 9.36588 2.28031 9.82162 2.52729 10.317C2.91755 11.0997 4.08977 11.6161 6.01282 11.8596C5.63464 12.1025 5.40686 12.4285 5.36744 12.8014C5.31944 13.2562 5.55566 13.7034 6.03304 14.0601C6.03958 14.0651 6.047 14.0693 6.05369 14.0742C3.83653 13.6391 1.76526 12.0777 1.20206 10.7025C0.862711 9.87399 1.02358 8.99869 1.65515 8.23792C2.94809 6.67989 5.39377 7.34716 7.55144 7.93609L7.85922 8.01982C8.87507 8.2951 9.92456 8.57914 10.7806 8.62976C10.7916 8.6318 10.8029 8.63311 10.8146 8.63384L10.8465 8.63515C12.3506 8.69482 13.7976 8.19911 14.9205 7.23673C16.8754 5.56141 18.9126 5.55324 19.8916 5.5496L19.9152 5.54945C21.3338 5.54464 22.9414 5.53705 24.6339 7.03818C25.8627 8.12792 27.4007 8.69759 28.9639 8.64055L29.135 8.63399C30.0061 8.59839 31.0919 8.30415 32.1426 8.01968L32.4495 7.93609C34.6073 7.34745 37.053 6.68018 38.3459 8.23792C38.9774 8.99869 39.1384 9.87413 38.799 10.7025C38.3256 11.8584 36.6214 13.1931 34.6848 13.8007C34.9656 13.4972 35.0989 13.1519 35.062 12.8014C35.0199 12.4034 34.7663 12.0573 34.341 11.8104C36.0545 11.55 37.1078 11.0505 37.4736 10.317C37.7205 9.82176 37.6758 9.36602 37.3408 8.96222C36.4797 7.92471 34.4589 8.47177 32.4996 9.00278C31.383 9.30519 30.2283 9.61796 29.2152 9.65954C28.7777 9.67734 28.3987 9.68522 28.0553 9.68259H28.0429C27.5573 9.68259 27.102 9.8699 26.7596 10.211C26.4439 10.5254 26.2575 10.9366 26.2231 11.3814C25.7663 11.2667 25.2971 11.2088 24.8262 11.2088C24.6416 11.2088 24.4591 11.2184 24.2788 11.2355C24.225 10.8683 24.1619 10.4489 24.089 9.97508C23.9748 9.23298 23.5461 8.59752 22.9125 8.23164C21.9466 7.67394 20.9018 7.39136 19.8079 7.39136C19.8015 7.39151 19.795 7.39151 19.7886 7.39136C18.6938 7.39136 17.649 7.67408 16.6832 8.23164C16.0496 8.59752 15.6208 9.23283 15.5066 9.97508C15.2268 11.7937 15.0875 12.8303 15.0924 13.0564C15.1275 14.6438 15.5149 15.8829 16.2773 16.8446C16.4756 17.0948 16.673 17.2896 16.8642 17.4784C17.5347 18.1408 18.3694 18.9655 18.2097 20.9297L18.1915 21.1543C18.1551 21.6028 18.1433 21.9408 18.153 22.2508C18.1801 23.1036 18.8756 23.7856 19.7421 23.8034H19.8585C20.7196 23.7856 21.4153 23.1036 21.4422 22.2508C21.4477 22.0545 21.4458 21.858 21.4364 21.6619C21.9174 22.014 22.4501 22.2891 23.0153 22.4772C22.968 22.9654 22.8566 23.439 22.6323 23.8755L22.279 24.5633C21.8358 25.4257 21.585 25.9644 21.5855 27.0192C21.5872 27.0465 21.7522 29.7927 21.3287 33.6848C21.3212 33.7541 21.3414 33.8237 21.3849 33.8781C21.4285 33.9325 21.4917 33.9673 21.5609 33.9749C21.63 33.9825 21.6994 33.9622 21.7536 33.9186C21.8079 33.875 21.8426 33.8114 21.8502 33.7421C22.279 29.8015 22.1108 27.0139 22.1096 27.0027C22.1096 26.0825 22.3159 25.6401 22.7453 24.8046L23.0986 24.1167C23.3438 23.6394 23.471 23.1353 23.5289 22.6218C23.9542 22.7207 24.3893 22.7709 24.8259 22.7711C26.0826 22.7723 27.3048 22.3594 28.3046 21.5958L28.7714 22.0639L28.6236 22.2121C28.5201 22.3162 28.4619 22.4571 28.4619 22.6041C28.4619 22.7511 28.5201 22.892 28.6236 22.9961L32.5695 26.9538C32.6773 27.0618 32.8188 27.1158 32.9603 27.1158C33.1018 27.1158 33.2434 27.0618 33.3512 26.9538L33.9556 26.3475C34.0592 26.2434 34.1173 26.1025 34.1173 25.9555C34.1173 25.8085 34.0592 25.6675 33.9556 25.5635L30.0097 21.6058C29.906 21.5021 29.7655 21.4438 29.6189 21.4438C29.4724 21.4438 29.3318 21.5021 29.2281 21.6058L29.0805 21.7539L28.6438 21.316C29.8364 20.256 30.5901 18.71 30.5901 16.9898C30.5901 14.475 28.9803 12.3312 26.7401 11.5378L26.7403 11.5292C26.7404 11.1693 26.8785 10.8336 27.1289 10.5841C27.2502 10.4634 27.3943 10.368 27.5526 10.3036C27.711 10.2391 27.8806 10.2068 28.0516 10.2086C28.4031 10.2117 28.7903 10.2031 29.2361 10.1852C30.3079 10.1411 31.4916 9.82045 32.6412 9.50899C34.3522 9.04552 36.2914 8.5202 36.9374 9.29863C37.1375 9.53962 37.1574 9.77377 37.0041 10.0813C36.6407 10.8101 35.1472 11.2923 32.7981 11.4425C32.6575 11.4427 32.5149 11.4491 32.3712 11.4645C31.7215 11.5335 31.1229 11.7516 30.6857 12.0786C30.2085 12.4354 29.9721 12.8824 30.0201 13.3372C30.0683 13.7921 30.3927 14.1796 30.9341 14.428C31.3191 14.6048 31.7856 14.6968 32.2792 14.6968C32.4211 14.6968 32.5654 14.6893 32.7106 14.6738C32.7552 14.669 32.799 14.6618 32.8434 14.6557C35.4432 14.5738 38.5129 12.7852 39.2841 10.9022C39.7008 9.88449 39.5107 8.81867 38.749 7.90078C37.24 6.0844 34.6216 6.79864 32.3113 7.42885ZM5.88875 12.8574C5.92613 12.5031 6.28744 12.2869 6.49937 12.1894C6.81646 12.0438 7.20598 11.9681 7.62315 11.9681C7.74737 11.9681 7.87406 11.9748 8.00206 11.9884C8.55958 12.0478 9.06649 12.2298 9.42937 12.501C9.61628 12.6408 9.92428 12.9282 9.88683 13.2825C9.84947 13.6369 9.48819 13.8531 9.27628 13.9506C8.86475 14.1395 8.33107 14.2105 7.77355 14.1515C7.21602 14.0921 6.70911 13.9101 6.3462 13.6389C6.15915 13.4991 5.85122 13.2117 5.88875 12.8574ZM28.9326 22.5227L29.5372 21.9165C29.5597 21.8938 29.5893 21.8825 29.6189 21.8825C29.6486 21.8825 29.6781 21.8938 29.7006 21.9165L33.6465 25.8741C33.6915 25.9193 33.6915 25.9928 33.6465 26.038L33.0419 26.6443C33.0312 26.6551 33.0185 26.6637 33.0045 26.6695C32.9905 26.6752 32.9754 26.6782 32.9603 26.6782C32.9451 26.6782 32.93 26.6752 32.916 26.6695C32.902 26.6637 32.8893 26.6551 32.8786 26.6443L28.9326 22.6867C28.911 22.6649 28.8988 22.6355 28.8988 22.6047C28.8988 22.5739 28.911 22.5445 28.9326 22.5227ZM20.9178 22.2348C20.8998 22.8071 20.431 23.2649 19.8502 23.2781H19.7476C19.1656 23.2661 18.6955 22.8079 18.6774 22.2348C18.6683 21.9456 18.6796 21.6257 18.7144 21.198L18.7326 20.9733C18.912 18.7639 17.9013 17.7652 17.232 17.1041C17.0439 16.9183 16.8662 16.743 16.6879 16.5177C15.9996 15.6494 15.6492 14.5135 15.6167 13.0453C15.6152 12.9763 15.6402 12.5565 16.025 10.0558C16.1147 9.47237 16.4501 8.97389 16.9447 8.68811C17.83 8.17723 18.7866 7.91814 19.7891 7.91814H19.8068C20.8086 7.91814 21.7654 8.17723 22.6505 8.68811C23.1452 8.97375 23.4805 9.47237 23.5704 10.0558C23.6467 10.5516 23.7086 10.9645 23.7591 11.3102C21.0887 11.8136 19.0616 14.1684 19.0616 16.9905C19.0616 18.6487 19.7624 20.145 20.8812 21.2002C20.9156 21.6267 20.927 21.9461 20.9178 22.2348ZM28.5481 13.2965C29.5088 14.2306 30.1221 15.5061 30.1221 16.9077C30.1221 17.5853 29.9785 18.2441 29.7234 18.8555C29.1392 20.3934 27.8553 21.5866 26.2636 22.0429C25.7878 22.1932 25.289 22.2759 24.7792 22.2759C23.4271 22.2759 22.1854 21.7203 21.2551 20.8315C21.1106 20.6933 20.9737 20.5472 20.8453 20.3939L20.8451 20.402C20.0613 19.4832 19.5862 18.2918 19.5862 16.9906C19.5862 15.1373 20.5486 13.5062 21.9978 12.5703C22.8003 12.0446 23.7497 11.7353 24.7634 11.7353C24.7757 11.7353 24.7879 11.7362 24.8002 11.7362C24.8087 11.7362 24.8172 11.7356 24.8257 11.7356C25.303 11.7356 25.7649 11.8011 26.2046 11.9216L26.2036 11.9388C26.3787 11.9886 26.5507 12.0468 26.7192 12.1134L26.7203 12.0926C27.407 12.3608 28.0298 12.7711 28.5481 13.2965ZM34.0824 13.6389C33.7195 13.9101 33.2126 14.0921 32.655 14.1515C32.0975 14.2103 31.5638 14.1395 31.1523 13.9506C30.9403 13.8531 30.5791 13.6369 30.5417 13.2825C30.5042 12.9282 30.8123 12.6408 30.9992 12.501C31.3621 12.2298 31.8688 12.0478 32.4265 11.9884C32.5545 11.9748 32.6812 11.9681 32.8054 11.9681C33.2226 11.9681 33.6121 12.0438 33.9292 12.1894C34.1413 12.2869 34.5025 12.5031 34.5398 12.8574C34.5772 13.2117 34.2693 13.4991 34.0824 13.6389Z' fill='#8254C6'/>\r\n<mask id='mask0_160_574' style='mask-type:luminance' maskUnits='userSpaceOnUse' x='-1' y='4' width='42' height='31'>\r\n<path d='M40.5003 4.11133H-0.408813V34.1996H40.5003V4.11133Z' fill='white'/>\r\n<path d='M32.3113 7.42885L32.0048 7.5123C30.9826 7.78918 29.9256 8.0754 29.1127 8.10866L28.9453 8.11523C27.517 8.16848 26.1086 7.64461 24.981 6.6443C23.1386 5.01056 21.3503 5.01844 19.9126 5.02369L19.8892 5.02384C18.8477 5.02792 16.6803 5.03638 14.5792 6.83715C13.5699 7.70238 12.272 8.15083 10.9171 8.11173C10.9071 8.11011 10.897 8.10908 10.8868 8.10866C10.0745 8.0754 9.01762 7.78918 7.99478 7.51215L7.68875 7.42885C5.37849 6.79835 2.76017 6.08396 1.25151 7.90151C0.489766 8.8194 0.299656 9.88522 0.716383 10.9029C1.42591 12.6352 4.19522 14.6275 7.03493 14.7161L7.03915 14.7163C7.11391 14.7163 7.53907 14.6749 7.64366 14.6644C7.66867 14.6674 7.69311 14.6718 7.71813 14.6744C7.86329 14.69 8.00758 14.6975 8.14955 14.6975C8.64307 14.6975 9.10956 14.6052 9.49456 14.4286C10.0358 14.18 10.3605 13.7926 10.4086 13.3378C10.4566 12.883 10.2204 12.4358 9.74301 12.0791C9.30574 11.7522 8.70722 11.5341 8.05747 11.4651C7.81043 11.4385 7.56144 11.4352 7.31377 11.4551C7.29949 11.4515 7.28495 11.4491 7.27027 11.4479C4.88104 11.3029 3.36322 10.8178 2.99624 10.0819C2.84293 9.7742 2.86286 9.54006 3.06286 9.29921C3.70867 8.52078 5.64802 9.04596 7.36409 9.51103C8.47886 9.81301 9.63056 10.1249 10.68 10.1815C10.6919 10.1837 10.704 10.1852 10.7164 10.1856C10.9471 10.1948 11.1782 10.2024 11.4085 10.2063C12.2868 10.2218 12.9806 10.7974 13.0953 11.6059C13.1055 11.678 13.1185 11.7578 13.1324 11.8428C13.1716 12.0831 13.2159 12.3554 13.2213 12.6027C13.2665 14.6497 13.7977 16.2877 14.8454 17.6097C15.1193 17.9551 15.3726 18.2056 15.5964 18.4265C16.1498 18.9733 16.4276 19.2475 16.3449 20.2666L16.3267 20.4909C16.2262 21.7283 16.2225 23.0293 16.8696 24.1611L17.2233 24.7801C17.7348 25.6748 17.9757 26.2047 17.9757 27.1938C17.9757 27.2066 17.9766 27.2194 17.9785 27.232C17.9789 27.2636 17.9779 27.3249 17.9767 27.415C17.9673 28.1282 17.9388 30.2987 18.2346 33.7367C18.2418 33.8052 18.2756 33.8682 18.3286 33.9121C18.3816 33.9559 18.4496 33.9772 18.5181 33.9713C18.5866 33.9653 18.65 33.9327 18.6947 33.8805C18.7396 33.8281 18.762 33.7603 18.7574 33.6914C18.4639 30.2796 18.4923 28.1287 18.5016 27.4219C18.5027 27.329 18.5037 27.2544 18.4991 27.1938H18.5006C18.5006 26.0395 18.19 25.4133 17.6786 24.5184L17.3248 23.8995C16.749 22.892 16.7563 21.6863 16.8497 20.5336L16.8679 20.3094C16.9706 19.0455 16.5486 18.6286 15.9646 18.0517C15.7517 17.8413 15.5103 17.603 15.2563 17.2823C14.2825 16.0535 13.7886 14.5191 13.7459 12.5912C13.7396 12.307 13.6901 12.0027 13.6502 11.7581C13.6376 11.6828 13.6259 11.6074 13.6148 11.5319C13.463 10.4616 12.5596 9.70024 11.4177 9.68011C11.2173 9.67651 11.0169 9.67072 10.8166 9.66275C10.8064 9.66114 10.796 9.66011 10.7856 9.65969C9.77237 9.61811 8.61777 9.30534 7.49587 9.00132C5.54169 8.47206 3.52104 7.92471 2.65995 8.96222C2.32497 9.36588 2.28031 9.82162 2.52729 10.317C2.91755 11.0997 4.08977 11.6161 6.01282 11.8596C5.63464 12.1025 5.40686 12.4285 5.36744 12.8014C5.31944 13.2562 5.55566 13.7034 6.03304 14.0601C6.03958 14.0651 6.047 14.0693 6.05369 14.0742C3.83653 13.6391 1.76526 12.0777 1.20206 10.7025C0.862711 9.87399 1.02358 8.99869 1.65515 8.23792C2.94809 6.67989 5.39377 7.34716 7.55144 7.93609L7.85922 8.01982C8.87507 8.2951 9.92456 8.57914 10.7806 8.62976C10.7916 8.6318 10.8029 8.63311 10.8146 8.63384L10.8465 8.63515C12.3506 8.69482 13.7976 8.19911 14.9205 7.23673C16.8754 5.56141 18.9126 5.55324 19.8916 5.5496L19.9152 5.54945C21.3338 5.54464 22.9414 5.53705 24.6339 7.03818C25.8627 8.12792 27.4007 8.69759 28.9639 8.64055L29.135 8.63399C30.0061 8.59839 31.0919 8.30415 32.1426 8.01968L32.4495 7.93609C34.6073 7.34745 37.053 6.68018 38.3459 8.23792C38.9774 8.99869 39.1384 9.87413 38.799 10.7025C38.3256 11.8584 36.6214 13.1931 34.6848 13.8007C34.9656 13.4972 35.0989 13.1519 35.062 12.8014C35.0199 12.4034 34.7663 12.0573 34.341 11.8104C36.0545 11.55 37.1078 11.0505 37.4736 10.317C37.7205 9.82176 37.6758 9.36602 37.3408 8.96222C36.4797 7.92471 34.4589 8.47177 32.4996 9.00278C31.383 9.30519 30.2283 9.61796 29.2152 9.65954C28.7777 9.67734 28.3987 9.68522 28.0553 9.68259H28.0429C27.5573 9.68259 27.102 9.8699 26.7596 10.211C26.4439 10.5254 26.2575 10.9366 26.2231 11.3814C25.7663 11.2667 25.2971 11.2088 24.8262 11.2088C24.6416 11.2088 24.4591 11.2184 24.2788 11.2355C24.225 10.8683 24.1619 10.4489 24.089 9.97508C23.9748 9.23298 23.5461 8.59752 22.9125 8.23164C21.9466 7.67394 20.9018 7.39136 19.8079 7.39136C19.8015 7.39151 19.795 7.39151 19.7886 7.39136C18.6938 7.39136 17.649 7.67408 16.6832 8.23164C16.0496 8.59752 15.6208 9.23283 15.5066 9.97508C15.2268 11.7937 15.0875 12.8303 15.0924 13.0564C15.1275 14.6438 15.5149 15.8829 16.2773 16.8446C16.4756 17.0948 16.673 17.2896 16.8642 17.4784C17.5347 18.1408 18.3694 18.9655 18.2097 20.9297L18.1915 21.1543C18.1551 21.6028 18.1433 21.9408 18.153 22.2508C18.1801 23.1036 18.8756 23.7856 19.7421 23.8034H19.8585C20.7196 23.7856 21.4153 23.1036 21.4422 22.2508C21.4477 22.0545 21.4458 21.858 21.4364 21.6619C21.9174 22.014 22.4501 22.2891 23.0153 22.4772C22.968 22.9654 22.8566 23.439 22.6323 23.8755L22.279 24.5633C21.8358 25.4257 21.585 25.9644 21.5855 27.0192C21.5872 27.0465 21.7522 29.7927 21.3287 33.6848C21.3212 33.7541 21.3414 33.8237 21.3849 33.8781C21.4285 33.9325 21.4917 33.9673 21.5609 33.9749C21.63 33.9825 21.6994 33.9622 21.7536 33.9186C21.8079 33.875 21.8426 33.8114 21.8502 33.7421C22.279 29.8015 22.1108 27.0139 22.1096 27.0027C22.1096 26.0825 22.3159 25.6401 22.7453 24.8046L23.0986 24.1167C23.3438 23.6394 23.471 23.1353 23.5289 22.6218C23.9542 22.7207 24.3893 22.7709 24.8259 22.7711C26.0826 22.7723 27.3048 22.3594 28.3046 21.5958L28.7714 22.0639L28.6236 22.2121C28.5201 22.3162 28.4619 22.4571 28.4619 22.6041C28.4619 22.7511 28.5201 22.892 28.6236 22.9961L32.5695 26.9538C32.6773 27.0618 32.8188 27.1158 32.9603 27.1158C33.1018 27.1158 33.2434 27.0618 33.3512 26.9538L33.9556 26.3475C34.0592 26.2434 34.1173 26.1025 34.1173 25.9555C34.1173 25.8085 34.0592 25.6675 33.9556 25.5635L30.0097 21.6058C29.906 21.5021 29.7655 21.4438 29.6189 21.4438C29.4724 21.4438 29.3318 21.5021 29.2281 21.6058L29.0805 21.7539L28.6438 21.316C29.8364 20.256 30.5901 18.71 30.5901 16.9898C30.5901 14.475 28.9803 12.3312 26.7401 11.5378L26.7403 11.5292C26.7404 11.1693 26.8785 10.8336 27.1289 10.5841C27.2502 10.4634 27.3943 10.368 27.5526 10.3036C27.711 10.2391 27.8806 10.2068 28.0516 10.2086C28.4031 10.2117 28.7903 10.2031 29.2361 10.1852C30.3079 10.1411 31.4916 9.82045 32.6412 9.50899C34.3522 9.04552 36.2914 8.5202 36.9374 9.29863C37.1375 9.53962 37.1574 9.77377 37.0041 10.0813C36.6407 10.8101 35.1472 11.2923 32.7981 11.4425C32.6575 11.4427 32.5149 11.4491 32.3712 11.4645C31.7215 11.5335 31.1229 11.7516 30.6857 12.0786C30.2085 12.4354 29.9721 12.8824 30.0201 13.3372C30.0683 13.7921 30.3927 14.1796 30.9341 14.428C31.3191 14.6048 31.7856 14.6968 32.2792 14.6968C32.4211 14.6968 32.5654 14.6893 32.7106 14.6738C32.7552 14.669 32.799 14.6618 32.8434 14.6557C35.4432 14.5738 38.5129 12.7852 39.2841 10.9022C39.7008 9.88449 39.5107 8.81867 38.749 7.90078C37.24 6.0844 34.6216 6.79864 32.3113 7.42885ZM5.88875 12.8574C5.92613 12.5031 6.28744 12.2869 6.49937 12.1894C6.81646 12.0438 7.20598 11.9681 7.62315 11.9681C7.74737 11.9681 7.87406 11.9748 8.00206 11.9884C8.55958 12.0478 9.06649 12.2298 9.42937 12.501C9.61628 12.6408 9.92428 12.9282 9.88683 13.2825C9.84947 13.6369 9.48819 13.8531 9.27628 13.9506C8.86475 14.1395 8.33107 14.2105 7.77355 14.1515C7.21602 14.0921 6.70911 13.9101 6.3462 13.6389C6.15915 13.4991 5.85122 13.2117 5.88875 12.8574ZM28.9326 22.5227L29.5372 21.9165C29.5597 21.8938 29.5893 21.8825 29.6189 21.8825C29.6486 21.8825 29.6781 21.8938 29.7006 21.9165L33.6465 25.8741C33.6915 25.9193 33.6915 25.9928 33.6465 26.038L33.0419 26.6443C33.0312 26.6551 33.0185 26.6637 33.0045 26.6695C32.9905 26.6752 32.9754 26.6782 32.9603 26.6782C32.9451 26.6782 32.93 26.6752 32.916 26.6695C32.902 26.6637 32.8893 26.6551 32.8786 26.6443L28.9326 22.6867C28.911 22.6649 28.8988 22.6355 28.8988 22.6047C28.8988 22.5739 28.911 22.5445 28.9326 22.5227ZM20.9178 22.2348C20.8998 22.8071 20.431 23.2649 19.8502 23.2781H19.7476C19.1656 23.2661 18.6955 22.8079 18.6774 22.2348C18.6683 21.9456 18.6796 21.6257 18.7144 21.198L18.7326 20.9733C18.912 18.7639 17.9013 17.7652 17.232 17.1041C17.0439 16.9183 16.8662 16.743 16.6879 16.5177C15.9996 15.6494 15.6492 14.5135 15.6167 13.0453C15.6152 12.9763 15.6402 12.5565 16.025 10.0558C16.1147 9.47237 16.4501 8.97389 16.9447 8.68811C17.83 8.17723 18.7866 7.91814 19.7891 7.91814H19.8068C20.8086 7.91814 21.7654 8.17723 22.6505 8.68811C23.1452 8.97375 23.4805 9.47237 23.5704 10.0558C23.6467 10.5516 23.7086 10.9645 23.7591 11.3102C21.0887 11.8136 19.0616 14.1684 19.0616 16.9905C19.0616 18.6487 19.7624 20.145 20.8812 21.2002C20.9156 21.6267 20.927 21.9461 20.9178 22.2348ZM28.5481 13.2965C29.5088 14.2306 30.1221 15.5061 30.1221 16.9077C30.1221 17.5853 29.9785 18.2441 29.7234 18.8555C29.1392 20.3934 27.8553 21.5866 26.2636 22.0429C25.7878 22.1932 25.289 22.2759 24.7792 22.2759C23.4271 22.2759 22.1854 21.7203 21.2551 20.8315C21.1106 20.6933 20.9737 20.5472 20.8453 20.3939L20.8451 20.402C20.0613 19.4832 19.5862 18.2918 19.5862 16.9906C19.5862 15.1373 20.5486 13.5062 21.9978 12.5703C22.8003 12.0446 23.7497 11.7353 24.7634 11.7353C24.7757 11.7353 24.7879 11.7362 24.8002 11.7362C24.8087 11.7362 24.8172 11.7356 24.8257 11.7356C25.303 11.7356 25.7649 11.8011 26.2046 11.9216L26.2036 11.9388C26.3787 11.9886 26.5507 12.0468 26.7192 12.1134L26.7203 12.0926C27.407 12.3608 28.0298 12.7711 28.5481 13.2965ZM34.0824 13.6389C33.7195 13.9101 33.2126 14.0921 32.655 14.1515C32.0975 14.2103 31.5638 14.1395 31.1523 13.9506C30.9403 13.8531 30.5791 13.6369 30.5417 13.2825C30.5042 12.9282 30.8123 12.6408 30.9992 12.501C31.3621 12.2298 31.8688 12.0478 32.4265 11.9884C32.5545 11.9748 32.6812 11.9681 32.8054 11.9681C33.2226 11.9681 33.6121 12.0438 33.9292 12.1894C34.1413 12.2869 34.5025 12.5031 34.5398 12.8574C34.5772 13.2117 34.2693 13.4991 34.0824 13.6389Z' fill='black'/>\r\n</mask>\r\n<g mask='url(#mask0_160_574)'>\r\n<path d='M32.3113 7.42885L32.0048 7.5123C30.9826 7.78918 29.9256 8.0754 29.1127 8.10866L28.9453 8.11523C27.517 8.16848 26.1086 7.64461 24.981 6.6443C23.1386 5.01056 21.3503 5.01844 19.9126 5.02369L19.8892 5.02384C18.8477 5.02792 16.6803 5.03638 14.5792 6.83715C13.5699 7.70238 12.272 8.15083 10.9171 8.11173C10.9071 8.11011 10.897 8.10908 10.8868 8.10866C10.0745 8.0754 9.01762 7.78918 7.99478 7.51215L7.68875 7.42885C5.37849 6.79835 2.76017 6.08396 1.25151 7.90151C0.489766 8.8194 0.299656 9.88522 0.716383 10.9029C1.42591 12.6352 4.19522 14.6275 7.03493 14.7161L7.03915 14.7163C7.11391 14.7163 7.53907 14.6749 7.64366 14.6644C7.66867 14.6674 7.69311 14.6718 7.71813 14.6744C7.86329 14.69 8.00758 14.6975 8.14955 14.6975C8.64307 14.6975 9.10956 14.6052 9.49456 14.4286C10.0358 14.18 10.3605 13.7926 10.4086 13.3378C10.4566 12.883 10.2204 12.4358 9.74301 12.0791C9.30574 11.7522 8.70722 11.5341 8.05747 11.4651C7.81043 11.4385 7.56144 11.4352 7.31377 11.4551C7.29949 11.4515 7.28495 11.4491 7.27027 11.4479C4.88104 11.3029 3.36322 10.8178 2.99624 10.0819C2.84293 9.7742 2.86286 9.54006 3.06286 9.29921C3.70867 8.52078 5.64802 9.04596 7.36409 9.51103C8.47886 9.81301 9.63056 10.1249 10.68 10.1815C10.6919 10.1837 10.704 10.1852 10.7164 10.1856C10.9471 10.1948 11.1782 10.2024 11.4085 10.2063C12.2868 10.2218 12.9806 10.7974 13.0953 11.6059C13.1055 11.678 13.1185 11.7578 13.1324 11.8428C13.1716 12.0831 13.2159 12.3554 13.2213 12.6027C13.2665 14.6497 13.7977 16.2877 14.8454 17.6097C15.1193 17.9551 15.3726 18.2056 15.5964 18.4265C16.1498 18.9733 16.4276 19.2475 16.3449 20.2666L16.3267 20.4909C16.2262 21.7283 16.2225 23.0293 16.8696 24.1611L17.2233 24.7801C17.7348 25.6748 17.9757 26.2047 17.9757 27.1938C17.9757 27.2066 17.9766 27.2194 17.9785 27.232C17.9789 27.2636 17.9779 27.3249 17.9767 27.415C17.9673 28.1282 17.9388 30.2987 18.2346 33.7367C18.2418 33.8052 18.2756 33.8682 18.3286 33.9121C18.3816 33.9559 18.4496 33.9772 18.5181 33.9713C18.5866 33.9653 18.65 33.9327 18.6947 33.8805C18.7396 33.8281 18.762 33.7603 18.7574 33.6914C18.4639 30.2796 18.4923 28.1287 18.5016 27.4219C18.5027 27.329 18.5037 27.2544 18.4991 27.1938H18.5006C18.5006 26.0395 18.19 25.4133 17.6786 24.5184L17.3248 23.8995C16.749 22.892 16.7563 21.6863 16.8497 20.5336L16.8679 20.3094C16.9706 19.0455 16.5486 18.6286 15.9646 18.0517C15.7517 17.8413 15.5103 17.603 15.2563 17.2823C14.2825 16.0535 13.7886 14.5191 13.7459 12.5912C13.7396 12.307 13.6901 12.0027 13.6502 11.7581C13.6376 11.6828 13.6259 11.6074 13.6148 11.5319C13.463 10.4616 12.5596 9.70024 11.4177 9.68011C11.2173 9.67651 11.0169 9.67072 10.8166 9.66275C10.8064 9.66114 10.796 9.66011 10.7856 9.65969C9.77237 9.61811 8.61777 9.30534 7.49587 9.00132C5.54169 8.47206 3.52104 7.92471 2.65995 8.96222C2.32497 9.36588 2.28031 9.82162 2.52729 10.317C2.91755 11.0997 4.08977 11.6161 6.01282 11.8596C5.63464 12.1025 5.40686 12.4285 5.36744 12.8014C5.31944 13.2562 5.55566 13.7034 6.03304 14.0601C6.03958 14.0651 6.047 14.0693 6.05369 14.0742C3.83653 13.6391 1.76526 12.0777 1.20206 10.7025C0.862711 9.87399 1.02358 8.99869 1.65515 8.23792C2.94809 6.67989 5.39377 7.34716 7.55144 7.93609L7.85922 8.01982C8.87507 8.2951 9.92456 8.57914 10.7806 8.62976C10.7916 8.6318 10.8029 8.63311 10.8146 8.63384L10.8465 8.63515C12.3506 8.69482 13.7976 8.19911 14.9205 7.23673C16.8754 5.56141 18.9126 5.55324 19.8916 5.5496L19.9152 5.54945C21.3338 5.54464 22.9414 5.53705 24.6339 7.03818C25.8627 8.12792 27.4007 8.69759 28.9639 8.64055L29.135 8.63399C30.0061 8.59839 31.0919 8.30415 32.1426 8.01968L32.4495 7.93609C34.6073 7.34745 37.053 6.68018 38.3459 8.23792C38.9774 8.99869 39.1384 9.87413 38.799 10.7025C38.3256 11.8584 36.6214 13.1931 34.6848 13.8007C34.9656 13.4972 35.0989 13.1519 35.062 12.8014C35.0199 12.4034 34.7663 12.0573 34.341 11.8104C36.0545 11.55 37.1078 11.0505 37.4736 10.317C37.7205 9.82176 37.6758 9.36602 37.3408 8.96222C36.4797 7.92471 34.4589 8.47177 32.4996 9.00278C31.383 9.30519 30.2283 9.61796 29.2152 9.65954C28.7777 9.67734 28.3987 9.68522 28.0553 9.68259H28.0429C27.5573 9.68259 27.102 9.8699 26.7596 10.211C26.4439 10.5254 26.2575 10.9366 26.2231 11.3814C25.7663 11.2667 25.2971 11.2088 24.8262 11.2088C24.6416 11.2088 24.4591 11.2184 24.2788 11.2355C24.225 10.8683 24.1619 10.4489 24.089 9.97508C23.9748 9.23298 23.5461 8.59752 22.9125 8.23164C21.9466 7.67394 20.9018 7.39136 19.8079 7.39136C19.8015 7.39151 19.795 7.39151 19.7886 7.39136C18.6938 7.39136 17.649 7.67408 16.6832 8.23164C16.0496 8.59752 15.6208 9.23283 15.5066 9.97508C15.2268 11.7937 15.0875 12.8303 15.0924 13.0564C15.1275 14.6438 15.5149 15.8829 16.2773 16.8446C16.4756 17.0948 16.673 17.2896 16.8642 17.4784C17.5347 18.1408 18.3694 18.9655 18.2097 20.9297L18.1915 21.1543C18.1551 21.6028 18.1433 21.9408 18.153 22.2508C18.1801 23.1036 18.8756 23.7856 19.7421 23.8034H19.8585C20.7196 23.7856 21.4153 23.1036 21.4422 22.2508C21.4477 22.0545 21.4458 21.858 21.4364 21.6619C21.9174 22.014 22.4501 22.2891 23.0153 22.4772C22.968 22.9654 22.8566 23.439 22.6323 23.8755L22.279 24.5633C21.8358 25.4257 21.585 25.9644 21.5855 27.0192C21.5872 27.0465 21.7522 29.7927 21.3287 33.6848C21.3212 33.7541 21.3414 33.8237 21.3849 33.8781C21.4285 33.9325 21.4917 33.9673 21.5609 33.9749C21.63 33.9825 21.6994 33.9622 21.7536 33.9186C21.8079 33.875 21.8426 33.8114 21.8502 33.7421C22.279 29.8015 22.1108 27.0139 22.1096 27.0027C22.1096 26.0825 22.3159 25.6401 22.7453 24.8046L23.0986 24.1167C23.3438 23.6394 23.471 23.1353 23.5289 22.6218C23.9542 22.7207 24.3893 22.7709 24.8259 22.7711C26.0826 22.7723 27.3048 22.3594 28.3046 21.5958L28.7714 22.0639L28.6236 22.2121C28.5201 22.3162 28.4619 22.4571 28.4619 22.6041C28.4619 22.7511 28.5201 22.892 28.6236 22.9961L32.5695 26.9538C32.6773 27.0618 32.8188 27.1158 32.9603 27.1158C33.1018 27.1158 33.2434 27.0618 33.3512 26.9538L33.9556 26.3475C34.0592 26.2434 34.1173 26.1025 34.1173 25.9555C34.1173 25.8085 34.0592 25.6675 33.9556 25.5635L30.0097 21.6058C29.906 21.5021 29.7655 21.4438 29.6189 21.4438C29.4724 21.4438 29.3318 21.5021 29.2281 21.6058L29.0805 21.7539L28.6438 21.316C29.8364 20.256 30.5901 18.71 30.5901 16.9898C30.5901 14.475 28.9803 12.3312 26.7401 11.5378L26.7403 11.5292C26.7404 11.1693 26.8785 10.8336 27.1289 10.5841C27.2502 10.4634 27.3943 10.368 27.5526 10.3036C27.711 10.2391 27.8806 10.2068 28.0516 10.2086C28.4031 10.2117 28.7903 10.2031 29.2361 10.1852C30.3079 10.1411 31.4916 9.82045 32.6412 9.50899C34.3522 9.04552 36.2914 8.5202 36.9374 9.29863C37.1375 9.53962 37.1574 9.77377 37.0041 10.0813C36.6407 10.8101 35.1472 11.2923 32.7981 11.4425C32.6575 11.4427 32.5149 11.4491 32.3712 11.4645C31.7215 11.5335 31.1229 11.7516 30.6857 12.0786C30.2085 12.4354 29.9721 12.8824 30.0201 13.3372C30.0683 13.7921 30.3927 14.1796 30.9341 14.428C31.3191 14.6048 31.7856 14.6968 32.2792 14.6968C32.4211 14.6968 32.5654 14.6893 32.7106 14.6738C32.7552 14.669 32.799 14.6618 32.8434 14.6557C35.4432 14.5738 38.5129 12.7852 39.2841 10.9022C39.7008 9.88449 39.5107 8.81867 38.749 7.90078C37.24 6.0844 34.6216 6.79864 32.3113 7.42885ZM5.88875 12.8574C5.92613 12.5031 6.28744 12.2869 6.49937 12.1894C6.81646 12.0438 7.20598 11.9681 7.62315 11.9681C7.74737 11.9681 7.87406 11.9748 8.00206 11.9884C8.55958 12.0478 9.06649 12.2298 9.42937 12.501C9.61628 12.6408 9.92428 12.9282 9.88683 13.2825C9.84947 13.6369 9.48819 13.8531 9.27628 13.9506C8.86475 14.1395 8.33107 14.2105 7.77355 14.1515C7.21602 14.0921 6.70911 13.9101 6.3462 13.6389C6.15915 13.4991 5.85122 13.2117 5.88875 12.8574ZM28.9326 22.5227L29.5372 21.9165C29.5597 21.8938 29.5893 21.8825 29.6189 21.8825C29.6486 21.8825 29.6781 21.8938 29.7006 21.9165L33.6465 25.8741C33.6915 25.9193 33.6915 25.9928 33.6465 26.038L33.0419 26.6443C33.0312 26.6551 33.0185 26.6637 33.0045 26.6695C32.9905 26.6752 32.9754 26.6782 32.9603 26.6782C32.9451 26.6782 32.93 26.6752 32.916 26.6695C32.902 26.6637 32.8893 26.6551 32.8786 26.6443L28.9326 22.6867C28.911 22.6649 28.8988 22.6355 28.8988 22.6047C28.8988 22.5739 28.911 22.5445 28.9326 22.5227ZM20.9178 22.2348C20.8998 22.8071 20.431 23.2649 19.8502 23.2781H19.7476C19.1656 23.2661 18.6955 22.8079 18.6774 22.2348C18.6683 21.9456 18.6796 21.6257 18.7144 21.198L18.7326 20.9733C18.912 18.7639 17.9013 17.7652 17.232 17.1041C17.0439 16.9183 16.8662 16.743 16.6879 16.5177C15.9996 15.6494 15.6492 14.5135 15.6167 13.0453C15.6152 12.9763 15.6402 12.5565 16.025 10.0558C16.1147 9.47237 16.4501 8.97389 16.9447 8.68811C17.83 8.17723 18.7866 7.91814 19.7891 7.91814H19.8068C20.8086 7.91814 21.7654 8.17723 22.6505 8.68811C23.1452 8.97375 23.4805 9.47237 23.5704 10.0558C23.6467 10.5516 23.7086 10.9645 23.7591 11.3102C21.0887 11.8136 19.0616 14.1684 19.0616 16.9905C19.0616 18.6487 19.7624 20.145 20.8812 21.2002C20.9156 21.6267 20.927 21.9461 20.9178 22.2348ZM28.5481 13.2965C29.5088 14.2306 30.1221 15.5061 30.1221 16.9077C30.1221 17.5853 29.9785 18.2441 29.7234 18.8555C29.1392 20.3934 27.8553 21.5866 26.2636 22.0429C25.7878 22.1932 25.289 22.2759 24.7792 22.2759C23.4271 22.2759 22.1854 21.7203 21.2551 20.8315C21.1106 20.6933 20.9737 20.5472 20.8453 20.3939L20.8451 20.402C20.0613 19.4832 19.5862 18.2918 19.5862 16.9906C19.5862 15.1373 20.5486 13.5062 21.9978 12.5703C22.8003 12.0446 23.7497 11.7353 24.7634 11.7353C24.7757 11.7353 24.7879 11.7362 24.8002 11.7362C24.8087 11.7362 24.8172 11.7356 24.8257 11.7356C25.303 11.7356 25.7649 11.8011 26.2046 11.9216L26.2036 11.9388C26.3787 11.9886 26.5507 12.0468 26.7192 12.1134L26.7203 12.0926C27.407 12.3608 28.0298 12.7711 28.5481 13.2965ZM34.0824 13.6389C33.7195 13.9101 33.2126 14.0921 32.655 14.1515C32.0975 14.2103 31.5638 14.1395 31.1523 13.9506C30.9403 13.8531 30.5791 13.6369 30.5417 13.2825C30.5042 12.9282 30.8123 12.6408 30.9992 12.501C31.3621 12.2298 31.8688 12.0478 32.4265 11.9884C32.5545 11.9748 32.6812 11.9681 32.8054 11.9681C33.2226 11.9681 33.6121 12.0438 33.9292 12.1894C34.1413 12.2869 34.5025 12.5031 34.5398 12.8574C34.5772 13.2117 34.2693 13.4991 34.0824 13.6389Z' stroke='#8254C6' stroke-width='0.5'/>\r\n</g>\r\n<path d='M26.7018 12.7524C27.7663 13.2291 28.6134 14.0893 29.0757 15.1626C29.3091 15.7183 29.438 16.3334 29.438 16.9837C29.438 17.7169 29.2758 18.4059 28.9847 19.0177C28.2333 20.5615 26.6516 21.629 24.8259 21.629C24.4301 21.6289 24.0362 21.5778 23.6538 21.4769L23.6551 21.5079L23.5354 21.4755C23.3484 21.4248 23.1661 21.3633 22.99 21.2906L22.937 21.2687L22.9344 21.222C22.3804 20.9715 21.8812 20.6144 21.4648 20.1718L21.4582 20.2461L21.318 20.0837C21.1532 19.8927 21.0046 19.6882 20.8739 19.4722L20.8549 19.441L20.8628 19.4052C20.8643 19.3987 20.8657 19.3921 20.8673 19.3855C20.4308 18.6636 20.2004 17.8352 20.2012 16.9905M26.7018 12.7524L26.5773 12.6988C26.5693 12.6957 26.5622 12.6929 26.5556 12.6902L26.5545 12.6897C26.2118 12.5521 25.8542 12.4551 25.489 12.4006C25.4693 12.3977 25.4482 12.3951 25.4287 12.3927C25.4195 12.3916 25.4105 12.3905 25.4021 12.3894L25.3995 12.3891C25.3627 12.3843 25.3247 12.3793 25.2862 12.3752C25.1334 12.3599 24.9794 12.3521 24.8258 12.3521C24.7255 12.3521 24.6264 12.356 24.5283 12.3627L24.5274 12.3538L24.4396 12.3603C24.2607 12.3737 24.0834 12.3975 23.9089 12.4324L23.8257 12.4491L23.8274 12.4614C21.7557 12.9205 20.2012 14.7764 20.2012 16.9905M26.7018 12.7524L26.7007 12.7519L26.6926 12.7484L26.7018 12.7524ZM24.8259 20.9205C26.9863 20.9205 28.7442 19.1574 28.7442 16.9905C28.7442 15.4953 27.9066 14.1928 26.6774 13.5285C26.4391 15.2934 25.9418 16.5463 25.0513 17.6691C24.7746 18.018 24.5184 18.2708 24.2953 18.4909L24.2924 18.4937M24.8259 20.9205L24.2282 18.4293L24.2924 18.4937M24.8259 20.9205C24.4121 20.9206 24.001 20.8545 23.6081 20.7249C23.6069 20.7098 23.6057 20.6945 23.6045 20.6796M24.8259 20.9205L23.6045 20.6796ZM24.2924 18.4937C24.0131 18.7695 23.8181 18.9632 23.6979 19.2103C23.5795 19.4538 23.5303 19.7583 23.5706 20.2586L23.6045 20.6796M24.2924 18.4937L23.6045 20.6796ZM20.9075 16.9904C20.9075 15.1498 22.1765 13.6008 23.8834 13.1763C23.8334 14.566 23.4881 15.6385 22.8362 16.4609C22.6616 16.6812 22.4878 16.8529 22.2992 17.0392C21.957 17.3773 21.5159 17.8131 21.1924 18.4596C21.0041 17.9935 20.9072 17.4946 20.9075 16.9904ZM22.8664 20.3158L22.8727 20.3952C22.3813 20.1104 21.9564 19.7223 21.6276 19.2572C21.8782 18.4552 22.3625 17.9713 22.7952 17.544L22.7999 17.5393C22.9892 17.3522 23.1888 17.1549 23.3894 16.902C24.1658 15.9225 24.5571 14.6652 24.5938 13.0685C24.6709 13.0636 24.7483 13.0607 24.8259 13.0607C25.2358 13.0607 25.6307 13.1252 26.0024 13.243C25.7904 14.9865 25.3316 16.1778 24.4984 17.2281C24.2479 17.5439 24.01 17.7786 23.7969 17.9887L23.7913 17.9943C23.5035 18.2781 23.2428 18.5353 23.0704 18.8828C22.8953 19.2356 22.8145 19.6731 22.8664 20.3158Z' fill='#8254C6'/>\r\n<path d='M26.7018 12.7524C27.7663 13.2291 28.6134 14.0893 29.0757 15.1626C29.3091 15.7183 29.438 16.3334 29.438 16.9837C29.438 17.7169 29.2758 18.4059 28.9847 19.0177C28.2333 20.5615 26.6516 21.629 24.8259 21.629C24.4301 21.6289 24.0362 21.5778 23.6538 21.4769L23.6551 21.5079L23.5354 21.4755C23.3484 21.4248 23.1661 21.3633 22.99 21.2906L22.937 21.2687L22.9344 21.222C22.3804 20.9715 21.8812 20.6144 21.4648 20.1718L21.4582 20.2461L21.318 20.0837C21.1532 19.8927 21.0046 19.6882 20.8739 19.4722L20.8549 19.441L20.8628 19.4052C20.8643 19.3987 20.8657 19.3921 20.8673 19.3855C20.4308 18.6636 20.2004 17.8352 20.2012 16.9905M26.7018 12.7524L26.5773 12.6988C26.5693 12.6957 26.5622 12.6929 26.5556 12.6902L26.5545 12.6897C26.2118 12.5521 25.8542 12.4551 25.489 12.4006C25.4693 12.3977 25.4482 12.3951 25.4287 12.3927C25.4195 12.3916 25.4105 12.3905 25.4021 12.3894L25.3995 12.3891C25.3627 12.3843 25.3247 12.3793 25.2862 12.3752C25.1334 12.3599 24.9794 12.3521 24.8258 12.3521C24.7255 12.3521 24.6264 12.356 24.5283 12.3627L24.5274 12.3538L24.4396 12.3603C24.2607 12.3737 24.0834 12.3975 23.9089 12.4324L23.8257 12.4491L23.8274 12.4614C21.7557 12.9205 20.2012 14.7764 20.2012 16.9905M26.7018 12.7524L26.7007 12.7519L26.6926 12.7484L26.7018 12.7524ZM20.2012 16.9905H20.2921M24.8259 20.9205C26.9863 20.9205 28.7442 19.1574 28.7442 16.9905C28.7442 15.4953 27.9066 14.1928 26.6774 13.5285C26.4391 15.2934 25.9418 16.5463 25.0513 17.6691C24.7746 18.018 24.5184 18.2708 24.2953 18.4909L24.2924 18.4937M24.8259 20.9205L24.2282 18.4293L24.2924 18.4937M24.8259 20.9205C24.4121 20.9206 24.001 20.8545 23.6081 20.7249C23.6069 20.7098 23.6057 20.6945 23.6045 20.6796M24.8259 20.9205L23.6045 20.6796M24.2924 18.4937C24.0131 18.7695 23.8181 18.9632 23.6979 19.2103C23.5795 19.4538 23.5303 19.7583 23.5706 20.2586L23.6045 20.6796M24.2924 18.4937L23.6045 20.6796M23.6045 20.6796L23.5139 20.6871M24.4984 17.2281C25.3316 16.1778 25.7904 14.9865 26.0024 13.243C25.6307 13.1252 25.2358 13.0607 24.8259 13.0607C24.7483 13.0607 24.6709 13.0636 24.5938 13.0685C24.5571 14.6652 24.1658 15.9225 23.3894 16.902C23.1888 17.1549 22.9892 17.3522 22.7999 17.5393L22.7952 17.544C22.3625 17.9713 21.8782 18.4552 21.6276 19.2572C21.9564 19.7223 22.3813 20.1104 22.8727 20.3952L22.8664 20.3158C22.8145 19.6731 22.8953 19.2356 23.0704 18.8828C23.2428 18.5353 23.5035 18.2781 23.7913 17.9943L23.7969 17.9887C24.01 17.7786 24.2479 17.5439 24.4984 17.2281ZM24.4984 17.2281L24.5694 17.2849M20.9075 16.9904C20.9075 15.1498 22.1765 13.6008 23.8834 13.1763C23.8334 14.566 23.4881 15.6385 22.8362 16.4609C22.6616 16.6812 22.4878 16.8529 22.2992 17.0392C21.957 17.3773 21.5159 17.8131 21.1924 18.4596C21.0041 17.9935 20.9072 17.4946 20.9075 16.9904Z' stroke='#8254C6' stroke-width='0.5'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_160_574'>\r\n<rect width='40' height='31' fill='white' transform='translate(0 4)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "ovarianCyst",
              meaning:
                "\u06a9\u06cc\u0633\u062a \u062a\u062e\u0645\u062f\u0627\u0646",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_160_581)'>\r\n<path d='M34.5535 22.4948C34.4541 22.0449 34.5225 21.5707 34.7723 21.1765C35.2532 20.417 35.5313 19.5192 35.5313 18.5572C35.5313 17.4842 35.1848 16.4917 34.5971 15.6816C34.3517 15.3434 34.2411 14.9283 34.2711 14.5131C34.3459 13.4779 33.9834 12.4177 33.1829 11.6263C32.6197 11.0679 31.8903 10.7027 31.1019 10.5842C30.7039 10.5241 30.3341 10.3358 30.058 10.0461C29.2605 9.20936 28.1297 8.68674 26.8749 8.68674C26.6155 8.68674 26.3615 8.70911 26.1145 8.75199C25.4767 8.86278 24.8265 8.63478 24.4082 8.1462C23.7203 7.34299 22.6929 6.83304 21.5451 6.83304C20.4428 6.83304 19.4519 7.30338 18.7659 8.05197C18.2982 8.56248 17.5722 8.75094 16.9038 8.55636C16.3522 8.39577 15.7653 8.31649 15.1574 8.33268C14.5736 8.34795 13.9959 8.45415 13.4457 8.64738C11.9939 9.15703 10.3788 8.97629 9.12828 8.08682C8.46064 7.61202 7.88979 7.01675 7.44577 6.33235L7.16258 6.05238C6.87508 5.76808 6.48739 5.59618 6.08076 5.5973C5.19013 5.59952 4.46875 6.31418 4.46875 7.19537C4.46874 7.76565 4.63434 8.32394 4.94588 8.80389C6.20545 10.7446 6.87502 13.0019 6.87501 15.3077V15.42C6.87501 16.0876 6.68551 16.7381 6.35133 17.3182C5.98845 17.948 5.78101 18.6767 5.78101 19.4536C5.78101 20.2787 6.01495 21.0496 6.42063 21.7055C6.61753 22.024 6.70781 22.3957 6.67864 22.7678C6.66436 22.9532 6.61985 23.1351 6.54683 23.3064C5.96907 24.6555 6.23576 26.2739 7.34814 27.3737C7.94877 27.9675 8.7024 28.3177 9.48359 28.4244C10.0087 28.4962 10.4818 28.7866 10.7636 29.2305C11.6478 30.6231 13.214 31.5491 14.9998 31.5491C15.4937 31.5495 15.9849 31.4774 16.4573 31.335C17.1543 31.1248 17.9114 31.3342 18.3842 31.8825C19.1866 32.8128 20.3807 33.4027 21.7143 33.4027C22.9481 33.4027 24.0624 32.8976 24.8577 32.0853C25.1875 31.7483 25.6353 31.5505 26.1095 31.5486C26.7843 31.546 27.4665 31.3636 28.0803 30.9833C28.4804 30.7361 28.8295 30.4162 29.1091 30.0406C29.4239 29.6174 29.8999 29.3466 30.4282 29.2922C31.5287 29.1791 32.5983 28.7063 33.4417 27.8725C34.85 26.4803 35.2423 24.4643 34.6191 22.7241C34.5925 22.6491 34.5706 22.5725 34.5535 22.4948Z' stroke='#8254C6' stroke-width='1.2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M5.16718 5.9397C9.1817 11.8459 13.9107 18.107 25.2864 19.0481' stroke='#8254C6' stroke-width='1.2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M15.7184 16.4472C17.9864 17.4634 19.2293 16.1495 22.8791 16.9112M10.6249 12.755C12.7111 14.544 12.2343 17.1562 15.323 18.4419M8.99647 11.0425C10.6249 12.755 13.0936 11.4761 14.9515 12.755M17.0364 27.5476C16.8403 27.5439 16.6449 27.5709 16.4573 27.6276C15.9849 27.7699 15.4937 27.842 14.9999 27.8416C13.2141 27.8416 11.6478 26.9156 10.7637 25.523C10.4819 25.0792 10.0088 24.7887 9.48366 24.7169C8.70247 24.6102 7.94884 24.26 7.34821 23.6662C7.08044 23.4018 6.85471 23.099 6.67871 22.7678M34.5535 22.4948C34.3024 23.1209 33.924 23.6893 33.4418 24.1651C32.5984 24.9989 31.5288 25.4717 30.4283 25.5849C29.8999 25.6392 29.4239 25.9101 29.1092 26.3331C28.8296 26.7088 28.4805 27.0288 28.0804 27.2759C27.4665 27.6562 26.7844 27.8386 26.1097 27.8412C25.6353 27.8431 25.1876 28.0409 24.8577 28.3778C24.0625 29.1902 22.9483 29.6953 21.7143 29.6953C20.5475 29.6953 19.4873 29.2436 18.703 28.5075' stroke='#8254C6' stroke-width='1.2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M21.7144 27.4983C23.7855 27.4983 25.4644 26.1151 25.4644 24.4088C25.4644 22.7025 23.7855 21.3193 21.7144 21.3193C19.6433 21.3193 17.9644 22.7025 17.9644 24.4088C17.9644 26.1151 19.6433 27.4983 21.7144 27.4983Z' stroke='#8254C6' stroke-width='1.2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M30.6318 23.9368C32.2723 23.4067 33.2544 21.925 32.8253 20.6276C32.3963 19.3301 30.7186 18.7081 29.0782 19.2383C27.4378 19.7685 26.4557 21.2501 26.8847 22.5475C27.3137 23.845 28.9914 24.467 30.6318 23.9368Z' stroke='#8254C6' stroke-width='1.2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M23.417 11.8283C23.4352 10.5999 22.1908 9.58592 20.6376 9.56349C19.0844 9.54105 17.8105 10.5187 17.7924 11.7471C17.7742 12.9755 19.0186 13.9896 20.5718 14.012C22.125 14.0344 23.3988 13.0568 23.417 11.8283Z' stroke='#8254C6' stroke-width='1.2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M30.2302 12.3536C31.4894 13.4579 31.8885 15.1152 31.0987 16.2514C30.2258 17.5071 28.2311 17.6506 26.6434 16.5719C25.0557 15.4932 24.4762 13.6007 25.3491 12.345C26.0038 11.4032 27.2894 11.087 28.5612 11.4429' stroke='#8254C6' stroke-width='1.2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M16.3162 24.204C16.6203 23.2253 15.7968 22.1071 14.477 21.7063C13.1571 21.3055 11.8406 21.774 11.5366 22.7526C11.2326 23.7313 12.0561 24.8495 13.3759 25.2503C14.6958 25.6511 16.0122 25.1826 16.3162 24.204Z' stroke='#8254C6' stroke-width='1.2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M9.49836 20.8344C10.2466 20.6287 10.6283 19.6624 10.3509 18.676C10.0734 17.6896 9.24195 17.0568 8.49369 17.2625C7.74543 17.4683 7.36375 18.4346 7.64118 19.4209C7.91861 20.4073 8.7501 21.0401 9.49836 20.8344Z' stroke='#8254C6' stroke-width='1.2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_160_581'>\r\n<rect width='32' height='29' fill='white' transform='translate(4 5)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "ovarianLaziness",
              meaning:
                "\u06a9\u0645\u200c\u06a9\u0627\u0631\u06cc \u062a\u062e\u0645\u062f\u0627\u0646",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_160_584)'>\r\n<path d='M19.8593 35.5402C18.0625 35.5402 16.082 34.9151 14.2291 33.0027C13.2183 33.0922 10.7349 33.1299 8.98615 31.6484C7.89906 30.7288 7.29851 29.4153 7.19706 27.7386C5.8056 26.9651 4.82542 25.4515 4.64706 23.7409C4.48724 22.2147 4.97488 20.7982 6.00524 19.7089C5.31088 19.1384 4.81179 18.2744 4.6367 17.2696C4.34652 15.5984 4.9956 13.9609 6.38924 12.7675L4.56197 9.55639C4.50878 9.46302 4.47451 9.36009 4.4611 9.25347C4.4477 9.14686 4.45542 9.03865 4.48384 8.93502C4.54122 8.72573 4.6794 8.5478 4.86797 8.44039C5.05654 8.33298 5.28005 8.30487 5.48934 8.36226C5.69864 8.41965 5.87656 8.55782 5.98397 8.74639L8.16579 12.5809C8.2681 12.7607 8.29853 12.9725 8.25097 13.1738C8.20341 13.3751 8.08137 13.5509 7.90942 13.6659C6.0996 14.8751 6.14542 16.3931 6.24906 16.9888C6.40342 17.8762 6.96742 18.5875 7.65306 18.7593C7.80648 18.7979 7.94545 18.88 8.05313 18.9959C8.16081 19.1118 8.23259 19.2564 8.25977 19.4123C8.28696 19.568 8.26838 19.7285 8.2063 19.8739C8.14421 20.0195 8.04128 20.1438 7.90997 20.232C6.73179 21.0224 6.13506 22.2393 6.2736 23.5713C6.40888 24.8635 7.22542 26.0237 8.30542 26.4579C8.61524 26.5822 8.81815 26.8833 8.81815 27.2165C8.81815 28.6402 9.22997 29.712 10.0432 30.3993C11.6425 31.7531 14.3834 31.3397 14.4102 31.3347C14.5462 31.3118 14.6859 31.3237 14.8161 31.3694C14.9463 31.4151 15.0628 31.4931 15.1547 31.596C19.4725 36.4118 24.716 32.2397 24.9369 32.0597C25.0822 31.9414 25.2635 31.8764 25.4508 31.8754C25.6382 31.8744 25.8202 31.9375 25.9667 32.0542C27.4847 33.2733 29.126 33.5924 30.4689 32.9329C31.4845 32.4344 32.1805 31.4144 32.163 30.4517C32.1478 29.6215 31.6214 28.9517 30.6412 28.5153C30.4655 28.4371 30.323 28.2995 30.2388 28.1266C30.1546 27.9536 30.1341 27.7565 30.1809 27.57C30.4934 26.3139 30.4209 25.3408 29.9654 24.6758C29.4347 23.9024 28.5309 23.7693 28.5216 23.7682C28.3938 23.7521 28.2717 23.706 28.165 23.6338C28.0584 23.5616 27.9703 23.4652 27.9079 23.3525C27.8455 23.2399 27.8106 23.1141 27.806 22.9854C27.8013 22.8567 27.8271 22.7287 27.8812 22.6118C28.419 21.4565 27.9849 20.0645 27.8387 19.6648C27.8018 19.5638 27.7852 19.4566 27.7897 19.3493C27.7942 19.2419 27.8199 19.1365 27.8652 19.039C27.9566 18.8422 28.1225 18.6898 28.3263 18.6153C28.5302 18.5408 28.7553 18.5503 28.9521 18.6418C29.0495 18.687 29.1371 18.7511 29.2098 18.8302C29.2825 18.9093 29.3389 19.002 29.3758 19.1029C29.5885 19.6844 29.9758 21.0256 29.6633 22.4204C30.1885 22.6456 30.8316 23.0466 31.3149 23.7507C31.9553 24.6845 32.1516 25.8862 31.9029 27.3306C33.0931 28.0533 33.7754 29.1513 33.7989 30.4211C33.8289 32.0215 32.7805 33.6213 31.1905 34.4019C29.4107 35.2768 27.3445 35.0182 25.4436 33.7048C24.4896 34.338 22.3509 35.5402 19.8593 35.5402Z' fill='#8254C6'/>\r\n<path d='M12.9091 12.1614C12.7817 12.1613 12.6561 12.1315 12.5423 12.0744C12.4285 12.0174 12.3296 11.9344 12.2534 11.8324C10.592 9.60968 9.49562 7.42077 9.4498 7.32859C9.35953 7.13526 9.34836 6.91431 9.41865 6.71286C9.48895 6.5114 9.63517 6.34538 9.82612 6.25019C10.0171 6.155 10.2377 6.13816 10.4409 6.20328C10.644 6.2684 10.8138 6.41031 10.9138 6.59877C10.9242 6.61841 11.8558 8.47514 13.2549 10.4295C14.2313 10.2408 15.8829 10.0515 17.4822 10.4753C17.5865 10.5024 17.6844 10.5499 17.7702 10.615C17.8561 10.68 17.9283 10.7614 17.9827 10.8544C18.037 10.9475 18.0724 11.0503 18.087 11.1571C18.1014 11.2639 18.0947 11.3725 18.0671 11.4766C18.0396 11.5808 17.9916 11.6784 17.9262 11.764C17.8608 11.8496 17.779 11.9215 17.6858 11.9755C17.5925 12.0294 17.4895 12.0643 17.3827 12.0784C17.2758 12.0924 17.1673 12.0852 17.0633 12.0571C15.4296 11.6246 13.6214 12.008 13.1065 12.1373C13.0411 12.1536 12.9745 12.1614 12.9091 12.1614ZM18.9091 22.0144C18.6921 22.0144 18.484 21.9282 18.3305 21.7747C18.1771 21.6214 18.0909 21.4132 18.0909 21.1963C18.0909 20.2188 17.8662 19.5075 17.4418 19.1388C16.964 18.7243 16.3138 18.8099 16.3073 18.812C16.0937 18.8421 15.8768 18.7872 15.7031 18.6592C15.5295 18.5313 15.4129 18.3404 15.3783 18.1275C15.3444 17.9155 15.3956 17.6988 15.5208 17.5244C15.6459 17.35 15.8349 17.2321 16.0465 17.1964C16.1867 17.173 17.4407 16.9935 18.4874 17.8793C19.31 18.5764 19.7273 19.6924 19.7273 21.1963C19.7273 21.4132 19.6411 21.6214 19.4876 21.7747C19.3342 21.9282 19.1261 22.0144 18.9091 22.0144ZM12.3636 27.0708C11.1909 27.0708 10.3062 26.708 9.73562 25.9919C8.83889 24.8677 9.14762 23.371 9.1858 23.204C9.23354 22.9923 9.36343 22.8083 9.54689 22.6923C9.73036 22.5763 9.95236 22.538 10.1641 22.5858C10.3758 22.6335 10.5599 22.7634 10.6758 22.9469C10.7918 23.1303 10.8301 23.3523 10.7823 23.564C10.7289 23.8101 10.6689 24.5437 11.0191 24.9768C11.2645 25.2806 11.7167 25.4344 12.3636 25.4344C12.5806 25.4344 12.7887 25.5206 12.9422 25.6741C13.0956 25.8275 13.1818 26.0356 13.1818 26.2526C13.1818 26.4696 13.0956 26.6777 12.9422 26.8311C12.7887 26.9846 12.5806 27.0708 12.3636 27.0708ZM24.362 29.6093C24.227 29.6097 24.0942 29.5766 23.9753 29.5129C23.8564 29.4493 23.7551 29.3571 23.6806 29.2445C23.6062 29.132 23.5609 29.0027 23.5489 28.8684C23.5368 28.734 23.5582 28.5987 23.6114 28.4747C23.6644 28.351 24.164 27.2513 25.3498 26.9142C26.204 26.671 27.1318 26.8946 28.1065 27.5797C28.2772 27.7071 28.3913 27.896 28.425 28.1063C28.4586 28.3166 28.4089 28.5317 28.2866 28.7059C28.1643 28.8803 27.9788 29 27.7697 29.0398C27.5605 29.0797 27.344 29.0365 27.1662 28.9193C26.7898 28.6542 26.247 28.3662 25.8069 28.4856C25.3525 28.6089 25.1147 29.1211 25.1125 29.126C25.0468 29.2699 24.9411 29.392 24.8081 29.4776C24.675 29.5633 24.5202 29.609 24.362 29.6093ZM12.9091 15.446C12.699 15.446 12.4891 15.3659 12.3292 15.2055C12.0014 14.876 11.6758 14.7162 11.3332 14.7162C10.7305 14.7162 10.2205 15.2006 10.2156 15.2055C10.1403 15.2838 10.0501 15.3462 9.95039 15.3894C9.85065 15.4324 9.74334 15.4552 9.63471 15.4563C9.52609 15.4574 9.41831 15.4369 9.31769 15.396C9.21708 15.355 9.12561 15.2944 9.04865 15.2178C8.97169 15.1411 8.91077 15.0499 8.86944 14.9494C8.82812 14.8489 8.80721 14.7413 8.80794 14.6326C8.80868 14.524 8.83103 14.4166 8.87372 14.3167C8.91639 14.2168 8.97854 14.1264 9.05653 14.0507C9.1558 13.951 10.0602 13.0798 11.3332 13.0798C12.1105 13.0798 12.8561 13.4159 13.4884 14.0507C13.6021 14.1654 13.6795 14.311 13.7106 14.4695C13.7418 14.6279 13.7254 14.792 13.6634 14.9411C13.6015 15.0903 13.4968 15.2177 13.3626 15.3075C13.2284 15.3972 13.0705 15.4458 12.9091 15.446ZM20 28.5833C17.7331 28.5833 16.7611 26.7211 16.5636 25.7371C16.5202 25.5245 16.563 25.3033 16.6828 25.1222C16.8025 24.9412 16.9892 24.8151 17.2018 24.7717C17.4145 24.7283 17.6356 24.7712 17.8167 24.8908C17.9977 25.0105 18.1238 25.1972 18.1673 25.4099C18.2022 25.5702 18.5447 26.947 20 26.947C20.217 26.947 20.4251 27.0331 20.5785 27.1866C20.732 27.34 20.8182 27.5481 20.8182 27.7651C20.8182 27.9822 20.732 28.1902 20.5785 28.3437C20.4251 28.4971 20.217 28.5833 20 28.5833ZM24.8753 22.423C24.6768 22.423 24.485 22.351 24.3358 22.22C24.1865 22.0892 24.09 21.9085 24.0641 21.7117L23.7396 19.2386C21.2545 17.8324 19.7278 15.2376 19.7278 12.3637C19.7278 8.00277 23.2754 4.45459 27.6364 4.45459C31.9972 4.45459 35.5454 8.00277 35.5454 12.3637C35.5454 16.6935 32.0474 20.2221 27.7285 20.2717L25.4027 22.231C25.2527 22.3569 25.0651 22.423 24.8753 22.423ZM27.6364 6.09095C24.1782 6.09095 21.3641 8.9055 21.3641 12.3637C21.3641 14.7599 22.7033 16.9117 24.8594 17.9808C24.9797 18.0404 25.0835 18.1287 25.1616 18.2379C25.2397 18.3471 25.2897 18.4739 25.3073 18.607L25.4927 20.0153L26.9131 18.8186C27.0658 18.6904 27.2567 18.6195 27.4601 18.6261L27.5834 18.6326H27.5889C31.0983 18.6331 33.9091 15.8208 33.9091 12.3637C33.9091 8.9055 31.0945 6.09095 27.6364 6.09095Z' fill='#8254C6'/>\r\n<path d='M27.6363 17.5454C24.7793 17.5454 22.4545 15.2207 22.4545 12.3636C22.4545 9.50649 24.7793 7.18176 27.6363 7.18176C30.4934 7.18176 32.8182 9.50649 32.8182 12.3636C32.8182 15.2207 30.4934 17.5454 27.6363 17.5454ZM27.6363 8.81813C25.6814 8.81813 24.0909 10.4087 24.0909 12.3636C24.0909 14.3185 25.6814 15.909 27.6363 15.909C29.5913 15.909 31.1818 14.3185 31.1818 12.3636C31.1818 10.4087 29.5913 8.81813 27.6363 8.81813Z' fill='#8254C6'/>\r\n<path d='M27.6364 12.0909C26.1326 12.0909 24.9091 10.9896 24.9091 9.63631C24.9091 8.28304 26.1326 7.18176 27.6364 7.18176C29.1402 7.18176 30.3637 8.28304 30.3637 9.63631C30.3637 10.9896 29.1402 12.0909 27.6364 12.0909ZM27.6364 8.81813C27.0451 8.81813 26.5455 9.19285 26.5455 9.63631C26.5455 10.0798 27.0451 10.4545 27.6364 10.4545C28.2277 10.4545 28.7273 10.0798 28.7273 9.63631C28.7273 9.19285 28.2277 8.81813 27.6364 8.81813Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_160_584'>\r\n<rect width='32' height='32' fill='white' transform='translate(4 4)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "uterineFibroids",
              meaning:
                "\u0641\u06cc\u0628\u0631\u0648\u0645 \u0631\u062d\u0645\u06cc",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_160_587)'>\r\n<path d='M34.2905 21.3961C40.097 13.036 33.1235 4.49977 28.028 4.49977C27.8379 4.49977 25.1153 4.74251 23 3.44724C22.046 2.86311 20.8278 2.5127 19.5 2.5127C18.1723 2.5127 16.954 2.86311 16 3.44724C13.8847 4.74251 11.1621 4.49977 10.972 4.49977C5.88394 4.49977 -1.07648 13.0111 4.68424 21.3594' stroke='#8254C6' stroke-width='1.1' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M32.9088 24.7475C34.4498 23.2065 34.6996 20.9578 33.4668 19.725C32.234 18.4922 29.9853 18.7421 28.4443 20.2832C26.9033 21.8243 26.6534 24.073 27.8862 25.3058C29.1191 26.5386 31.3678 26.2886 32.9088 24.7475Z' stroke='#8254C6' stroke-width='1.1' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M11.1134 25.3053C12.3462 24.0724 12.0963 21.8237 10.5553 20.2827C9.01415 18.7417 6.76548 18.4919 5.53268 19.7247C4.29988 20.9576 4.54979 23.2062 6.09087 24.7473C7.63195 26.2883 9.88064 26.5381 11.1134 25.3053Z' stroke='#8254C6' stroke-width='1.1' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M24.1036 11.1782C25.0703 9.48139 26.8792 8.77062 27.8866 8.49637C28.3158 8.37954 28.6114 7.98681 28.6114 7.54207C28.6114 6.93764 28.0739 6.46814 27.4767 6.56173C24.8436 6.97428 22.6041 8.66583 19.4999 8.66583C16.3959 8.66583 14.1564 6.97434 11.5231 6.56173C10.926 6.46814 10.3885 6.9377 10.3885 7.54207V7.54309C10.3885 7.98791 10.6842 8.38043 11.1134 8.49739C12.4192 8.8532 15.0707 9.94047 15.4909 12.9585C15.9901 16.5437 17.6598 19.0793 18.023 22.5042C18.1028 23.2573 18.7426 23.8266 19.4999 23.8266M19.4999 23.8266C20.2573 23.8266 20.8971 23.2573 20.9769 22.5042C21.1847 20.5446 21.8203 18.8761 22.4195 17.1355M19.4999 23.8266L19.5 25.9124' stroke='#8254C6' stroke-width='1.1' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M22.5886 17.1355C24.2944 17.1355 25.6772 15.7527 25.6772 14.0469C25.6772 12.3411 24.2944 10.9583 22.5886 10.9583C20.8828 10.9583 19.4999 12.3411 19.4999 14.0469C19.4999 15.7527 20.8828 17.1355 22.5886 17.1355Z' stroke='#8254C6' stroke-width='1.1' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M27.6668 17.5597C28.3594 16.5619 28.7658 15.3511 28.7658 14.0469C28.7662 13.3816 28.6586 12.7206 28.447 12.0899C28.2878 11.6153 28.6047 11.1153 29.103 11.0672C32.252 10.7634 35.0275 14.9147 33.4511 19.4429M5.57615 19.52C3.61341 14.0488 8.02444 9.09201 11.8124 11.8242C12.3688 12.2256 12.6571 12.6933 12.7473 13.3405C13.0282 15.3579 13.625 17.073 14.1516 18.5864C14.7802 20.3928 15.3231 21.9529 15.3231 23.8265V25.8676C15.3231 27.0053 16.215 27.9672 17.3524 27.9986C18.5325 28.0313 19.4993 27.0848 19.5 25.9123C19.5007 27.0848 20.4675 28.0313 21.6476 27.9986C22.785 27.9672 23.6769 27.0053 23.6769 25.8676V23.8265C23.6769 23.7449 23.6779 23.664 23.6799 23.5837C23.7241 21.8291 24.6157 20.2221 26.0237 19.1815' stroke='#8254C6' stroke-width='1.1' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M15.2972 24.5465C14.9168 24.7073 14.508 24.7899 14.095 24.7893C13.2421 24.7893 12.4699 24.4436 11.911 23.8847M11.1262 20.8459C11.4969 19.5559 12.6857 18.6121 14.095 18.6121M15.3231 25.9112V26.8795C15.3231 27.7982 15.1818 28.7114 14.9041 29.587C14.407 31.1549 14.3512 32.8294 14.7427 34.4269C15.0392 35.6366 16.1235 36.4874 17.3691 36.4874H21.6309C22.8764 36.4874 23.9609 35.6366 24.2573 34.4269C24.6488 32.8294 24.5929 31.1549 24.0958 29.587C23.8181 28.7114 23.6768 27.7982 23.6768 26.8795V25.9112' stroke='#8254C6' stroke-width='1.1' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M21.4255 32.1998C21.4163 31.6297 21.3241 31.064 21.1517 30.5206C20.9029 29.7339 20.7762 28.9136 20.7763 28.0885V27.9271M20.8745 36.4875C20.9366 35.9055 21.0112 35.325 21.0981 34.7462L21.1823 34.1893M18.2239 27.9121V28.1042C18.2239 28.919 18.0989 29.7289 17.853 30.5058L17.8484 30.5206C17.5556 31.4437 17.4958 32.4249 17.6745 33.3766C17.7251 33.647 17.7766 33.9172 17.8177 34.1892L17.9019 34.7462C17.9888 35.325 18.0634 35.9055 18.1256 36.4875' stroke='#8254C6' stroke-width='1.1' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_160_587'>\r\n<rect width='35' height='35' fill='white' transform='translate(2 2)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "vaginalInfection",
              meaning:
                "\u0639\u0641\u0648\u0646\u062a \u0648\u0627\u0698\u0646",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_160_571)'>\r\n<path d='M33.9922 16.4921C32.9531 16.4921 32.0234 17.0116 31.4766 17.8592H29.4805C29.2344 16.328 28.6328 14.8788 27.7031 13.5936L29.125 12.1717C30.1094 12.3905 31.1484 12.0897 31.8594 11.3514C33.0352 10.1757 33.0352 8.2616 31.8594 7.08581C30.6836 5.91004 28.7695 5.91004 27.5938 7.08581C26.8555 7.82409 26.5547 8.83582 26.7734 9.82019L25.3516 11.2421C24.0938 10.3397 22.6172 9.73816 21.0859 9.46472V7.46862C21.9336 6.92175 22.4531 5.99206 22.4531 4.953C22.4531 3.28503 21.1133 1.94519 19.4453 1.94519C17.7773 1.94519 16.4922 3.33972 16.4922 5.00769C16.4922 6.04675 17.0117 6.97644 17.8594 7.52332V9.51941C16.3281 9.7655 14.8789 10.3671 13.5938 11.2967L12.1719 9.87487C12.3906 8.8905 12.0898 7.85144 11.3516 7.1405C10.1758 5.96472 8.26172 5.96472 7.08594 7.1405C6.51172 7.71472 6.21094 8.453 6.21094 9.27331C6.21094 10.0936 6.51172 10.8319 7.08594 11.4061C7.82422 12.1444 8.83594 12.4452 9.82031 12.2264L11.2422 13.6483C10.3398 14.9061 9.73828 16.3827 9.46484 17.9139H7.46875C6.92188 17.0663 5.99219 16.5467 4.95313 16.5467C3.33984 16.4921 2 17.8319 2 19.4999C2 21.1678 3.33984 22.5077 5.00781 22.5077C6.04688 22.5077 6.97656 21.9882 7.52344 21.1405H9.51953C9.76563 22.6717 10.3672 24.121 11.2969 25.4061L9.875 26.828C8.89063 26.6092 7.85156 26.91 7.14063 27.6483C6.56641 28.2225 6.26563 28.9608 6.26563 29.7811C6.26563 30.6014 6.56641 31.3397 7.14063 31.9139C8.31641 33.0897 10.2305 33.0897 11.4063 31.9139C12.1445 31.1757 12.4453 30.1639 12.2266 29.1796L13.6484 27.7577C14.9063 28.66 16.3828 29.2616 17.9141 29.535V31.5311C17.0664 32.078 16.5469 33.0077 16.5469 34.0467C16.5469 35.7147 17.8867 37.0546 19.5547 37.0546C21.2227 37.0546 22.5625 35.7147 22.5625 34.0467C22.5625 33.0077 22.043 32.078 21.1953 31.5311V29.535C22.7266 29.2889 24.1758 28.6874 25.4609 27.7577L26.8828 29.1796C26.6641 30.1639 26.9648 31.203 27.7031 31.9139C28.8789 33.0897 30.793 33.0897 31.9688 31.9139C33.1445 30.7382 33.1445 28.8241 31.9688 27.6483C31.2305 26.91 30.2188 26.6092 29.2344 26.828L27.8125 25.4061C28.7148 24.1483 29.3164 22.6717 29.5898 21.1405H31.5859C32.1328 21.9882 33.0625 22.5077 34.1016 22.5077C35.7695 22.5077 37.1094 21.1678 37.1094 19.4999C37.1094 17.8319 35.6602 16.4921 33.9922 16.4921ZM33.9922 21.4139C33.2539 21.4139 32.5977 21.0038 32.2695 20.3475C32.1875 20.1561 31.9961 20.0467 31.7773 20.0467H29.0156C28.7422 20.0467 28.4961 20.2655 28.4688 20.5389C28.2773 22.2069 27.6211 23.7928 26.582 25.1053C26.418 25.3241 26.418 25.6249 26.6367 25.8436L28.6055 27.8124C28.7422 27.9491 28.9609 28.0038 29.1523 27.9491C29.8359 27.703 30.6016 27.8944 31.1211 28.4139C31.8594 29.1522 31.8594 30.3827 31.1211 31.121C30.3828 31.8592 29.1523 31.8592 28.4141 31.121C27.8945 30.6014 27.7305 29.8632 27.9492 29.1522C28.0039 28.9608 27.9766 28.7421 27.8125 28.6053L25.8438 26.6092C25.6523 26.4178 25.3242 26.3905 25.1055 26.5546C23.793 27.5936 22.207 28.2499 20.5391 28.4413C20.2656 28.4686 20.0469 28.7147 20.0469 28.9882V31.7772C20.0469 31.996 20.1563 32.1874 20.3477 32.2694C21.0039 32.5975 21.4141 33.2538 21.4141 33.9921C21.4141 35.0585 20.5664 35.9061 19.5 35.9061C18.4336 35.9061 17.5859 35.0585 17.5859 33.9921C17.5859 33.2538 17.9961 32.5975 18.6523 32.2694C18.8438 32.1874 18.9531 31.996 18.9531 31.7772V29.0155C18.9531 28.7421 18.7344 28.496 18.4609 28.4686C16.793 28.2772 15.207 27.621 13.8945 26.5819C13.7852 26.4999 13.6758 26.4725 13.5664 26.4725C13.4297 26.4725 13.293 26.5272 13.1836 26.6366L11.2148 28.6053C11.0781 28.7421 11.0234 28.9608 11.0781 29.1522C11.3242 29.8358 11.1328 30.6014 10.6133 31.121C9.875 31.8592 8.64453 31.8592 7.90625 31.121C7.55078 30.7655 7.35938 30.2733 7.35938 29.7538C7.35938 29.2342 7.55078 28.7694 7.90625 28.3866C8.42578 27.8671 9.16406 27.703 9.875 27.9217C10.0664 27.9764 10.2852 27.9491 10.4219 27.785L12.3906 25.8163C12.582 25.6249 12.6094 25.2967 12.4453 25.078C11.4063 23.7655 10.75 22.1796 10.5586 20.5116C10.5313 20.2382 10.2852 20.0194 10.0117 20.0194H7.22266C7.00391 20.0194 6.8125 20.1288 6.73047 20.3202C6.40234 21.0038 5.74609 21.4139 5.00781 21.4139C3.94141 21.4139 3.09375 20.5663 3.09375 19.4999C3.09375 18.4335 3.94141 17.5858 5.00781 17.5858C5.74609 17.5858 6.40234 17.996 6.73047 18.6522C6.8125 18.8436 7.00391 18.953 7.22266 18.953H10.0117C10.2852 18.953 10.5313 18.7342 10.5586 18.4608C10.75 16.7928 11.4063 15.2069 12.4453 13.8944C12.6094 13.6757 12.6094 13.3749 12.3906 13.1561L10.4219 11.1874C10.2852 11.0507 10.0664 10.996 9.875 11.0507C9.19141 11.2967 8.42578 11.1053 7.90625 10.5858C7.55078 10.2303 7.35938 9.73816 7.35938 9.21863C7.35938 8.69909 7.55078 8.23425 7.90625 7.85144C8.64453 7.11316 9.875 7.11316 10.6133 7.85144C11.1328 8.37097 11.2969 9.10926 11.0781 9.82019C11.0234 10.0116 11.0508 10.2303 11.2148 10.3671L13.1836 12.3358C13.375 12.5272 13.7031 12.5546 13.9219 12.3905C15.2344 11.3514 16.8203 10.6952 18.4883 10.5038C18.7617 10.4764 18.9805 10.2303 18.9805 9.95691V7.22253C18.9805 7.00379 18.8711 6.81237 18.6797 6.73034C17.9961 6.40222 17.5859 5.74597 17.5859 5.00769C17.5859 3.94128 18.4336 3.09362 19.5 3.09362C20.5664 3.09362 21.4141 3.94128 21.4141 5.00769C21.4141 5.74597 21.0039 6.40222 20.3477 6.73034C20.1563 6.81237 20.0469 7.00379 20.0469 7.22253V10.0116C20.0469 10.285 20.2656 10.5311 20.5391 10.5585C22.207 10.7499 23.793 11.4061 25.1055 12.4452C25.3242 12.6092 25.625 12.6092 25.8438 12.3905L27.8125 10.4217C27.9492 10.285 28.0039 10.0663 27.9492 9.87487C27.7031 9.19128 27.8945 8.42566 28.4141 7.90612C29.1523 7.16785 30.3828 7.16785 31.1211 7.90612C31.8594 8.64441 31.8594 9.87487 31.1211 10.6132C30.6016 11.1327 29.8633 11.2967 29.1523 11.078C28.9609 11.0233 28.7422 11.0507 28.6055 11.2147L26.6094 13.1561C26.418 13.3475 26.3906 13.6757 26.5547 13.8944C27.5938 15.2069 28.25 16.7928 28.4414 18.4608C28.4688 18.7342 28.7148 18.953 28.9883 18.953H31.7773C31.9961 18.953 32.1875 18.8436 32.2695 18.6522C32.5977 17.996 33.2539 17.5858 33.9922 17.5858C35.0586 17.5858 35.9063 18.4335 35.9063 19.4999C35.9063 20.5663 35.0586 21.4139 33.9922 21.4139Z' fill='#8254C6'/>\r\n<path d='M14.0313 17.5859C12.9648 17.5859 12.1172 18.4336 12.1172 19.5C12.1172 20.5664 12.9648 21.4141 14.0313 21.4141C15.0977 21.4141 15.9453 20.5664 15.9453 19.5C15.9453 18.4336 15.0977 17.5859 14.0313 17.5859ZM14.0313 20.3203C13.5664 20.3203 13.2109 19.9648 13.2109 19.5C13.2109 19.0352 13.5664 18.6797 14.0313 18.6797C14.4961 18.6797 14.8516 19.0352 14.8516 19.5C14.8516 19.9648 14.4961 20.3203 14.0313 20.3203ZM18.1328 16.2188C19.1992 16.2188 20.0469 15.3711 20.0469 14.3047C20.0469 13.2383 19.1992 12.3906 18.1328 12.3906C17.0664 12.3906 16.2188 13.2383 16.2188 14.3047C16.2188 15.3711 17.0664 16.2188 18.1328 16.2188ZM18.1328 13.4844C18.5977 13.4844 18.9531 13.8398 18.9531 14.3047C18.9531 14.7695 18.5977 15.125 18.1328 15.125C17.668 15.125 17.3125 14.7695 17.3125 14.3047C17.3125 13.8398 17.668 13.4844 18.1328 13.4844ZM18.1328 23.3281C17.0664 23.3281 16.2188 24.1758 16.2188 25.2422C16.2188 26.3086 17.0664 27.1563 18.1328 27.1563C19.1992 27.1563 20.0469 26.3086 20.0469 25.2422C20.0469 24.1758 19.1992 23.3281 18.1328 23.3281ZM18.1328 26.0625C17.668 26.0625 17.3125 25.707 17.3125 25.2422C17.3125 24.7773 17.668 24.4219 18.1328 24.4219C18.5977 24.4219 18.9531 24.7773 18.9531 25.2422C18.9531 25.707 18.5977 26.0625 18.1328 26.0625ZM23.6016 20.5938C22.5352 20.5938 21.6875 21.4414 21.6875 22.5078C21.6875 23.5742 22.5352 24.4219 23.6016 24.4219C24.668 24.4219 25.5156 23.5742 25.5156 22.5078C25.5156 21.4414 24.668 20.5938 23.6016 20.5938ZM23.6016 23.3281C23.1367 23.3281 22.7813 22.9727 22.7813 22.5078C22.7813 22.043 23.1367 21.6875 23.6016 21.6875C24.0664 21.6875 24.4219 22.043 24.4219 22.5078C24.4219 22.9727 24.0664 23.3281 23.6016 23.3281ZM24.5586 16.6016C24.6953 16.0547 24.5313 15.4531 24.1211 15.043C23.9023 14.8242 23.6563 14.6875 23.3555 14.6055C22.4805 14.3867 21.5781 14.9336 21.3594 15.8086C21.0586 17.0117 19.418 17.9414 18.8438 18.1602C17.9961 18.4883 17.6133 19.4453 17.9414 20.293C18.1055 20.7031 18.4063 21.0313 18.8164 21.1953C19.0352 21.2773 19.2539 21.332 19.4727 21.332C19.6914 21.332 19.8828 21.3047 20.0742 21.2227C20.2383 21.1406 23.793 19.6914 24.5586 16.6016ZM19.6914 20.1836C19.5547 20.2383 19.418 20.2383 19.2813 20.1836C19.1445 20.1289 19.0352 20.0195 18.9805 19.8828C18.8711 19.6094 19.0078 19.2812 19.2813 19.1719C20.2109 18.7891 22.043 17.668 22.4258 16.0547C22.4805 15.8086 22.6992 15.6445 22.9453 15.6445C23 15.6445 23.0273 15.6445 23.082 15.6719C23.1914 15.6992 23.2734 15.7539 23.3281 15.8086C23.4648 15.9453 23.5195 16.1367 23.4648 16.3281C22.8633 18.8711 19.8281 20.1289 19.6914 20.1836Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_160_571'>\r\n<rect width='35' height='35' fill='white' transform='translate(2 2)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "uterinePolyp",
              meaning: "\u067e\u0648\u0644\u06cc\u067e \u0631\u062d\u0645",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_160_591)'>\r\n<path d='M9.03265 18.1191H3.92352C2.29821 18.1191 0.980713 19.4429 0.980713 21.0757C0.980713 21.6386 1.1407 22.1898 1.44184 22.6646C1.74299 23.1393 2.17279 23.5178 2.68071 23.7556L4.30001 24.5957' stroke='#8254C6' stroke-width='1.3' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M9.19283 26.852C9.62808 25.8257 8.87225 24.5193 7.5046 23.9337C6.13696 23.3483 4.67541 23.7055 4.24015 24.7317C3.80489 25.7578 4.56074 27.0644 5.92839 27.6499C7.29603 28.2354 8.75758 27.8782 9.19283 26.852Z' stroke='#8254C6' stroke-width='1.3' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M21.9379 37.1337C21.9379 37.1337 21.9124 34.156 23.1649 31.154C25.3242 25.9787 31.8292 23.7745 30.5554 16.5412C29.4844 10.4595 22.1579 10.3602 19.8657 10.3602C17.5736 10.3602 10.2471 10.4595 9.17608 16.5412C7.90224 23.7745 14.505 25.9385 16.5666 31.154C17.6427 33.8762 17.7936 37.1337 17.7936 37.1337' stroke='#8254C6' stroke-width='1.3' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M30.6991 18.1193H35.8082C37.4336 18.1193 38.7511 19.443 38.7511 21.0757C38.7511 21.6386 38.5911 22.1899 38.2899 22.6646C37.9888 23.1394 37.559 23.5179 37.0511 23.7556L35.4317 24.5958M19.8659 29.9087C19.8659 28.5071 20.4738 27.535 22.1062 25.2037C23.7906 22.7983 25.9111 21.7911 25.2675 18.136C24.7263 15.0629 21.0445 14.859 19.8658 14.859C18.6871 14.859 15.0054 15.0629 14.4641 18.136C13.8205 21.7911 15.9347 22.8026 17.6254 25.2037C19.2672 27.535 19.8659 28.7265 19.8659 29.9087Z' stroke='#8254C6' stroke-width='1.3' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M33.8088 27.6129C35.1765 27.0277 35.9326 25.7213 35.4975 24.695C35.0625 23.6688 33.601 23.3113 32.2332 23.8966C30.8655 24.4818 30.1095 25.7882 30.5445 26.8145C30.9795 27.8407 32.441 28.1982 33.8088 27.6129Z' stroke='#8254C6' stroke-width='1.3' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M19.8668 37.1335V29.9085M19.8658 5.93441V3.32812M14.5283 6.58727L12.8138 4.63127M25.2033 6.58727L26.9178 4.63127' stroke='#8254C6' stroke-width='1.3' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_160_591'>\r\n<rect width='40' height='36' fill='white' transform='translate(0 2)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "vaginalDryness",
              meaning: "\u062e\u0634\u06a9\u06cc \u0648\u0627\u0698\u0646",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_594)'>\r\n<path d='M30.787 23.3436C30.5759 19.8847 29.6992 17.2852 28.9313 15.0001C28.3681 13.33 27.8369 11.7578 27.6386 10.0668C27.421 8.23593 27.485 7.01306 27.5618 5.60152C27.6002 4.87478 27.6386 4.12009 27.645 3.21168C27.645 2.9112 27.4274 2.66663 27.1523 2.66663C26.8771 2.66663 26.6595 2.90421 26.6595 3.20469C26.6531 4.07817 26.6147 4.81888 26.5763 5.53863C26.4995 6.94318 26.4355 8.27786 26.6595 10.2065C26.845 11.8067 27.2994 13.2671 27.805 14.7835C27.0818 15.0141 26.4227 15.2308 25.8276 15.4264C24.5477 15.8457 23.4983 16.1881 22.6151 16.4397C21.988 15.0281 20.9961 13.7423 20.1834 12.6942C19.985 12.4356 19.793 12.191 19.6202 11.9605C19.5242 11.8347 19.3835 11.7578 19.2363 11.7578C19.0891 11.7578 18.9483 11.8347 18.8523 11.9605C18.6795 12.191 18.4939 12.4356 18.2956 12.6942C17.9436 13.1484 17.5532 13.6515 17.1757 14.1896L16.1518 12.6662C15.9918 12.4217 15.6782 12.3727 15.4606 12.5474C15.2431 12.7221 15.1919 13.0645 15.3519 13.3021L16.5677 15.112C16.3053 15.5382 16.0686 15.9785 15.8638 16.4397C15.0063 16.1881 13.9952 15.8597 12.7601 15.4614C12.1522 15.2657 11.4803 15.0421 10.7443 14.8115C11.2499 13.2882 11.7106 11.8207 11.8962 10.2135C12.1266 8.28484 12.0562 6.95017 11.9794 5.54562C11.941 4.82587 11.9026 4.08516 11.8962 3.21168C11.8962 2.9112 11.6723 2.67361 11.4035 2.67361C11.1283 2.67361 10.9107 2.91819 10.9107 3.21866C10.9171 4.12009 10.9555 4.87478 10.9939 5.6085C11.0707 7.02005 11.1347 8.24292 10.9171 10.0738C10.7187 11.7578 10.1876 13.337 9.62446 15.0071C8.85014 17.2991 7.97343 19.8916 7.76865 23.3506C7.53188 27.2987 8.19741 31.75 9.81644 36.9629C9.88683 37.1865 10.0788 37.3333 10.2836 37.3333C10.3348 37.3333 10.3924 37.3263 10.4436 37.3053C10.7059 37.2075 10.8403 36.9 10.7571 36.6205C9.36209 32.1133 8.79255 28.5775 8.71576 25.6496C10.546 24.7063 12.6386 24.4756 15.1215 24.9648C15.1791 24.9928 15.2431 24.9997 15.3007 24.9997C16.3694 25.2234 17.5084 25.5798 18.7371 26.0689C18.6923 30.8067 18.2956 34.3495 17.566 36.6065C17.4764 36.886 17.6108 37.2005 17.8668 37.2983C17.9244 37.3193 17.9756 37.3263 18.0332 37.3263C18.238 37.3263 18.4299 37.1865 18.5003 36.9629C18.8011 36.0336 19.0507 34.9085 19.2427 33.5948C19.4346 34.9155 19.6778 36.0405 19.985 36.9629C20.0554 37.1865 20.2473 37.3263 20.4521 37.3263C20.5097 37.3263 20.5609 37.3193 20.6185 37.2983C20.8745 37.2005 21.0089 36.886 20.9193 36.6065C20.1897 34.3565 19.793 30.8136 19.7482 26.0689C23.9526 24.3918 27.1779 24.266 29.8527 25.6845C29.7696 28.5985 29.2064 32.1273 27.8114 36.6135C27.7218 36.9 27.8626 37.2005 28.1249 37.2983C28.1761 37.3193 28.2337 37.3263 28.2849 37.3263C28.4897 37.3263 28.6817 37.1865 28.7521 36.9559C30.3519 31.743 31.0238 27.2917 30.787 23.3436ZM19.0507 13.386C19.1147 13.3021 19.1787 13.2253 19.2363 13.1414C19.3003 13.2183 19.3579 13.3021 19.4218 13.386C20.6377 14.9512 22.2951 17.1035 22.2184 19.1579C22.1928 19.8916 22.0072 20.4856 21.7192 20.9538L17.7836 15.091C18.206 14.476 18.6475 13.9031 19.0507 13.386ZM21.0153 21.7364C20.4906 22.1347 19.857 22.3094 19.2491 22.2955H19.2234C17.854 22.3304 16.3373 21.3661 16.2542 19.1649C16.2158 18.1167 16.6253 17.0476 17.1949 16.0414L21.0153 21.7364ZM19.2363 25.1185C17.9244 24.5875 16.7021 24.1961 15.5502 23.9516C15.3071 23.6302 15.0895 23.2388 15.1791 22.3234C15.2047 22.0229 15.0127 21.7574 14.7376 21.7294C14.4623 21.6945 14.2192 21.9111 14.1936 22.2116C14.1296 22.8684 14.1936 23.3576 14.3088 23.7349C13.9248 23.6861 13.5537 23.6511 13.1889 23.6371C12.9841 23.3017 12.6002 22.575 12.5362 22.009C12.4786 21.5128 12.9905 21.2124 13.0161 21.1913C13.2593 21.0586 13.3553 20.7302 13.2337 20.4647C13.1121 20.1991 12.8113 20.0873 12.5682 20.2271C12.2034 20.4297 11.6467 20.9398 11.5507 21.7015C11.2115 21.8622 10.8147 21.967 10.0532 21.6456C9.79724 21.5408 9.50927 21.6736 9.41328 21.9531C9.3173 22.2326 9.43888 22.547 9.69485 22.6518C10.1876 22.8614 10.5908 22.9313 10.9363 22.9313C11.2371 22.9313 11.4867 22.8754 11.6978 22.7916C11.7938 23.0921 11.9218 23.3855 12.037 23.6302C10.8467 23.7 9.73965 23.9725 8.70295 24.4477C8.74775 22.0369 9.13171 20.0664 9.61806 18.3054C9.63086 18.2914 9.64366 18.2705 9.65006 18.2565C9.66286 18.2355 9.98922 17.6974 10.4436 17.8093C11.0003 17.949 11.717 18.543 11.941 18.7526C12.037 18.8434 12.1522 18.8854 12.2674 18.8854C12.4082 18.8854 12.5426 18.8225 12.6449 18.6967C12.8241 18.4731 12.8049 18.1307 12.5938 17.9351C12.4914 17.8372 11.5699 16.9777 10.6676 16.7541C10.4628 16.7052 10.2708 16.6982 10.098 16.7262C10.2004 16.4117 10.3028 16.1113 10.4052 15.8037C11.1667 16.0484 11.8578 16.2719 12.485 16.4746C13.6688 16.8589 14.6479 17.1804 15.4991 17.4249C15.3327 17.998 15.2431 18.5919 15.2687 19.1929C15.3775 21.9949 17.3485 23.4065 19.2427 23.3646H19.3323C20.1321 23.3646 20.9385 23.106 21.604 22.5959L22.3207 23.665C22.4168 23.8118 22.5703 23.8887 22.7239 23.8887C22.8263 23.8887 22.9287 23.8537 23.0182 23.7839C23.2359 23.6091 23.287 23.2667 23.1271 23.0292L22.3399 21.8552C22.8455 21.1844 23.1783 20.2969 23.2167 19.1929C23.2423 18.5989 23.1527 18.0049 22.9863 17.4319C23.863 17.1734 24.8805 16.845 26.1091 16.4397C26.7171 16.244 27.4018 16.0203 28.1442 15.7828C28.3617 16.4397 28.5857 17.1035 28.7905 17.8093C27.8242 18.1307 27.4786 18.7177 27.2355 19.123L27.2099 19.1579C27.0627 19.4095 27.1267 19.7449 27.357 19.9056C27.4402 19.9685 27.5362 19.9965 27.6258 19.9965C27.7858 19.9965 27.9458 19.9126 28.0417 19.7519L28.061 19.7239C28.2529 19.3955 28.4577 19.0601 29.0721 18.8575C29.4944 20.4926 29.808 22.3164 29.8464 24.4967C29.4432 24.308 29.0272 24.1472 28.6049 24.0215C28.5665 23.9586 28.5089 23.9027 28.4449 23.8607C28.4385 23.8537 27.6898 23.3716 26.8195 22.2256C26.4483 21.7434 26.4547 21.5757 26.4547 21.5757C26.4611 21.5478 26.5187 21.4779 26.5507 21.429C27.1714 20.5834 27.101 19.7239 24.9893 17.3481C24.7973 17.1315 24.4837 17.1315 24.2854 17.3341C24.087 17.5437 24.087 17.8861 24.2725 18.1027C24.5605 18.4312 24.8165 18.7317 25.0277 18.9972C24.6309 19.2487 24.5221 19.6681 24.4389 19.9965C24.3237 20.4437 24.2022 20.9118 23.3446 21.387C23.1015 21.5198 23.0055 21.8482 23.1271 22.1138C23.2167 22.3024 23.3894 22.4073 23.5686 22.4073C23.6454 22.4073 23.7222 22.3863 23.7926 22.3514C25.034 21.6595 25.2517 20.835 25.3924 20.2899C25.4756 19.9545 25.4948 19.9056 25.642 19.8777C25.7444 20.0523 25.8148 20.2061 25.8531 20.3389C25.9172 20.5415 25.898 20.5625 25.7636 20.7442C25.3476 21.3102 25.2517 21.8692 26.0452 22.9104C26.2627 23.1899 26.4675 23.4415 26.6659 23.6511C24.5157 23.4764 22.0776 23.9586 19.2363 25.1185Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_594'>\r\n<rect width='26' height='35' fill='white' transform='translate(7 2)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "uterineProlapse",
              meaning:
                "\u0627\u0641\u062a\u0627\u062f\u06af\u06cc \u0631\u062d\u0645",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_599)'>\r\n<path d='M24.2386 22.7515C24.2955 22.8127 24.3651 22.8608 24.4424 22.8926C24.5196 22.9243 24.6029 22.939 24.6864 22.9357C24.7699 22.9322 24.8517 22.9109 24.9262 22.873C25.0007 22.835 25.0661 22.7814 25.1179 22.7159C25.1723 22.6473 25.2104 22.5674 25.2295 22.482C25.2486 22.3966 25.2481 22.308 25.2282 22.2228C25.066 21.5311 23.8892 20.0797 22.3961 19.0211C21.2589 18.2094 20.2156 17.2736 19.2854 16.231C18.4347 15.2836 16.721 13.6944 14.8015 13.6944C14.568 13.6754 14.333 13.7074 14.1131 13.7882C13.8932 13.8691 13.6935 13.9967 13.5278 14.1624C13.3621 14.3281 13.2344 14.5278 13.1536 14.7478C13.0728 14.9677 13.0407 15.2026 13.0598 15.4361C13.0598 17.6082 15.5397 18.6942 19.049 19.9935C21.0143 20.7214 23.0462 21.474 24.2386 22.7515ZM19.4465 18.9023C16.4858 17.8063 14.221 16.8549 14.221 15.436C14.221 14.9966 14.3622 14.8555 14.8015 14.8555C16.2704 14.8555 17.7 16.2032 18.4214 17.0066C19.2587 17.9428 20.1812 18.7994 21.1769 19.5651C20.5964 19.3283 20.0112 19.1115 19.4465 18.9023ZM20.3477 24.7867C18.3159 25.803 15.0933 24.2216 15.0607 24.2057C14.9229 24.1373 14.7635 24.1262 14.6176 24.1751C14.4717 24.224 14.3511 24.3287 14.2822 24.4663C14.2135 24.6039 14.2023 24.7632 14.251 24.9092C14.2996 25.0551 14.4043 25.1758 14.5419 25.2447C15.8485 25.8735 17.2703 26.2274 18.7193 26.2845C19.4612 26.3003 20.1965 26.1431 20.867 25.8253C21.0044 25.7562 21.1088 25.6355 21.1572 25.4896C21.2056 25.3437 21.1942 25.1845 21.1255 25.047C21.0567 24.9094 20.9362 24.8047 20.7904 24.756C20.6446 24.7072 20.4854 24.7182 20.3477 24.7867Z' fill='#8254C6'/>\r\n<path d='M36.1636 14.0225C35.0326 10.64 32.9652 8.61606 31.3168 7.00209C30.4378 6.25386 29.6916 5.36247 29.1095 4.36557C29.0542 4.24541 29.0075 4.12144 28.9698 3.99461C28.8677 3.63012 28.6491 3.30909 28.3473 3.08057C28.0455 2.85206 27.6772 2.72862 27.2987 2.72913H3.87948C3.76386 2.72904 3.64851 2.74028 3.53508 2.76268C2.74335 2.91824 2.16418 3.60047 2.13921 4.407L2.13139 4.62116L2.10801 5.25947C2.1013 5.43689 2.09418 5.6341 2.08712 5.82647L2.07937 6.0364C2.07599 6.13095 2.07287 6.22952 2.06948 6.32733C2.06167 6.55387 2.05413 6.78538 2.04693 7.02679C2.04507 7.09035 2.04341 7.15441 2.04161 7.21908C2.03303 7.51915 2.02556 7.8291 2.01913 8.14909L2.01809 8.20435C1.92236 13.0635 2.13277 20.0745 4.4859 25.749V35.8223C4.48694 36.7838 5.26615 37.563 6.22762 37.564H27.7701C28.6667 37.5574 29.414 36.8758 29.5028 35.9836C29.7228 33.9857 30.6298 32.1261 32.0689 30.7228C34.2142 28.8655 35.7481 26.4031 36.4695 23.6586C36.5002 23.5443 36.5303 23.4297 36.5584 23.3143C36.5981 23.149 36.6369 22.9834 36.6713 22.8156C36.7269 22.5485 36.7752 22.2798 36.8163 22.0101C36.8312 21.9107 36.8431 21.81 36.8561 21.7099C36.8911 21.445 36.9193 21.1775 36.9409 20.9076C36.9489 20.8078 36.9563 20.7081 36.9624 20.6075C36.9838 20.2637 36.9985 19.9174 36.9985 19.5661C37.023 17.6852 36.7411 15.8127 36.1636 14.0225ZM28.3484 35.8574C28.3378 36.0042 28.2725 36.1417 28.1654 36.2427C28.0584 36.3437 27.9173 36.4008 27.7701 36.4029H6.22762C6.07372 36.4026 5.92617 36.3414 5.81733 36.2326C5.7085 36.1237 5.64728 35.9762 5.64707 35.8223V28.1092C7.77152 32.0565 11.7163 34.6924 16.1761 35.1447C16.5556 35.1908 16.9396 35.1114 17.2697 34.9186C17.5998 34.7258 17.8577 34.4302 18.004 34.0771C18.4057 33.2432 18.8704 32.4412 19.3942 31.678C20.4482 30.0315 21.6201 28.1897 21.8538 26.5251C21.8856 26.3358 21.9022 26.1443 21.9033 25.9524C21.9028 25.8461 21.8947 25.7401 21.8792 25.6351C21.6354 23.6497 19.1169 22.7131 16.4527 21.7267C13.1385 20.4997 9.71116 19.2309 9.71116 16.0825C9.69395 15.6967 9.75731 15.3116 9.89709 14.9516C10.0369 14.5917 10.2502 14.2647 10.5232 13.9916C10.7962 13.7186 11.1232 13.5053 11.4832 13.3656C11.8431 13.2258 12.2282 13.1624 12.614 13.1796C14.8658 13.1796 16.7651 14.7683 17.9617 16.101C18.8345 17.0797 19.8133 17.9584 20.8803 18.7207C22.0479 19.5412 23.0457 20.5798 23.819 21.7792C23.8267 21.7978 23.8354 21.816 23.845 21.8337C24.0698 22.2016 24.2005 22.6191 24.2257 23.0496C24.2726 25.1497 23.6515 27.2105 22.452 28.935L22.4404 28.9534C22.2666 29.227 22.1146 29.4671 21.9936 29.7001C21.9826 29.7214 21.9717 29.7424 21.9613 29.7636L21.9526 29.7812C21.787 30.1069 21.5142 30.55 21.2259 31.0183C20.757 31.7452 20.3329 32.5001 19.9562 33.2788C19.8835 33.4276 19.8499 33.5924 19.8584 33.7577C19.8669 33.923 19.9174 34.0835 20.005 34.224C20.0987 34.3634 20.2264 34.4766 20.3759 34.5531C20.5255 34.6296 20.6921 34.6667 20.86 34.6611H21.301C21.8877 34.6626 22.4738 34.6611 23.0604 34.6653C23.1474 34.6709 23.2343 34.6545 23.3132 34.6176C23.3922 34.5808 23.4607 34.5247 23.5122 34.4545C23.5672 34.388 23.6066 34.31 23.6277 34.2264C23.6487 34.1427 23.6508 34.0554 23.6339 33.9708L23.6331 33.9665C23.6229 33.916 23.6062 33.8671 23.5832 33.8211C23.259 33.2353 23.0007 32.6154 22.8127 31.9728C22.6662 31.403 22.7341 30.7991 23.0034 30.2761C23.1049 30.0732 23.2566 29.8342 23.4324 29.5575C24.7571 27.6501 25.4416 25.3712 25.387 23.0495V23.0399C25.3693 22.5013 25.2299 21.9737 24.9794 21.4966C25.0794 21.2253 25.1966 20.9606 25.3303 20.7043C25.7319 20.0032 25.951 19.2125 25.9676 18.4048C25.8996 17.4595 25.5694 16.5518 25.014 15.7838C24.5739 15.1925 24.3016 14.4934 24.2259 13.7603C24.2259 11.1884 24.9857 10.2767 27.1288 10.2767C28.7866 10.2767 28.8705 13.6621 28.8705 14.3408C28.9157 14.7182 29.0737 15.0731 29.3241 15.359C30.208 16.5797 30.6611 18.0596 30.6122 19.566C30.6122 22.5009 28.2681 25.176 27.2603 26.1897C27.0335 26.4171 26.8537 26.6871 26.7315 26.9841C26.6093 27.2812 26.547 27.5995 26.5482 27.9207V27.9845C26.5464 28.1623 26.509 28.3381 26.4382 28.5012C26.3674 28.6644 26.2647 28.8117 26.136 28.9344C25.7389 29.294 25.4169 29.7287 25.1887 30.2134C24.9605 30.6981 24.8306 31.2232 24.8064 31.7583C24.807 31.9038 24.8194 32.0491 24.8436 32.1926C24.8884 32.4651 24.9944 32.7239 25.1538 32.9495C25.3131 33.1751 25.5216 33.3616 25.7635 33.4949C26.0082 33.6326 26.2811 33.7129 26.5614 33.7296C26.8418 33.7464 27.1222 33.6992 27.3816 33.5916C28.0245 33.3246 28.6515 33.0211 29.2597 32.6824C28.7794 33.6819 28.4713 34.7554 28.3484 35.8574ZM16.3709 29.4305C17.5107 29.4481 18.645 29.2698 19.7244 28.9033C19.3252 29.6262 18.8607 30.3575 18.4162 31.0517C17.854 31.8712 17.3575 32.734 16.9316 33.632C16.8834 33.7516 16.7969 33.8518 16.6856 33.9169C16.5744 33.9821 16.4446 34.0085 16.3167 33.992C15.8435 33.9343 15.3898 33.8528 14.9495 33.7558C15.0113 32.2664 15.4956 30.439 16.3709 29.4305ZM16.0976 28.2747C11.9306 28.2747 9.71116 26.2518 9.71116 24.7912C9.71116 24.2172 10.332 23.63 14.9364 23.63C18.3804 23.63 20.0384 24.4068 20.5559 25.295C20.5694 25.3187 20.5817 25.3423 20.5937 25.3663C20.6161 25.4095 20.6363 25.4538 20.6542 25.4992C20.6691 25.5384 20.6806 25.5786 20.6917 25.6187C20.7011 25.6525 20.712 25.6864 20.7184 25.7201C20.7335 25.7966 20.7415 25.8744 20.7422 25.9524C20.7395 26.1218 20.7231 26.2906 20.6933 26.4574C20.5251 27.1984 19.7448 28.2747 16.0976 28.2747ZM22.137 33.5005C21.9184 33.5 21.6997 33.4998 21.4813 33.5H21.1354C21.3055 33.1549 21.5145 32.7861 21.7319 32.4207C21.8396 32.7903 21.975 33.1512 22.137 33.5005ZM35.8039 20.532C35.7983 20.6198 35.7921 20.7074 35.785 20.795C35.7639 21.0617 35.7358 21.3278 35.7004 21.593C35.6932 21.6465 35.6886 21.701 35.6808 21.7543C35.6393 22.04 35.5861 22.3207 35.5283 22.5992C35.5026 22.7208 35.4752 22.8419 35.4461 22.9626C35.4071 23.1259 35.3651 23.2884 35.32 23.4501C35.2381 23.7456 35.1463 24.0384 35.0449 24.3277C35.0242 24.3868 35.0055 24.4469 34.9841 24.5055C34.9107 24.7029 34.8326 24.8986 34.7498 25.0923C34.736 25.1248 34.7218 25.1572 34.7079 25.1895C33.9635 26.8904 32.8671 28.4142 31.4909 29.6604C31.4368 29.7098 31.3891 29.7646 31.3363 29.815C30.0309 30.9543 28.5447 31.868 26.9387 32.5182C26.8407 32.5585 26.7349 32.576 26.6293 32.5696C26.5236 32.563 26.4207 32.5326 26.3286 32.4805C26.2396 32.432 26.1628 32.3639 26.104 32.2813C26.0452 32.1988 26.006 32.1039 25.9892 32.004C25.9752 31.9228 25.9679 31.8406 25.9673 31.7582C26.0201 30.9894 26.3733 30.2722 26.9505 29.7616C27.1893 29.5311 27.3794 29.2551 27.5097 28.9499C27.64 28.6446 27.7078 28.3163 27.709 27.9845V27.9207C27.7083 27.7515 27.741 27.5838 27.8051 27.4273C27.8694 27.2707 27.9639 27.1284 28.0833 27.0085C29.1929 25.8924 31.7731 22.9333 31.7731 19.5661C31.8223 17.8283 31.3 16.1224 30.2865 14.7099C30.1797 14.5515 30.0467 14.3545 30.0314 14.3408C30.0314 11.0201 28.9735 9.11561 27.1285 9.11561C23.5262 9.11561 23.0645 11.5978 23.0645 13.7603C23.1325 14.7057 23.4627 15.6134 24.0181 16.3814C24.4582 16.9727 24.7305 17.6717 24.8061 18.4049C24.7882 19.0343 24.6101 19.6486 24.2889 20.19L24.2282 20.3131C23.4594 19.3452 22.5583 18.4903 21.5514 17.7733C20.555 17.0608 19.6408 16.2399 18.8257 15.3254C17.4709 13.8168 15.2938 12.0186 12.614 12.0186C12.3634 12.0187 12.1133 12.0402 11.8664 12.0829L11.4305 11.0383C11.3526 10.8503 11.3128 10.6487 11.3134 10.4452C11.3069 10.2416 11.3457 10.0391 11.4267 9.85222C11.5078 9.66534 11.6292 9.49871 11.7823 9.36428C12.2794 8.94717 12.5933 8.35196 12.6568 7.70618C12.7546 7.31407 12.9697 6.96109 13.2731 6.69428C13.5767 6.42747 13.9543 6.25951 14.3557 6.21278C14.6666 6.19226 14.9744 6.28395 15.2234 6.47121C14.6598 6.65899 14.1653 7.01124 13.8037 7.48258C13.4422 7.95392 13.23 8.52274 13.1946 9.11575C13.1946 9.98121 13.9923 10.8575 15.5169 10.8575C17.0869 10.7798 18.3422 9.52448 18.4198 7.95457C18.3731 7.01267 17.62 6.25947 16.6781 6.21285C16.6091 6.21285 16.5434 6.21866 16.4761 6.2217C16.2833 5.83446 15.9771 5.5151 15.5984 5.3061C15.2196 5.0971 14.7862 5.00835 14.3557 5.05168C12.9445 5.15447 11.7763 6.18858 11.503 7.57697C11.4741 7.91837 11.3132 8.23504 11.0546 8.45973C10.7666 8.70327 10.5363 9.0077 10.3802 9.35107C10.2241 9.69444 10.1463 10.0682 10.1522 10.4453C10.1519 10.8031 10.2224 11.1574 10.3597 11.4877L10.7552 12.4352C9.35401 13.0975 8.48536 14.5343 8.54997 16.0828C8.54997 19.6832 11.9924 21.2808 15.13 22.4717C15.0648 22.4711 15.0028 22.4692 14.9364 22.4692C10.8916 22.4692 8.54997 22.8491 8.54997 24.7915C8.54997 26.5759 10.5596 29.0297 14.9824 29.3876C14.2924 30.6377 13.8886 32.0255 13.8005 33.4507C9.65122 32.1361 7.09275 28.9879 5.52837 25.1782C5.44011 24.9633 5.35856 24.7438 5.27652 24.5247C5.21081 24.3493 5.14109 24.1766 5.07925 23.9989C4.94615 23.6156 4.8223 23.2292 4.7078 22.8398C4.66491 22.6952 4.62749 22.5479 4.58689 22.4021C4.50769 22.1167 4.42966 21.8307 4.35869 21.5416C4.32522 21.4059 4.29429 21.2695 4.26262 21.1332C4.18783 20.8124 4.11776 20.4905 4.05241 20.1677C4.03235 20.0682 4.01222 19.9688 3.99299 19.8691C3.91327 19.4573 3.84036 19.0442 3.77427 18.6301L3.76901 18.5986C3.27555 15.1654 3.07821 11.6962 3.17919 8.22919L3.18154 8.11194C3.18743 7.81769 3.19448 7.53388 3.20216 7.25802C3.20451 7.17592 3.20672 7.09236 3.20914 7.01184C3.21564 6.79244 3.22263 6.5825 3.22969 6.37665C3.23342 6.26771 3.23709 6.1533 3.24082 6.04801L3.24677 5.88685C3.25404 5.68847 3.26137 5.49168 3.26828 5.30803L3.29187 4.66231L3.29969 4.44844C3.30452 4.29822 3.36782 4.15583 3.47612 4.05161C3.58441 3.94739 3.72912 3.88958 3.87941 3.89051H27.2983C27.4255 3.89201 27.5488 3.93501 27.6495 4.013C27.7501 4.09098 27.8224 4.19966 27.8557 4.32255C28.2346 5.61016 29.2864 6.63978 30.5043 7.83186C32.8801 10.1582 35.8372 13.0532 35.8372 19.5663C35.8373 19.8922 35.8236 20.2132 35.8039 20.532ZM16.6781 7.37375C16.825 7.39386 16.9613 7.46149 17.0661 7.56632C17.1709 7.67115 17.2386 7.80741 17.2587 7.9543C17.1785 8.88098 16.4436 9.61586 15.5169 9.69602C14.7628 9.69602 14.3557 9.39693 14.3557 9.11547C14.3557 8.27774 15.2436 7.37375 16.6781 7.37375Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_599'>\r\n<rect width='35' height='35' fill='white' transform='translate(2 2)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "endometriosis",
              meaning:
                "\u0627\u0646\u062f\u0648\u0645\u062a\u0631\u06cc\u0648\u0632",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_602)'>\r\n<path d='M22.3458 9.02758C21.6057 8.75841 20.8202 8.61365 20.0063 8.61365C15.5771 8.61365 11.9865 12.9019 11.9865 18.1917C11.9865 20.8669 12.9057 23.2847 14.3864 25.0225L14.8771 28.2832M15.4359 31.9966L16.1199 36.5418C16.2187 37.1983 16.7853 37.684 17.4522 37.684H22.5604C23.2274 37.684 23.7938 37.1983 23.8926 36.5418L25.6263 25.0225C27.1069 23.2847 28.0262 20.8669 28.0262 18.1917C28.0262 15.4221 27.0418 12.9271 25.4682 11.1782' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M27.182 13.9069C34.3577 10.378 38.3025 12.1602 38.832 14.9991C39.2318 17.1435 38.011 18.5754 36.703 19.183C35.1981 19.8819 33.0718 19.9846 31.174 19.5854C30.2918 19.3999 28.521 18.7558 28.0338 17.9737M12.8181 13.9069C5.64238 10.378 1.69751 12.1602 1.16811 14.9991C0.768225 17.1435 1.98905 18.5754 3.2971 19.183C4.80197 19.8819 6.92822 19.9846 8.82609 19.5854C9.70824 19.3999 11.4791 18.7558 11.9661 17.9737M23.5651 19.7789C24.1272 18.5684 24.7061 17.4123 25.2608 16.4525C25.5171 16.0093 25.0975 15.4855 24.6057 15.6336C21.7728 16.4865 18.2055 16.5215 15.341 15.6282C14.8561 15.477 14.4329 15.9948 14.6787 16.4374C16.3471 19.4404 18.2259 23.9523 19.2465 26.5036V32.0548H18.8048C18.1629 32.0548 17.6425 32.5726 17.6425 33.2114V37.6839H22.3701V33.2114C22.3701 32.5726 21.8497 32.0548 21.2078 32.0548H20.7661V26.4344C21.1107 25.5455 21.5529 24.4307 22.051 23.235M27.9661 8.5853L31.5773 8.26537M25.2774 5.9101L25.598 2.31604M27.023 6.84833L29.6307 4.25232M11.8594 33.1437L9.5377 35.9149M11.1824 29.4204L8.03205 27.6347M10.9625 31.3826L7.33309 32.0363' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M15.1473 32.0153C16.18 32.0153 17.0171 31.1821 17.0171 30.1544C17.0171 29.1267 16.18 28.2935 15.1473 28.2935C14.1146 28.2935 13.2775 29.1267 13.2775 30.1544C13.2775 31.1821 14.1146 32.0153 15.1473 32.0153Z' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M22.4371 23.2252C23.4698 23.2252 24.3069 22.3921 24.3069 21.3643C24.3069 20.3365 23.4698 19.5034 22.4371 19.5034C21.4044 19.5034 20.5673 20.3365 20.5673 21.3643C20.5673 22.3921 21.4044 23.2252 22.4371 23.2252Z' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M23.8287 12.0769C24.8613 12.0769 25.6985 11.2437 25.6985 10.216C25.6985 9.18827 24.8613 8.3551 23.8287 8.3551C22.796 8.3551 21.9589 9.18827 21.9589 10.216C21.9589 11.2437 22.796 12.0769 23.8287 12.0769Z' stroke='#8254C6' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_602'>\r\n<rect width='40' height='38' fill='white' transform='translate(0 1)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            }
          ],
          hereditary: [
            {
              value: "downSyndrome",
              meaning:
                "\u0633\u0646\u062f\u0631\u0645 \u062f\u0627\u0648\u0646",
              icon: "<svg width='38' height='40' viewBox='0 0 38 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_650)'>\r\n<path d='M27.0352 29.9974C34.7416 30.274 35.1972 22.8658 35.1972 22.8658L31.5045 22.9707L35.282 20.9448L34.434 19.3227L36.5962 18.597L34.5188 15.7796L35.1484 13.6274C37.2054 6.4002 29.0927 -1.37445 18.9464 1.53197C6.45385 5.11044 11.9206 20.3661 11.9206 22.6661C11.9206 24.1876 10.0256 27.6078 8.74268 29.7488C8.07989 30.8549 8.42472 32.2949 9.52055 32.9669C12.508 34.799 18.8658 37.7128 27.9134 36.6549C30.4516 36.4396 32.7889 34.2721 29.0893 32.0896' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M31.5385 7.62317C26.6736 9.60578 21.0681 8.0638 21.0681 8.0638C21.0681 8.0638 23.2109 15.6704 19.3306 16.7784M19.2425 16.79C19.2425 15.7272 18.3868 14.8656 17.3313 14.8656C16.2758 14.8656 15.4201 15.7272 15.4201 16.79V19.7056C15.4201 20.7684 16.2758 21.6299 17.3313 21.6299C18.3868 21.6299 19.2425 20.7684 19.2425 19.7056M30.1178 29.6293C30.1178 29.6293 29.8717 33.3631 25.7089 33.7189M10.031 27.1779L9.85679 27.254C7.78807 28.1588 6.06061 29.7054 4.92645 31.6684L1.41626 37.7438M30.8354 33.7188L33.4064 38.9284' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M27.9737 14.6252C27.9737 14.6252 28.7803 15.7695 30.0143 16.0199C31.0921 16.2386 32.0039 15.9846 32.1286 15.4683C32.2533 14.952 31.5435 14.369 30.4658 14.1502C28.9926 13.8513 27.9737 14.6252 27.9737 14.6252Z' stroke='#8254C6' stroke-width='0.09375' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M31.197 16.2256C31.7845 16.2256 32.2608 15.789 32.2608 15.2504C32.2608 14.7119 31.7845 14.2753 31.197 14.2753C30.6094 14.2753 30.1331 14.7119 30.1331 15.2504C30.1331 15.789 30.6094 16.2256 31.197 16.2256Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_650'>\r\n<rect width='38' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "hemophilia",
              meaning: "\u0647\u0645\u0648\u0641\u06cc\u0644\u06cc",
              icon: "<svg width='28' height='40' viewBox='0 0 28 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_635)'>\r\n<path d='M26.9047 27.0334C26.9047 33.7034 21.1284 39.1104 14.003 39.1104C6.87761 39.1104 1.10138 33.7034 1.10138 27.0334C1.10138 18.0182 14.0031 0.865723 14.0031 0.865723C14.0031 0.865723 26.9047 18.0181 26.9047 27.0334Z' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M15.114 33.0092C15.6086 31.49 14.0635 29.6327 11.663 28.8607C9.26233 28.0887 6.91526 28.6945 6.42062 30.2137C5.92599 31.7329 7.47108 33.5902 9.87168 34.3622C12.2723 35.1341 14.6193 34.5283 15.114 33.0092Z' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M12.5719 32.4124C12.0894 32.5486 11.3399 32.5007 10.5516 32.2474L12.5719 32.4124Z' fill='#8254C6'/>\r\n<path d='M12.5719 32.4124C12.0894 32.5486 11.3399 32.5007 10.5516 32.2474' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M19.7566 26.0587C21.6421 24.7047 22.4674 22.6398 21.5998 21.4465C20.7322 20.2532 18.5004 20.3835 16.6147 21.7375C14.7292 23.0914 13.9039 25.1564 14.7715 26.3497C15.6391 27.5429 17.871 27.4126 19.7566 26.0587Z' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M18.5363 24.3962C18.0341 24.7568 17.5047 24.9638 17.0907 24.9917L18.5363 24.3962Z' fill='#8254C6'/>\r\n<path d='M18.5363 24.3962C18.0341 24.7568 17.5047 24.9638 17.0907 24.9917' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M13.9077 18.6256C16.2621 18.6256 18.1707 16.9138 18.1707 14.8023C18.1707 12.6908 16.2621 10.9791 13.9077 10.9791C11.5534 10.9791 9.64484 12.6908 9.64484 14.8023C9.64484 16.9138 11.5534 18.6256 13.9077 18.6256Z' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M15.3193 15.8625C14.5794 16.2505 14.1336 16.2505 13.6997 16.2505C12.8131 16.2505 12.0946 15.7527 12.0946 14.9745M8.19891 25.2487C7.08525 25.2487 6.1825 24.3516 6.1825 23.2448C6.1825 22.1381 7.08525 21.241 8.19891 21.241C9.31253 21.241 10.2154 22.1381 10.2154 23.2448M18.2315 31.5219C18.2315 30.6733 18.9237 29.9854 19.7775 29.9854C20.6314 29.9854 21.3236 30.6733 21.3236 31.5219C21.3236 32.3704 20.6314 33.0583 19.7775 33.0583' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_635'>\r\n<rect width='28' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "sickleCellAnemia",
              meaning:
                "\u06a9\u0645\u200c\u062e\u0648\u0646\u06cc \u062f\u0627\u0633\u06cc\u200c\u0634\u06a9\u0644",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_607)'>\r\n<path d='M25.5028 18.4122C25.5028 11.4858 22.8365 6.05933 19.4314 6.05933C16.0265 6.05933 13.36 11.4858 13.36 18.4122C13.36 25.3387 16.0265 30.7658 19.4314 30.7658C22.8365 30.7658 25.5028 25.3393 25.5028 18.4122ZM19.4314 29.3372C17.1893 29.3372 14.7886 24.9472 14.7886 18.4122C14.7886 11.8772 17.1893 7.4879 19.4314 7.4879C21.6736 7.4879 24.0743 11.8772 24.0743 18.4122C24.0743 24.9472 21.6736 29.3372 19.4314 29.3372Z' fill='#8254C6'/>\r\n<path d='M22.1471 13.7562C22.1046 13.5715 21.9906 13.4112 21.83 13.3107C21.6694 13.21 21.4754 13.1773 21.2907 13.2198C21.106 13.2622 20.9457 13.3763 20.8451 13.5368C20.7445 13.6975 20.7118 13.8915 20.7543 14.0762C21.0708 15.4995 21.2262 16.9539 21.2171 18.4119C21.2231 19.7116 21.1016 21.0088 20.8543 22.2848C20.8344 22.3773 20.8331 22.4729 20.8505 22.566C20.8679 22.659 20.9036 22.7477 20.9555 22.8268C21.0075 22.9059 21.0746 22.9739 21.1531 23.0268C21.2316 23.0798 21.3198 23.1167 21.4126 23.1352C21.5054 23.1538 21.601 23.1537 21.6938 23.1349C21.7866 23.1163 21.8747 23.0793 21.9531 23.0262C22.0315 22.9731 22.0985 22.905 22.1504 22.8258C22.2022 22.7466 22.2378 22.6579 22.255 22.5648C22.521 21.1967 22.6519 19.8057 22.6457 18.4119C22.6547 16.8462 22.4875 15.2845 22.1471 13.7562ZM34.9043 12.8362C32.1157 12.8362 30.61 18.149 30.61 23.1476C30.61 28.1455 32.1157 33.4584 34.9043 33.4584C37.6928 33.4584 39.1979 28.1455 39.1979 23.1476C39.1979 18.149 37.6928 12.8362 34.9043 12.8362ZM34.9043 32.029C33.7079 32.029 32.0385 28.6505 32.0385 23.1476C32.0385 17.6441 33.7079 14.2648 34.9043 14.2648C36.1007 14.2648 37.7685 17.6441 37.7685 23.1476C37.7693 28.6505 36.1007 32.029 34.9043 32.029ZM5.59283 13.5769C2.4814 13.5769 0.802124 19.6133 0.802124 25.2933C0.802124 30.9733 2.48069 37.0098 5.59212 37.0098C8.70355 37.0098 10.3822 30.9741 10.3822 25.2933C10.3822 19.6133 8.70426 13.5769 5.59283 13.5769ZM5.59283 35.5812C4.18855 35.5812 2.23069 31.6676 2.23069 25.2933C2.23069 18.9198 4.18855 15.0055 5.59212 15.0055C6.99569 15.0055 8.95355 18.9198 8.95355 25.2933C8.95355 31.6676 6.9964 35.5812 5.59283 35.5812Z' fill='#8254C6'/>\r\n<path d='M5.94358 22.505C6.04663 23.431 6.09767 24.3619 6.09643 25.2936C6.09765 26.2178 6.04758 27.1413 5.94643 28.06C5.93602 28.1533 5.94408 28.2477 5.97018 28.3379C5.99628 28.4281 6.0399 28.5122 6.09854 28.5855C6.15719 28.6589 6.2297 28.7199 6.31195 28.7651C6.3942 28.8104 6.48456 28.839 6.57786 28.8492C6.60419 28.8523 6.63066 28.8537 6.65715 28.8535C6.83287 28.8534 7.00237 28.7885 7.13322 28.6712C7.26407 28.5539 7.34711 28.3925 7.36643 28.2178C7.47321 27.2468 7.52614 26.2705 7.52501 25.2936C7.52641 24.3085 7.47275 23.3241 7.36429 22.345C7.35379 22.2517 7.32502 22.1614 7.27961 22.0792C7.23421 21.997 7.17306 21.9247 7.09966 21.8661C7.02627 21.8076 6.94207 21.7641 6.85187 21.7381C6.76166 21.7121 6.66722 21.7041 6.57394 21.7147C6.48065 21.7251 6.39035 21.7539 6.30819 21.7993C6.22602 21.8448 6.15361 21.9059 6.09507 21.9792C6.03654 22.0527 5.99303 22.1369 5.96703 22.227C5.94104 22.3172 5.93307 22.4117 5.94358 22.505ZM32.4093 6.91643C32.4093 3.97286 30.97 1.66643 29.1336 1.66643C27.2971 1.66643 25.8586 3.97286 25.8586 6.91643C25.8586 9.86 27.2971 12.1665 29.1336 12.1665C30.97 12.1665 32.4093 9.86076 32.4093 6.91643ZM29.1336 10.7379C28.2622 10.7379 27.2871 9.10429 27.2871 6.91643C27.2871 4.72929 28.2614 3.095 29.1336 3.095C30.0057 3.095 30.9808 4.72929 30.9808 6.91643C30.9808 9.10429 30.0057 10.7379 29.1336 10.7379ZM9.57001 0C8.33643 0 7.40572 1.46071 7.40572 3.39857C7.40572 5.33643 8.33643 6.79857 9.57001 6.79857C10.8036 6.79857 11.7343 5.33643 11.7343 3.39857C11.7343 1.46071 10.8043 0 9.57001 0ZM9.57001 5.36929C9.34572 5.36929 8.83429 4.625 8.83429 3.39857C8.83429 2.17214 9.34572 1.42857 9.57001 1.42857C9.79429 1.42857 10.3057 2.17286 10.3057 3.39857C10.3057 4.62429 9.79505 5.36929 9.57001 5.36929ZM23.6336 32.03C22.0086 32.03 20.7357 33.78 20.7357 36.015C20.7357 38.25 22.0093 40 23.6336 40C25.2579 40 26.5314 38.25 26.5314 36.0143C26.5314 33.7786 25.2579 32.03 23.6336 32.03ZM23.6336 38.5714C22.9386 38.5714 22.1643 37.5214 22.1643 36.0143C22.1643 34.5071 22.9386 33.4586 23.6336 33.4586C24.3286 33.4586 25.1029 34.5086 25.1029 36.015C25.1029 37.5214 24.3286 38.5714 23.6336 38.5714Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_607'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "celiacDisease",
              meaning:
                "\u0628\u06cc\u0645\u0627\u0631\u06cc \u0633\u0644\u06cc\u0627\u06a9",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_675)'>\r\n<path d='M16.8445 15.3309L9.07133 7.55779C11.9883 4.99369 15.8111 3.43558 20 3.43558C29.1484 3.43558 36.5646 10.8518 36.5646 20.0002C36.5646 24.1891 35.0065 28.012 32.4424 30.9289L29.0176 27.504M26.9303 28.4441L30.9288 32.4425C28.0118 35.0066 24.1889 36.5647 20 36.5647C10.8517 36.5647 3.43547 29.1485 3.43547 20.0002C3.43547 15.8112 4.99355 11.9883 7.55765 9.07146L16.8314 18.3452M20 1.09106C9.55684 1.09106 1.09094 9.55697 1.09094 20.0002C1.09094 30.4433 9.55684 38.9092 20 38.9092C30.4432 38.9092 38.9091 30.4433 38.9091 20.0002C38.9091 9.55697 30.4432 1.09106 20 1.09106Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M29.6325 23.0338C29.9502 22.8181 30.1636 22.5397 30.2199 22.2285L32.0957 11.8473C32.2025 11.2562 31.7176 10.7174 30.953 10.4466C30.084 8.90263 27.318 7.77344 24.0379 7.77344C20.6659 7.77344 17.8362 8.96655 17.0533 10.5771C16.47 10.8712 16.1242 11.3396 16.216 11.8474L17.3955 18.3755' stroke='#8254C6' stroke-width='1.4' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M28.221 21.3267C28.3782 21.1728 28.4826 20.9899 28.5149 20.7901L29.8633 12.4499C29.9436 11.9535 29.5588 11.5031 28.9654 11.2966C28.2854 10.2304 26.337 9.46021 24.0379 9.46021C21.634 9.46021 19.6128 10.3021 19.0249 11.4442C18.6211 11.6812 18.3838 12.0505 18.4485 12.45L19.4093 18.3928' stroke='#8254C6' stroke-width='1.4' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M30.0204 24.6334C30.0204 28.0952 28.2475 29.0021 17.9271 29.0021C7.85999 29.0021 5.83392 28.0952 5.83392 24.6334C5.83392 21.1716 11.2482 18.3652 17.9271 18.3652C24.606 18.3652 30.0204 21.1716 30.0204 24.6334Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M13.2164 18.86C10.3484 19.4857 10.6848 23.6992 10.6848 23.6992M19.1164 18.3992C15.8834 18.1385 15.8342 23.2117 15.8342 23.2117M24.5038 19.3694C21.6358 18.4308 21.7554 23.4229 21.7554 23.4229' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_675'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "homocystinuria",
              meaning:
                "\u0647\u0648\u0645\u0648\u0633\u06cc\u0633\u062a\u06cc\u0646\u0648\u0631\u06cc\u0627",
              icon: "<svg width='40' height='23' viewBox='0 0 40 23' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_629)'>\r\n<path d='M0.78125 11.4987C1.53367 12.5726 8.45283 21.3785 20 21.5531C31.9614 21.7338 38.5327 12.4774 39.2187 11.4987V11.5013C38.5327 10.5227 31.9614 1.26628 20 1.44695C8.45283 1.62145 1.53367 10.4274 0.78125 11.5013V11.4987Z' stroke='#8254C6' stroke-width='1.875' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M0.78125 11.4989C12.4101 3.2528 27.5992 3.25935 39.2187 11.4989' stroke='#8254C6' stroke-width='1.875' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M23.3312 5.48645C25.0992 6.5792 26.2757 8.51908 26.2757 10.7277C26.2757 14.1446 23.4656 16.9138 20 16.9138C16.5343 16.9138 13.7242 14.1446 13.7242 10.7277C13.7242 8.57913 14.8359 6.61001 16.5242 5.50108' stroke='#8254C6' stroke-width='1.875' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M22.3236 11.0999C22.5319 9.83528 21.6607 8.6438 20.3778 8.43852C19.0949 8.23325 17.8861 9.09205 17.6779 10.3566C17.4696 11.6211 18.3409 12.8127 19.6237 13.0179C20.9066 13.2232 22.1154 12.3645 22.3236 11.0999Z' stroke='#8254C6' stroke-width='1.875' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M32.2379 18.0626L30.0964 16.4789M33.8809 11.584L34.6654 13.9037M34.6654 13.9037L36.7511 14.4179M34.6654 13.9037H32.312M3.52448 14.5316L6.0958 13.8982M6.0958 13.8982L6.88026 11.5786M6.0958 13.8982H8.44919M13.8005 18.6442L11.4511 19.7491L11.4472 19.7476L11.2989 17.3428' stroke='#8254C6' stroke-width='1.875' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_629'>\r\n<rect width='40' height='23' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "crohnsDisease",
              meaning:
                "\u0628\u06cc\u0645\u0627\u0631\u06cc \u06a9\u0631\u0648\u0646",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_662)'>\r\n<mask id='mask0_161_662' style='mask-type:luminance' maskUnits='userSpaceOnUse' x='0' y='0' width='40' height='40'>\r\n<path d='M40 0H0V40H40V0Z' fill='white'/>\r\n</mask>\r\n<g mask='url(#mask0_161_662)'>\r\n<path d='M20 20H5.83333C2.61667 20 0 17.3833 0 14.1667C0 10.95 2.61667 8.33333 5.83333 8.33333H13.3333C14.2517 8.33333 15 7.585 15 6.66667V0.833333C15 0.61232 15.0878 0.400358 15.2441 0.244077C15.4003 0.0877975 15.6123 0 15.8333 0C16.0543 0 16.2663 0.0877975 16.4226 0.244077C16.5788 0.400358 16.6667 0.61232 16.6667 0.833333V6.66667C16.6667 8.505 15.1717 10 13.3333 10H5.83333C3.53667 10 1.66667 11.87 1.66667 14.1667C1.66667 16.4633 3.53667 18.3333 5.83333 18.3333H20C20.221 18.3333 20.433 18.4212 20.5893 18.5774C20.7455 18.7337 20.8333 18.9457 20.8333 19.1667C20.8333 19.3877 20.7455 19.5997 20.5893 19.7559C20.433 19.9122 20.221 20 20 20Z' fill='#8254C6'/>\r\n<path d='M15.9 30H5.83333C4.27833 30 2.81333 29.3934 1.71 28.29C0.606667 27.1867 0 25.7217 0 24.1667C0 20.95 2.61667 18.3334 5.83333 18.3334H21.7667C21.9877 18.3334 22.1997 18.4212 22.3559 18.5775C22.5122 18.7337 22.6 18.9457 22.6 19.1667C22.6 19.3877 22.5122 19.5997 22.3559 19.756C22.1997 19.9122 21.9877 20 21.7667 20H5.83333C4.72867 20.0014 3.66963 20.4408 2.88852 21.2219C2.1074 22.003 1.66799 23.062 1.66667 24.1667C1.66667 25.2767 2.1 26.3217 2.88833 27.1117C3.67667 27.9017 4.72333 28.3334 5.83333 28.3334H15.9C16.121 28.3334 16.333 28.4212 16.4892 28.5775C16.6455 28.7337 16.7333 28.9457 16.7333 29.1667C16.7333 29.3877 16.6455 29.5997 16.4892 29.756C16.333 29.9122 16.121 30 15.9 30Z' fill='#8254C6'/>\r\n<path d='M5.83333 40C5.61232 40 5.40036 39.9122 5.24408 39.756C5.0878 39.5997 5 39.3877 5 39.1667V34.1667C5 30.95 7.61667 28.3334 10.8333 28.3334H13.3333C13.5543 28.3334 13.7663 28.4212 13.9226 28.5775C14.0788 28.7337 14.1667 28.9457 14.1667 29.1667C14.1667 29.3877 14.0788 29.5997 13.9226 29.756C13.7663 29.9122 13.5543 30 13.3333 30H10.8333C9.72867 30.0014 8.66967 30.4408 7.88852 31.2219C7.1074 32.003 6.66799 33.062 6.66667 34.1667V39.1667C6.66667 39.3877 6.57887 39.5997 6.42259 39.756C6.26631 39.9122 6.05435 40 5.83333 40ZM17.4667 25H5.83333C5.61232 25 5.40036 24.9122 5.24408 24.756C5.0878 24.5997 5 24.3877 5 24.1667C5 23.9457 5.0878 23.7337 5.24408 23.5775C5.40036 23.4212 5.61232 23.3334 5.83333 23.3334H17.4667C17.6877 23.3334 17.8997 23.4212 18.0559 23.5775C18.2122 23.7337 18.3 23.9457 18.3 24.1667C18.3 24.3877 18.2122 24.5997 18.0559 24.756C17.8997 24.9122 17.6877 25 17.4667 25ZM27.9167 16.7C27.7979 16.7002 27.6804 16.6749 27.5723 16.6257C27.4642 16.5765 27.3679 16.5047 27.29 16.415C26.903 15.967 26.4232 15.6085 25.8839 15.3641C25.3447 15.1198 24.7587 14.9955 24.1667 15H14.1667C13.9457 15 13.7337 14.9122 13.5774 14.756C13.4212 14.5997 13.3333 14.3877 13.3333 14.1667C13.3333 13.9457 13.4212 13.7337 13.5774 13.5775C13.7337 13.4212 13.9457 13.3334 14.1667 13.3334H24.1667C25.8467 13.3334 27.4433 14.0567 28.5433 15.3184C28.6486 15.4389 28.717 15.587 28.7403 15.7453C28.7636 15.9036 28.7408 16.0652 28.6747 16.211C28.6087 16.3566 28.5021 16.4802 28.3676 16.567C28.2332 16.6537 28.0767 16.6999 27.9167 16.7ZM12.5 40C12.279 40 12.067 39.9122 11.9108 39.756C11.7545 39.5997 11.6667 39.3877 11.6667 39.1667V36.6667C11.6667 34.8284 13.1617 33.3334 15 33.3334H17.45C17.671 33.3334 17.883 33.4212 18.0393 33.5775C18.1955 33.7337 18.2833 33.9457 18.2833 34.1667C18.2833 34.3877 18.1955 34.5997 18.0393 34.756C17.883 34.9122 17.671 35 17.45 35H15C14.0817 35 13.3333 35.7484 13.3333 36.6667V39.1667C13.3333 39.3877 13.2455 39.5997 13.0893 39.756C12.933 39.9122 12.721 40 12.5 40Z' fill='#8254C6'/>\r\n<path d='M17.4667 25H5.83333C5.61232 25 5.40036 24.9122 5.24408 24.7559C5.0878 24.5997 5 24.3877 5 24.1667C5 23.9457 5.0878 23.7337 5.24408 23.5774C5.40036 23.4212 5.61232 23.3333 5.83333 23.3333H17.4667C17.6877 23.3333 17.8997 23.4212 18.0559 23.5774C18.2122 23.7337 18.3 23.9457 18.3 24.1667C18.3 24.3877 18.2122 24.5997 18.0559 24.7559C17.8997 24.9122 17.6877 25 17.4667 25ZM17.5 15H5.83333C5.61232 15 5.40036 14.9122 5.24408 14.7559C5.0878 14.5997 5 14.3877 5 14.1667C5 13.9457 5.0878 13.7337 5.24408 13.5774C5.40036 13.4212 5.61232 13.3333 5.83333 13.3333H17.5C19.7967 13.3333 21.6667 11.4633 21.6667 9.16667V0.833333C21.6667 0.61232 21.7545 0.400358 21.9108 0.244077C22.067 0.0877975 22.279 0 22.5 0C22.721 0 22.933 0.0877975 23.0893 0.244077C23.2455 0.400358 23.3333 0.61232 23.3333 0.833333V9.16667C23.3333 12.3833 20.7167 15 17.5 15ZM27.5 30C27.3159 30.0002 27.1369 29.9394 26.9911 29.8272C26.8452 29.7149 26.7405 29.5575 26.6935 29.3795C26.6465 29.2015 26.6598 29.013 26.7312 28.8433C26.8026 28.6737 26.9282 28.5324 27.0883 28.4417L27.3683 28.2817C28.24 27.7867 28.56 26.9617 28.165 26.2283C28.1132 26.132 28.0808 26.0264 28.0697 25.9177C28.0586 25.8088 28.0691 25.6988 28.1005 25.5941C28.1319 25.4893 28.1837 25.3917 28.2528 25.307C28.3219 25.2222 28.407 25.1518 28.5033 25.1C28.5997 25.0482 28.7053 25.0157 28.814 25.0047C28.9228 24.9936 29.0328 25.0041 29.1376 25.0355C29.2423 25.0669 29.3399 25.1187 29.4247 25.1877C29.5095 25.2569 29.5798 25.342 29.6317 25.4383C30.465 26.98 29.8583 28.7867 28.1917 29.7333L27.9117 29.8917C27.7861 29.9627 27.6443 30.0001 27.5 30ZM29.1667 35C29.0379 35.0002 28.9109 34.9705 28.7956 34.9133C28.6803 34.8562 28.5798 34.773 28.5019 34.6705C28.4241 34.568 28.3711 34.4488 28.3471 34.3223C28.323 34.1959 28.3286 34.0656 28.3633 33.9417C28.595 33.1167 29.1133 32.4467 29.8233 32.0533C30.5817 31.635 31.505 31.5533 32.4233 31.8233L32.735 31.915C32.9469 31.978 33.1252 32.1226 33.2305 32.317C33.3358 32.5114 33.3597 32.7397 33.2967 32.9517C33.2337 33.1636 33.0891 33.3418 32.8947 33.4472C32.7003 33.5525 32.4719 33.5763 32.26 33.5133L31.95 33.4217C31.46 33.2767 30.9933 33.31 30.63 33.5117C30.4659 33.6062 30.3227 33.7329 30.2087 33.8841C30.0948 34.0353 30.0124 34.2079 29.9667 34.3917C29.9184 34.5667 29.814 34.7211 29.6695 34.831C29.5249 34.9409 29.3483 35.0003 29.1667 35Z' fill='#8254C6'/>\r\n<path d='M27.4117 39.9999C27.2366 40.0005 27.0626 39.9723 26.8967 39.9166C26.075 39.6366 25.7217 38.8215 25.41 38.1033C25.2717 37.7832 25.08 37.3416 24.935 37.2333C24.7933 37.1249 24.3383 37.0699 24.0067 37.0299C23.29 36.9433 22.3983 36.8366 21.8967 36.1166C21.4117 35.4216 21.5783 34.5633 21.7233 33.8066C21.795 33.4299 21.8867 32.9615 21.8233 32.7565C21.7683 32.5815 21.435 32.2615 21.19 32.0282C20.66 31.5198 20 30.8883 20 29.9999C20 29.1116 20.66 28.4799 21.1917 27.9716C21.435 27.7382 21.77 27.4182 21.825 27.2415C21.8883 27.0365 21.7983 26.5682 21.725 26.1916C21.58 25.4349 21.415 24.5799 21.8983 23.8833C22.4 23.1616 23.29 23.0548 24.0067 22.9698C24.3383 22.9298 24.7917 22.8749 24.935 22.7666C25.08 22.6566 25.2717 22.2166 25.4117 21.8949C25.7233 21.1766 26.0767 20.3616 26.8983 20.0832C27.7067 19.8099 28.4817 20.2632 29.1033 20.6299C29.4017 20.8066 29.8117 21.0466 30 21.0466C30.1883 21.0466 30.5983 20.8049 30.8983 20.6299C31.52 20.2632 32.2933 19.8099 33.1033 20.0832C33.925 20.3632 34.2783 21.1782 34.59 21.8965C34.7283 22.2165 34.92 22.6583 35.065 22.7666C35.2067 22.8749 35.6617 22.9298 35.9933 22.9698C36.71 23.0565 37.6017 23.1633 38.1033 23.8833C38.5883 24.5783 38.4217 25.4365 38.2767 26.1932C38.205 26.5698 38.1133 27.0382 38.1767 27.2432C38.2317 27.4182 38.565 27.7382 38.81 27.9716C39.34 28.4799 40 29.1116 40 29.9999C40 30.8883 39.34 31.5198 38.8083 32.0282C38.565 32.2615 38.23 32.5816 38.175 32.7582C38.1117 32.9632 38.2017 33.4316 38.275 33.8083C38.42 34.5649 38.585 35.4199 38.1017 36.1166C37.6 36.8383 36.71 36.9449 35.9933 37.0299C35.6617 37.0699 35.2083 37.1249 35.065 37.2333C34.92 37.3433 34.7283 37.7832 34.5883 38.1049C34.2767 38.8232 33.9233 39.6382 33.1017 39.9166C32.29 40.1916 31.5183 39.7366 30.8967 39.3699C30.5983 39.1933 30.1883 38.9533 30 38.9533C29.8117 38.9533 29.4017 39.1949 29.1017 39.3699C28.6133 39.6566 28.0317 39.9999 27.4117 39.9999ZM27.4217 21.6666H27.415C27.2983 21.7383 27.065 22.2732 26.94 22.5599C26.6933 23.1299 26.4367 23.7199 25.9467 24.0932C25.4433 24.4766 24.7867 24.5548 24.2067 24.6248C23.9133 24.6598 23.365 24.7266 23.2683 24.8349C23.19 24.9733 23.3033 25.5616 23.3633 25.8766C23.4767 26.4649 23.605 27.1316 23.4183 27.7366C23.235 28.3249 22.7833 28.7565 22.345 29.1748C22.09 29.4182 21.6667 29.8249 21.6667 29.9999C21.6667 30.1749 22.09 30.5815 22.345 30.8232C22.7817 31.2415 23.235 31.6749 23.4183 32.2616C23.605 32.8649 23.4767 33.5316 23.3633 34.1199C23.3017 34.4349 23.19 35.0216 23.2683 35.1633C23.365 35.2699 23.9133 35.3366 24.2067 35.3716C24.7867 35.4416 25.4417 35.5199 25.945 35.9016C26.435 36.2766 26.6917 36.8649 26.94 37.4349C27.065 37.7216 27.2967 38.2582 27.44 38.3366C27.565 38.3366 27.9967 38.0815 28.255 37.9299C28.7717 37.6249 29.355 37.2816 29.9983 37.2816C30.6417 37.2816 31.2267 37.6265 31.7417 37.9299C32 38.0815 32.41 38.3498 32.5833 38.3298C32.7 38.2582 32.9333 37.7233 33.0583 37.4366C33.305 36.8666 33.5617 36.2766 34.0517 35.9033C34.555 35.5199 35.2117 35.4416 35.7917 35.3716C36.085 35.3366 36.6333 35.2699 36.73 35.1616C36.8083 35.0233 36.695 34.4349 36.635 34.1199C36.5217 33.5316 36.3933 32.8649 36.58 32.2599C36.7633 31.6716 37.215 31.2399 37.6533 30.8216C37.91 30.5816 38.3333 30.1749 38.3333 29.9999C38.3333 29.8249 37.91 29.4183 37.655 29.1766C37.2183 28.7583 36.765 28.3248 36.5817 27.7382C36.395 27.1348 36.5233 26.4682 36.6367 25.8799C36.6983 25.5649 36.81 24.9782 36.7317 24.8366C36.635 24.7299 36.0867 24.6632 35.7933 24.6282C35.2133 24.5582 34.5583 24.4798 34.055 24.0982C33.565 23.7232 33.3083 23.1348 33.06 22.5648C32.935 22.2782 32.7033 21.7416 32.56 21.6632C32.435 21.6632 32.0033 21.9182 31.745 22.0698C31.2283 22.3748 30.645 22.7182 30.0017 22.7182C29.3583 22.7182 28.7733 22.3732 28.2583 22.0698C28.0017 21.9165 27.5783 21.6666 27.4217 21.6666Z' fill='#8254C6'/>\r\n</g>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_662'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "cysticFibrosis",
              meaning:
                "\u0641\u06cc\u0628\u0631\u0648\u0632 \u06a9\u06cc\u0633\u062a\u06cc\u06a9",
              icon: "<svg width='40' height='38' viewBox='0 0 40 38' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_659)'>\r\n<path d='M39.8835 25.9713L39.1735 21.3971C38.9663 20.0737 38.473 18.8113 37.7278 17.697L32.4207 9.78619C29.9472 6.02131 23.8915 7.84959 23.9407 12.3555V19.541C23.9407 19.6108 23.9386 19.6792 23.9343 19.7484C23.1175 18.8419 22.6586 17.6703 22.6429 16.4516V1.64585C22.6429 1.45688 22.5676 1.27565 22.4336 1.14203C22.2997 1.00842 22.118 0.93335 21.9286 0.93335H17.9293C17.7398 0.93335 17.5582 1.00842 17.4242 1.14203C17.2903 1.27565 17.215 1.45688 17.215 1.64585V16.4516C17.2095 17.4214 16.9151 18.3678 16.3693 19.1705C16.2803 19.3052 16.1763 19.4295 16.0593 19.541V12.3555C16.0596 11.3645 15.7405 10.3997 15.149 9.6036C14.5575 8.80745 13.725 8.22217 12.7744 7.93417C11.8238 7.64617 10.8056 7.67074 9.87022 8.00422C8.93472 8.33771 8.13155 8.96244 7.57931 9.78619L2.27217 17.697C1.52726 18.8113 1.03421 20.0738 0.827166 21.3971L0.116452 25.9713C-0.22176 28.1744 0.18512 30.427 1.27288 32.3739L3.00717 35.4682C3.36964 36.1204 3.95538 36.6206 4.65724 36.8772C5.35908 37.1339 6.13013 37.13 6.82931 36.8661L11.4115 35.1547C12.9847 34.5735 14.3287 33.5029 15.2452 32.1013C16.1616 30.6996 16.6018 29.0411 16.5007 27.3707L16.4086 25.7583L17.8943 25.2837C19.771 24.7083 21.7901 24.8041 23.6035 25.5545L23.5 27.3707C23.3989 29.041 23.839 30.6995 24.7553 32.1011C25.6716 33.5028 27.0155 34.5734 28.5886 35.1547L33.1707 36.8661C33.8698 37.1297 34.6407 37.1334 35.3423 36.8768C36.0439 36.6201 36.6296 36.1201 36.9921 35.4682L38.7278 32.3739C39.8155 30.427 40.2221 28.1743 39.8835 25.9713ZM21.2143 9.21545C20.3652 9.37817 19.4927 9.37817 18.6435 9.21545V6.33552C19.4946 6.48001 20.364 6.48001 21.215 6.33552L21.2143 9.21545ZM18.6435 10.6661C19.4946 10.8106 20.364 10.8106 21.215 10.6661V13.8075C20.3656 13.9704 19.493 13.9704 18.6435 13.8075V10.6661ZM21.215 2.35835V4.88487C20.3656 5.04769 19.493 5.04769 18.6435 4.88487V2.35835H21.215ZM15.0735 27.4505C15.1563 28.8172 14.7962 30.1741 14.0465 31.321C13.2968 32.4679 12.1972 33.3438 10.91 33.8195L6.32788 35.5309C5.94843 35.6743 5.52991 35.6764 5.14898 35.5371C4.76804 35.3977 4.45018 35.1262 4.2536 34.7721L2.51788 31.677C1.5863 30.0082 1.23824 28.0774 1.5286 26.1894C1.93788 24.0739 2.09074 20.2542 3.46003 18.4901L8.76717 10.5785C9.14923 10.0093 9.7046 9.57776 10.3513 9.34747C10.998 9.11718 11.7018 9.10037 12.3588 9.29949C13.0158 9.49863 13.5913 9.90313 14.0002 10.4535C14.4092 11.0037 14.6299 11.6705 14.63 12.3555V19.541C14.63 19.6284 14.6324 19.7161 14.6372 19.8039L14.6964 20.8314C13.8168 21.4414 12.8191 21.8612 11.7672 22.064L8.98931 22.6212C8.88132 22.6421 8.77004 22.639 8.66337 22.6122C8.5567 22.5853 8.45727 22.5354 8.37216 22.4658C8.28704 22.3964 8.21834 22.309 8.17094 22.2099C8.12353 22.1109 8.09859 22.0027 8.09788 21.893V19.7284C8.09788 19.5395 8.02263 19.3582 7.88867 19.2245C7.75471 19.091 7.57304 19.0159 7.3836 19.0159C7.19415 19.0159 7.01247 19.091 6.87852 19.2245C6.74456 19.3582 6.66931 19.5395 6.66931 19.7284V21.469L4.54574 20.899C4.36537 20.8571 4.17573 20.8867 4.01682 20.9816C3.85791 21.0765 3.74215 21.2292 3.69397 21.4075C3.6458 21.586 3.66895 21.776 3.75857 21.9377C3.84818 22.0993 3.99724 22.22 4.17431 22.2741L7.01074 23.0365C7.20099 23.3502 7.46936 23.6095 7.78977 23.7892C8.11019 23.9688 8.47174 24.0628 8.83931 24.0618C10.6021 23.7889 13.2786 23.3664 14.7893 22.4544L14.9193 24.738L11.3307 25.8851C10.685 26.0926 10.0953 26.4443 9.60641 26.9135C9.11764 27.3827 8.74264 27.9569 8.51003 28.5926L7.58503 31.1291C7.55299 31.217 7.53864 31.3104 7.54279 31.4039C7.54693 31.4974 7.5695 31.5892 7.6092 31.674C7.64889 31.7587 7.70494 31.8349 7.77415 31.8981C7.84335 31.9613 7.92435 32.0102 8.01252 32.0421C8.10069 32.0741 8.19431 32.0884 8.28803 32.0843C8.38176 32.0801 8.47374 32.0576 8.55874 32.0181C8.64374 31.9785 8.72008 31.9225 8.78343 31.8535C8.84676 31.7845 8.89585 31.7037 8.92788 31.6158L9.53641 29.9471L10.7743 31.7597C10.881 31.916 11.0455 32.0235 11.2316 32.0588C11.4178 32.0941 11.6105 32.0542 11.7672 31.9478C11.9238 31.8414 12.0317 31.6772 12.0671 31.4915C12.1024 31.3058 12.0624 31.1137 11.9557 30.9574L10.2107 28.4024C10.5856 27.854 11.133 27.4458 11.7664 27.2424L15.0029 26.2079L15.0735 27.4505ZM23.2364 23.9364C20.9625 23.2404 18.5155 23.3647 16.3243 24.2877L16.165 21.5018C16.7023 21.0577 17.1717 20.5378 17.5586 19.9585C18.4412 18.5583 18.8233 16.9016 18.6429 15.2574C19.4939 15.4019 20.3633 15.4019 21.2143 15.2574C21.0681 16.4503 21.2316 17.6606 21.6894 18.7723C22.147 19.884 22.8834 20.8598 23.8278 21.6058L23.6864 24.0825L23.2364 23.9364ZM37.4793 31.6777L35.7443 34.7721C35.5484 35.1267 35.2307 35.3987 34.8497 35.5381C34.4687 35.6775 34.05 35.675 33.6707 35.5309L29.0893 33.8202C27.8023 33.3445 26.7027 32.4685 25.953 31.3216C25.2033 30.1748 24.8431 28.8178 24.9257 27.4512L25.3615 19.8032C25.3664 19.7163 25.3693 19.6287 25.3693 19.541V12.3555C25.3683 11.5694 25.6603 10.8111 26.1886 10.2279C25.9599 12.8069 26.1953 15.4059 26.8835 17.9022C27.6743 19.8445 27.1864 23.4277 26.4407 24.9389C24.5815 29.4718 28.0372 31.34 33.9307 32.0667C34.118 32.0865 34.3056 32.0316 34.4526 31.914C34.5995 31.7965 34.6939 31.6257 34.7153 31.4391C34.7367 31.2524 34.6833 31.0649 34.5667 30.9172C34.4501 30.7696 34.2798 30.6739 34.0929 30.651C30.2878 30.2193 27.9915 29.2289 27.4507 27.7846C27.1921 27.0963 27.3764 26.5349 27.7829 25.4298C28.3956 23.9362 28.7187 22.3403 28.735 20.7266C28.7476 19.6415 28.5878 18.5612 28.2615 17.526C27.5275 14.8414 27.3489 12.036 27.7364 9.28029C28.3822 9.10309 29.0675 9.13312 29.6952 9.36612C30.3229 9.59913 30.8611 10.0233 31.2335 10.5785L36.5407 18.4901C37.3433 19.7595 37.8204 21.2063 37.93 22.7031C37.3639 23.2404 36.7329 23.7052 36.0515 24.0867C34.6388 24.8627 33.0527 25.2707 31.44 25.2731C31.2506 25.2731 31.0689 25.3481 30.935 25.4817C30.801 25.6154 30.7257 25.7966 30.7257 25.9856C30.7257 26.1745 30.801 26.3557 30.935 26.4894C31.0689 26.623 31.2506 26.6981 31.44 26.6981C33.882 26.6673 36.249 25.8522 38.19 24.3739C38.6972 26.8356 38.8157 29.4412 37.48 31.6785L37.4793 31.6777Z' fill='#8254C6'/>\r\n<path d='M7.80426 25.4091C6.19783 24.093 3.65498 24.6246 2.69212 25.392C2.61147 25.4425 2.54178 25.5086 2.48713 25.5864C2.43248 25.6642 2.39399 25.7521 2.37391 25.845C2.35382 25.9378 2.35257 26.0338 2.3702 26.1272C2.38784 26.2206 2.42402 26.3095 2.4766 26.3886C2.52919 26.4678 2.59714 26.5358 2.67642 26.5884C2.75572 26.641 2.84476 26.6773 2.93831 26.6951C3.03186 26.7129 3.12804 26.7119 3.22119 26.692C3.31434 26.6722 3.40257 26.634 3.48069 26.5797C3.92618 26.2893 4.43158 26.103 4.95926 26.0346L3.70712 28.8234C3.66884 28.9088 3.64781 29.0008 3.64523 29.0944C3.64265 29.188 3.65856 29.2811 3.69205 29.3685C3.72555 29.4559 3.77598 29.5359 3.84045 29.6038C3.90493 29.6717 3.98219 29.7263 4.06783 29.7645C4.15347 29.8027 4.24581 29.8237 4.33958 29.8263C4.43335 29.8288 4.5267 29.813 4.61432 29.7795C4.70194 29.7462 4.7821 29.6958 4.85023 29.6315C4.91837 29.5672 4.97313 29.4902 5.0114 29.4048L6.42569 26.2519C6.92569 26.5041 7.48712 27.0228 7.96069 26.4044C8.01589 26.3288 8.05561 26.243 8.07759 26.1521C8.09957 26.061 8.10338 25.9667 8.08878 25.8743C8.07419 25.7818 8.04149 25.6932 7.99255 25.6133C7.94361 25.5335 7.8801 25.4641 7.80426 25.4091Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_659'>\r\n<rect width='40' height='38' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "birthDefects",
              meaning:
                "\u0646\u0642\u0627\u06cc\u0635 \u0645\u0627\u062f\u0631\u0632\u0627\u062f\u06cc",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_681)'>\r\n<path d='M16.0669 19.1919L15.1831 18.3081L14.8169 18.6744C14.361 19.1094 13.7551 19.3521 13.125 19.3521C12.4949 19.3521 11.889 19.1094 11.4331 18.6744L11.0669 18.3081L10.1831 19.1919L10.5494 19.5581C11.2324 20.2412 12.1589 20.6249 13.125 20.6249C14.091 20.6249 15.0175 20.2412 15.7006 19.5581L16.0669 19.1919ZM28.5669 18.6744C28.111 19.1094 27.5051 19.3521 26.875 19.3521C26.2449 19.3521 25.639 19.1094 25.1831 18.6744L24.8169 18.3081L23.9331 19.1919L24.2994 19.5581C24.9824 20.2412 25.9089 20.6249 26.875 20.6249C27.841 20.6249 28.7675 20.2412 29.4506 19.5581L29.8169 19.1919L28.9331 18.3081L28.5669 18.6744Z' fill='#8254C6'/>\r\n<path d='M35.625 29.6969V23.3219C36.3747 22.9675 37.008 22.407 37.4507 21.7058C37.8934 21.0045 38.1274 20.1918 38.1249 19.3625C38.1226 18.5333 37.8841 17.7219 37.4374 17.0232C36.9907 16.3246 36.3542 15.7676 35.6025 15.4175C35.3879 11.4244 33.6506 7.66547 30.7481 4.91471C27.8456 2.16395 23.9989 0.630737 20 0.630737C16.0011 0.630737 12.1544 2.16395 9.25185 4.91471C6.34939 7.66547 4.61201 11.4244 4.39749 15.4175C3.64576 15.7676 3.0093 16.3246 2.56259 17.0232C2.11587 17.7219 1.87738 18.5333 1.87501 19.3625C1.87265 20.1918 2.10653 21.0045 2.54925 21.7058C2.99199 22.407 3.62527 22.9675 4.37499 23.3219V29.6969C4.37931 31.2968 4.06629 32.8816 3.45403 34.3598C2.84178 35.8379 1.94246 37.1799 0.808114 38.3081C0.720733 38.3955 0.661229 38.5069 0.637124 38.6281C0.613019 38.7494 0.625396 38.875 0.67269 38.9892C0.719984 39.1034 0.800071 39.201 0.902829 39.2696C1.00559 39.3383 1.1264 39.375 1.24999 39.375H4.95561C7.79349 39.3797 10.5274 38.3076 12.6056 36.375C14.5854 38.3007 17.2382 39.3781 20 39.3781C22.7618 39.3781 25.4146 38.3007 27.3944 36.375C29.4725 38.3076 32.2065 39.3797 35.0444 39.375H38.75C38.8736 39.375 38.9944 39.3383 39.0972 39.2696C39.1999 39.201 39.28 39.1034 39.3273 38.9892C39.3746 38.875 39.3869 38.7494 39.3629 38.6281C39.3388 38.5069 39.2793 38.3955 39.1919 38.3081C38.0575 37.1799 37.1582 35.8379 36.5459 34.3598C35.9337 32.8816 35.6207 31.2968 35.625 29.6969ZM36.875 19.375C36.874 20.2035 36.5444 20.9978 35.9586 21.5836C35.3728 22.1695 34.5785 22.499 33.75 22.5H33.125V16.25H33.75C34.5785 16.251 35.3728 16.5805 35.9586 17.1664C36.5444 17.7522 36.874 18.5465 36.875 19.375ZM20 1.87502C23.6015 1.87976 27.0704 3.23467 29.7216 5.67223C32.3729 8.10979 34.0139 11.4528 34.3206 15.0413C34.1315 15.0152 33.9409 15.0014 33.75 15H32.5925L28.655 13.8194C28.139 13.6669 27.6865 13.351 27.3655 12.9191C27.0445 12.4874 26.8724 11.963 26.875 11.425C26.8745 10.8815 26.6584 10.3604 26.274 9.97596C25.8897 9.59162 25.3685 9.37554 24.825 9.37504H15.175C14.6314 9.37554 14.1103 9.59162 13.7259 9.97596C13.3416 10.3604 13.1255 10.8815 13.125 11.425C13.1274 11.9633 12.955 12.4878 12.6337 12.9196C12.3124 13.3515 11.8594 13.6672 11.3431 13.8194L7.40749 15H6.24999C6.05909 15.0014 5.86848 15.0152 5.67936 15.0413C5.98607 11.4528 7.62706 8.10979 10.2784 5.67223C12.9296 3.23467 16.3984 1.87976 20 1.87502ZM3.12499 19.375C3.12598 18.5465 3.45554 17.7522 4.04138 17.1664C4.62721 16.5805 5.4215 16.251 6.24999 16.25H6.87499V22.5H6.24999C5.4215 22.499 4.62721 22.1695 4.04138 21.5836C3.45554 20.9978 3.12598 20.2035 3.12499 19.375ZM2.65249 38.125C4.58389 35.7415 5.6338 32.7646 5.62499 29.6969V23.7C5.83186 23.7315 6.04073 23.7483 6.24999 23.75H6.92311C7.20457 28.0781 8.89852 32.1944 11.745 35.4669C9.89877 37.1785 7.47321 38.1281 4.95561 38.125H2.65249ZM20 38.125C18.7062 38.1231 17.4265 37.8552 16.2406 37.338C15.0547 36.8207 13.9879 36.0651 13.1063 35.1181C9.90019 31.6745 8.11998 27.1426 8.12499 22.4375V16.09L11.7025 15.0169C12.4769 14.7885 13.1562 14.3147 13.6382 13.667C14.1202 13.0192 14.3787 12.2324 14.375 11.425C14.3752 11.2129 14.4595 11.0095 14.6095 10.8595C14.7595 10.7095 14.9629 10.6252 15.175 10.625H24.825C25.0371 10.6252 25.2405 10.7095 25.3905 10.8595C25.5405 11.0095 25.6249 11.2129 25.625 11.425C25.6213 12.2324 25.8799 13.0192 26.3618 13.667C26.8438 14.3147 27.5231 14.7885 28.2975 15.0169L31.875 16.09V22.4375C31.8806 27.1435 30.1004 31.6763 26.8938 35.1206C26.0119 36.0671 24.9449 36.8223 23.759 37.3391C22.5731 37.856 21.2936 38.1235 20 38.125ZM35.0444 38.125C32.5268 38.1281 30.1013 37.1785 28.255 35.4669C31.1014 32.1944 32.7954 28.0781 33.0769 23.75H33.75C33.9593 23.7483 34.1681 23.7315 34.375 23.7V29.6969C34.3662 32.7646 35.4161 35.7415 37.3475 38.125H35.0444Z' fill='#8254C6'/>\r\n<path d='M15.6249 26.0938C15.6256 26.6323 15.8398 27.1485 16.2206 27.5294C16.6014 27.9101 17.1177 28.1244 17.6562 28.125H21.8749V26.875H17.6562C17.5148 26.875 17.3762 26.8367 17.2549 26.7641C17.1337 26.6915 17.0343 26.5874 16.9676 26.4629C16.9008 26.3383 16.8691 26.1979 16.8757 26.0568C16.8825 25.9157 16.9273 25.7789 17.0056 25.6613L19.1824 23.5763C19.2877 23.4746 19.3542 23.3393 19.3699 23.1938L19.9949 17.5688L18.7524 17.4313L18.1524 22.8306L16.0974 24.7994C16.0732 24.8226 16.0508 24.8477 16.0306 24.8744C15.7675 25.2265 15.6252 25.6542 15.6249 26.0938ZM25.2961 30.3781C24.8404 30.0364 24.3297 29.7747 23.7861 29.6044C23.6452 29.5602 23.4932 29.5674 23.3572 29.6245C23.221 29.6818 23.1095 29.7854 23.0424 29.9169L22.2636 31.4438L21.8849 29.9619C21.8442 29.8031 21.7429 29.6666 21.6027 29.5819C21.4623 29.4971 21.2944 29.4709 21.1349 29.5088C20.7563 29.5974 20.3894 29.7301 20.0418 29.9044L19.9999 29.9263L19.9561 29.9044C19.1202 29.5004 18.1902 29.3311 17.2656 29.4145C16.3409 29.4979 15.4562 29.831 14.7061 30.3781L13.3749 31.375C13.3033 31.4288 13.2441 31.4973 13.2012 31.5759C13.1583 31.6544 13.1329 31.7414 13.1266 31.8307C13.1202 31.92 13.1332 32.0096 13.1645 32.0935C13.1957 32.1774 13.2447 32.2536 13.3081 32.3169L14.2231 33.2325C15.7552 34.7644 17.8332 35.625 19.9999 35.625C22.1666 35.625 24.2446 34.7644 25.7768 33.2325L26.6918 32.3169C26.7551 32.2536 26.8041 32.1774 26.8354 32.0935C26.8666 32.0096 26.8796 31.92 26.8732 31.8307C26.8669 31.7414 26.8415 31.6544 26.7987 31.5759C26.7557 31.4973 26.6966 31.4288 26.6249 31.375L25.2961 30.3781ZM23.8993 30.9875C24.1272 31.0957 24.3437 31.2265 24.5456 31.3781L24.7243 31.5119C24.3349 31.5744 23.9443 31.6219 23.5531 31.6669L23.8993 30.9875ZM19.3993 31.0225L19.7218 31.1844C19.8092 31.2279 19.9054 31.2506 20.0031 31.2506C20.1007 31.2506 20.1969 31.2279 20.2843 31.1844L20.6061 31.0225C20.6836 30.9838 20.7624 30.9481 20.8424 30.9144L21.0811 31.8481C19.1485 31.9147 17.2138 31.7962 15.3037 31.4944L15.4586 31.3781C16.0215 30.9678 16.6852 30.7179 17.3788 30.6554C18.0725 30.5927 18.7702 30.7196 19.3974 31.0225H19.3993ZM15.6093 32.8025C17.0842 33.0147 18.5723 33.1224 20.0624 33.125C21.5028 33.1225 22.9414 33.0217 24.3681 32.8231C23.1296 33.8304 21.5811 34.3787 19.9846 34.3749C18.3883 34.3712 16.8429 33.8157 15.6093 32.8025Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_681'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "alzheimersDisease",
              meaning: "\u0622\u0644\u0632\u0627\u06cc\u0645\u0631",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_685)'>\r\n<path d='M15.6121 2.06262C12.1221 2.06262 9.27555 4.89175 9.27555 8.3817C9.27555 8.40559 9.26834 8.42907 9.2686 8.45287C6.68003 8.87187 4.69865 11.1162 4.69865 13.8232C4.69865 14.3233 4.76525 14.807 4.89161 15.2669C2.70617 16.2613 1.18481 18.4624 1.18481 21.02C1.18481 23.1835 2.27223 25.0924 3.9303 26.2313C3.8549 26.5958 3.8169 26.9669 3.81691 27.339C3.81691 30.3442 6.25294 32.7804 9.25816 32.7804C9.25816 36.2704 12.1221 39.0995 15.612 39.0995C19.1018 39.0995 19.3154 36.2704 19.3154 32.7804V30.6571' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M9.27575 8.38184C9.27575 8.38184 9.26314 11.3511 11.6214 11.9292M4.89166 15.267C4.89166 15.267 5.38005 17.7747 8.11853 18.39M3.93036 26.2314C3.93036 26.2314 4.1371 23.9171 6.65212 22.7355M9.25819 32.7805C9.25819 32.7805 8.98271 30.6564 10.9031 29.0803M19.3156 20.1423V28.2746M19.3156 30.4941V32.7805C19.3156 36.2704 19.5195 39.0995 23.0095 39.0995C26.4994 39.0995 29.3411 36.2704 29.3411 32.7805C29.3411 32.7566 29.3459 32.7331 29.3458 32.7093C31.9343 32.2903 33.9144 30.046 33.9144 27.339C33.915 26.8513 33.8498 26.3656 33.721 25.8953C35.9064 24.9008 37.4274 22.6999 37.4274 20.1422' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M29.3362 32.7804C29.3362 32.7804 29.2974 30.5601 27.8368 29.3284M33.7202 25.8952C33.7202 25.8952 33.5037 24.7404 32.4263 23.756M6.85217 20.6299C6.85217 20.6299 5.57122 22.9494 8.09106 24.0126M15.2014 34.2162C15.2014 34.2162 16.0837 32.2033 19.1839 32.9316M19.2845 34.7897C20.023 33.2553 21.8762 33.1684 23.0847 33.9344M13.3416 10.8815C12.3367 10.9535 11.1564 12.3763 12.0088 13.8735M27.6589 26.8245C28.3307 27.4963 28.3307 28.5856 27.6589 29.2574C26.987 29.9292 25.8977 29.9292 25.226 29.2574M13.4356 29.4984C12.6682 30.0586 11.5919 29.8908 11.0317 29.1234C10.4715 28.3561 10.6394 27.2798 11.4067 26.7196' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M29.3617 1.29248L29.642 1.01221M22.1196 8.53455L21.8813 8.77294M25.5599 5.09416L24.0206 6.63362M19.3745 11.2797L19.7095 10.9447M22.0794 1.15609L22.2233 1.01221M18.1413 5.09416L19.9875 3.24802M37.0234 1.39928L37.2116 1.21088M32.0832 6.33941L32.2716 6.15102M30.3184 8.10411L30.1342 8.28843M25.059 13.3635L24.8748 13.5478M23.4169 15.0055L21.9933 16.4294M26.5977 11.8249L28.3898 10.0328M38.0745 8.11658L38.2462 7.94474M30.7728 15.4183L33.2962 12.8948M28.6721 17.5189L28.8955 17.2956M25.4666 20.7245L25.7498 20.4412M33.3865 19.0815L34.9492 17.5189M38.9652 13.5029L39.1627 13.3055M37.0497 15.4183L37.2472 15.2209M30.8368 21.6314L31.0341 21.434M13.6335 22.4041C14.9168 21.0018 17.6438 20.4412 19.1839 23.1274M14.3955 17.7535C14.3955 17.7535 16.0875 18.9355 15.2014 21.232' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_685'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "hypothyroidism",
              meaning:
                "\u06a9\u0645\u200c\u06a9\u0627\u0631\u06cc \u062a\u06cc\u0631\u0648\u0626\u06cc\u062f",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_685)'>\r\n<path d='M15.6121 2.06262C12.1221 2.06262 9.27555 4.89175 9.27555 8.3817C9.27555 8.40559 9.26834 8.42907 9.2686 8.45287C6.68003 8.87187 4.69865 11.1162 4.69865 13.8232C4.69865 14.3233 4.76525 14.807 4.89161 15.2669C2.70617 16.2613 1.18481 18.4624 1.18481 21.02C1.18481 23.1835 2.27223 25.0924 3.9303 26.2313C3.8549 26.5958 3.8169 26.9669 3.81691 27.339C3.81691 30.3442 6.25294 32.7804 9.25816 32.7804C9.25816 36.2704 12.1221 39.0995 15.612 39.0995C19.1018 39.0995 19.3154 36.2704 19.3154 32.7804V30.6571' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M9.27575 8.38184C9.27575 8.38184 9.26314 11.3511 11.6214 11.9292M4.89166 15.267C4.89166 15.267 5.38005 17.7747 8.11853 18.39M3.93036 26.2314C3.93036 26.2314 4.1371 23.9171 6.65212 22.7355M9.25819 32.7805C9.25819 32.7805 8.98271 30.6564 10.9031 29.0803M19.3156 20.1423V28.2746M19.3156 30.4941V32.7805C19.3156 36.2704 19.5195 39.0995 23.0095 39.0995C26.4994 39.0995 29.3411 36.2704 29.3411 32.7805C29.3411 32.7566 29.3459 32.7331 29.3458 32.7093C31.9343 32.2903 33.9144 30.046 33.9144 27.339C33.915 26.8513 33.8498 26.3656 33.721 25.8953C35.9064 24.9008 37.4274 22.6999 37.4274 20.1422' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M29.3362 32.7804C29.3362 32.7804 29.2974 30.5601 27.8368 29.3284M33.7202 25.8952C33.7202 25.8952 33.5037 24.7404 32.4263 23.756M6.85217 20.6299C6.85217 20.6299 5.57122 22.9494 8.09106 24.0126M15.2014 34.2162C15.2014 34.2162 16.0837 32.2033 19.1839 32.9316M19.2845 34.7897C20.023 33.2553 21.8762 33.1684 23.0847 33.9344M13.3416 10.8815C12.3367 10.9535 11.1564 12.3763 12.0088 13.8735M27.6589 26.8245C28.3307 27.4963 28.3307 28.5856 27.6589 29.2574C26.987 29.9292 25.8977 29.9292 25.226 29.2574M13.4356 29.4984C12.6682 30.0586 11.5919 29.8908 11.0317 29.1234C10.4715 28.3561 10.6394 27.2798 11.4067 26.7196' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M29.3617 1.29248L29.642 1.01221M22.1196 8.53455L21.8813 8.77294M25.5599 5.09416L24.0206 6.63362M19.3745 11.2797L19.7095 10.9447M22.0794 1.15609L22.2233 1.01221M18.1413 5.09416L19.9875 3.24802M37.0234 1.39928L37.2116 1.21088M32.0832 6.33941L32.2716 6.15102M30.3184 8.10411L30.1342 8.28843M25.059 13.3635L24.8748 13.5478M23.4169 15.0055L21.9933 16.4294M26.5977 11.8249L28.3898 10.0328M38.0745 8.11658L38.2462 7.94474M30.7728 15.4183L33.2962 12.8948M28.6721 17.5189L28.8955 17.2956M25.4666 20.7245L25.7498 20.4412M33.3865 19.0815L34.9492 17.5189M38.9652 13.5029L39.1627 13.3055M37.0497 15.4183L37.2472 15.2209M30.8368 21.6314L31.0341 21.434M13.6335 22.4041C14.9168 21.0018 17.6438 20.4412 19.1839 23.1274M14.3955 17.7535C14.3955 17.7535 16.0875 18.9355 15.2014 21.232' stroke='#8254C6' stroke-width='1.40625' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_685'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "multipleSclerosis",
              meaning: "\u0627\u0645\u200c\u0627\u0633 (MS)",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_614)'>\r\n<path d='M17.5217 27.9766C15.2809 28.6189 13.0361 28.1683 10.8513 26.6396C10.7812 26.5886 10.7017 26.552 10.6174 26.5321C10.533 26.5122 10.4457 26.5093 10.3602 26.5235C10.2747 26.5378 10.193 26.569 10.1197 26.6152C10.0463 26.6614 9.98296 26.7218 9.93331 26.7927C9.88357 26.8638 9.84852 26.9439 9.83018 27.0286C9.81174 27.1133 9.81044 27.2007 9.82626 27.286C9.84209 27.3712 9.87478 27.4523 9.92235 27.5247C9.96991 27.5972 10.0314 27.6594 10.1033 27.7079C12.6077 29.4433 15.1394 30.0009 17.8811 29.23C17.9652 29.208 18.0442 29.1695 18.1132 29.1166C18.1822 29.0637 18.24 28.9975 18.283 28.922C18.3261 28.8465 18.3537 28.7631 18.364 28.6767C18.3744 28.5904 18.3674 28.5028 18.3434 28.4193C18.3195 28.3356 18.279 28.2577 18.2244 28.19C18.1699 28.1222 18.1024 28.066 18.0258 28.0248C17.9493 27.9835 17.8652 27.958 17.7787 27.9498C17.6921 27.9414 17.6048 27.9506 17.5217 27.9766ZM11.0594 10.9613C10.9834 10.8062 10.849 10.6876 10.6856 10.6314C10.5223 10.5753 10.3433 10.5863 10.1881 10.662C10.0713 10.7187 7.31849 12.0824 5.98023 14.3031C5.89072 14.4513 5.86376 14.629 5.90528 14.7971C5.94681 14.9653 6.05341 15.11 6.20164 15.1994C6.34988 15.289 6.52759 15.316 6.69571 15.2744C6.86382 15.2329 7.00855 15.1263 7.09805 14.978C8.23284 13.092 10.7359 11.8476 10.7607 11.8366C10.8379 11.7988 10.907 11.7463 10.9638 11.6819C11.0206 11.6174 11.0642 11.5424 11.092 11.461C11.1197 11.3797 11.1311 11.2937 11.1256 11.208C11.1199 11.1221 11.0975 11.0384 11.0594 10.9613ZM23.2609 23.9128C22.8739 23.9128 22.4957 24.0276 22.1739 24.2426C21.8522 24.4575 21.6014 24.7631 21.4533 25.1206C21.3052 25.4781 21.2664 25.8715 21.3419 26.2511C21.4175 26.6306 21.6038 26.9792 21.8774 27.2528C22.151 27.5265 22.4997 27.7128 22.8792 27.7883C23.2587 27.8638 23.6521 27.825 24.0096 27.6769C24.3671 27.5288 24.6727 27.2781 24.8877 26.9563C25.1027 26.6346 25.2174 26.2563 25.2174 25.8693C25.2174 25.3505 25.0113 24.8528 24.6443 24.4859C24.2774 24.119 23.7798 23.9128 23.2609 23.9128ZM23.2609 26.5215C23.1319 26.5215 23.0058 26.4833 22.8985 26.4116C22.7913 26.34 22.7077 26.2381 22.6584 26.1189C22.609 25.9998 22.5961 25.8687 22.6212 25.7421C22.6464 25.6156 22.7085 25.4994 22.7997 25.4082C22.891 25.317 23.0071 25.2549 23.1337 25.2297C23.2602 25.2046 23.3913 25.2174 23.5104 25.2668C23.6297 25.3162 23.7315 25.3998 23.8031 25.507C23.8748 25.6143 23.913 25.7404 23.913 25.8693C23.913 26.0423 23.8444 26.2082 23.722 26.3305C23.5997 26.4528 23.4338 26.5215 23.2609 26.5215Z' fill='#8254C6'/>\r\n<path d='M35.9907 8.67897L38.7076 6.81637C39.0033 6.60821 39.2371 6.32391 39.3843 5.99362C39.5314 5.66332 39.5865 5.29935 39.5436 4.94031C39.5007 4.58126 39.3614 4.24052 39.1405 3.95424C38.9195 3.66795 38.6253 3.44678 38.2889 3.31419L30.7087 0.434847C30.3365 0.293115 29.929 0.272744 29.5446 0.376649C29.1601 0.480554 28.8183 0.70341 28.5682 1.01332L27.9108 1.82397C26.7184 1.56574 25.4888 1.52838 24.2828 1.71376C23.0535 1.09354 16.923 -1.52168 10.8695 4.34006C9.78502 4.30941 6.04346 4.49984 3.68455 7.14441C1.97911 9.05336 1.40194 11.7866 1.96085 15.2712C1.19194 16.3609 -1.38676 20.7827 2.68868 26.1448C2.93194 27.3266 4.62694 34.0922 11.6521 34.9127C11.3221 35.6119 11.0564 36.3396 10.8585 37.087C10.7798 37.3767 10.7686 37.6807 10.8257 37.9754C10.8828 38.2702 11.0068 38.5479 11.1881 38.7873C11.3694 39.0266 11.6031 39.2212 11.8714 39.3561C12.1396 39.4909 12.4352 39.5625 12.7355 39.5653H15.9272C16.3702 39.5655 16.8001 39.4147 17.1461 39.1378C17.4919 38.8608 17.733 38.4742 17.8295 38.0418C18.3148 35.9373 19.0824 34.4209 19.9517 33.836C21.1048 33.8594 26.6098 33.7348 30.6904 29.679L32.12 30.2131C32.3459 30.2977 32.5907 30.3191 32.8278 30.2751C33.065 30.2311 33.2858 30.1234 33.4664 29.9634C33.647 29.8034 33.7806 29.5974 33.8529 29.3672C33.9253 29.137 33.9335 28.8915 33.8769 28.657L33.6734 27.8092L36.3441 28.8886C36.5691 28.9793 36.8147 29.0067 37.0541 28.9679C37.2935 28.929 37.5178 28.8254 37.7026 28.6681C37.8874 28.5109 38.0255 28.3061 38.1022 28.076C38.1789 27.8458 38.1911 27.5991 38.1376 27.3625L37.3778 24.0096C37.3126 23.7237 37.1537 23.4678 36.9265 23.2825C38.7547 21.3287 39.7874 18.7626 39.8221 16.087C39.8221 11.2825 37.4782 9.39379 35.9907 8.67897ZM29.5811 1.83115C29.6588 1.73511 29.7647 1.66602 29.8839 1.63371C30.0031 1.60138 30.1294 1.60749 30.245 1.65115L37.8252 4.5331C37.9415 4.57844 38.0433 4.65449 38.1198 4.75315C38.1962 4.85181 38.2445 4.96938 38.2593 5.09331C38.2741 5.21724 38.2551 5.34288 38.2041 5.45683C38.1532 5.57077 38.0722 5.66874 37.97 5.74028L30.14 11.109C30.0425 11.1776 29.9655 11.2715 29.9174 11.3807C29.8692 11.4898 29.8516 11.61 29.8666 11.7282C29.8815 11.8466 29.9284 11.9586 30.0021 12.0523C30.076 12.146 30.1739 12.2178 30.2855 12.2601L35.1956 14.0464C35.2954 14.0831 35.3832 14.1461 35.4499 14.2289C35.5166 14.3116 35.5595 14.4109 35.5741 14.5162C35.5888 14.6214 35.5747 14.7287 35.5331 14.8265C35.4916 14.9243 35.4243 15.009 35.3385 15.0716L26.2081 21.6886C26.1042 21.7627 25.9791 21.8009 25.8516 21.7976C25.7241 21.7943 25.6011 21.7495 25.5014 21.6701C25.4015 21.5906 25.3304 21.4808 25.2986 21.3573C25.2668 21.2338 25.276 21.1033 25.325 20.9855L27.4994 15.8496C27.5395 15.7674 27.5621 15.6776 27.566 15.5861C27.5697 15.4947 27.5545 15.4034 27.5212 15.3181C27.4879 15.2328 27.4374 15.1554 27.3726 15.0906C27.3079 15.0258 27.2305 14.9752 27.1452 14.9418L21.6526 12.8548C21.5661 12.8218 21.4887 12.7688 21.4267 12.7001C21.3646 12.6315 21.3196 12.5491 21.2954 12.4598C21.2713 12.3704 21.2686 12.2767 21.2875 12.1861C21.3066 12.0954 21.3468 12.0107 21.4048 11.9386L29.5811 1.83115ZM33.9794 12.2138L31.9237 11.4657L34.3015 9.83527C34.4584 10.6426 34.3452 11.4791 33.9794 12.2157V12.2138ZM26.9782 2.97832L26.403 3.68919C26.2475 3.4111 26.0621 3.15084 25.85 2.91311C26.2271 2.91002 26.604 2.93181 26.9782 2.97832ZM19.8168 32.5264C19.6948 32.5191 19.5734 32.5465 19.4665 32.6053C17.8361 33.5007 16.9882 35.8968 16.5585 37.749C16.5268 37.8932 16.447 38.0223 16.3323 38.1154C16.2176 38.2083 16.0748 38.2597 15.9272 38.2609H12.7355C12.6344 38.2625 12.5344 38.2401 12.4438 38.1954C12.3531 38.1508 12.2743 38.0853 12.214 38.0043C12.1535 37.9234 12.1132 37.8292 12.0962 37.7296C12.0793 37.63 12.0862 37.5278 12.1165 37.4314C12.4738 35.8583 13.2756 34.4211 14.4265 33.2907C14.4863 33.2282 14.5331 33.1544 14.5641 33.0736C14.5951 32.9928 14.6097 32.9067 14.6071 32.8202C14.6045 32.7337 14.5848 32.6487 14.5489 32.5699C14.5131 32.4911 14.4619 32.4202 14.3985 32.3614C14.335 32.3027 14.2604 32.2571 14.1792 32.2274C14.0979 32.1976 14.0115 32.1844 13.9251 32.1884C13.8387 32.1924 13.7539 32.2135 13.6757 32.2507C13.5975 32.2877 13.5275 32.34 13.4698 32.4044C13.0621 32.8434 12.6872 33.2914 12.4048 33.6644C5.70368 33.2634 4.18737 27.0312 3.97281 25.927C4.21737 25.2821 5.27716 22.7379 7.05368 22.0394C7.13457 22.0089 7.20862 21.9627 7.27149 21.9034C7.33436 21.8441 7.3848 21.7728 7.41989 21.6938C7.45497 21.6147 7.47401 21.5296 7.47588 21.4432C7.47774 21.3567 7.46241 21.2708 7.43076 21.1903C7.39912 21.1099 7.3518 21.0366 7.29156 20.9746C7.2313 20.9126 7.15934 20.8632 7.07983 20.8293C7.00031 20.7953 6.91485 20.7775 6.82841 20.7769C6.74196 20.7763 6.65626 20.7929 6.57629 20.8257C4.85911 21.5001 3.73607 23.3261 3.15498 24.5334C0.94346 21.0677 1.79194 18.2392 2.52172 16.8273C2.83159 17.5194 3.30765 18.1242 3.90759 18.5881C4.05201 18.6799 4.2267 18.7112 4.39399 18.6753C4.56129 18.6394 4.70777 18.5392 4.80189 18.3963C4.89601 18.2534 4.9302 18.0793 4.89711 17.9114C4.86402 17.7436 4.76629 17.5954 4.62498 17.499C3.9936 16.8881 3.53101 16.1241 3.28216 15.2816C2.72911 12.1022 3.18759 9.65788 4.64716 8.01963C6.74455 5.66593 10.3211 5.63724 10.9733 5.65028C11.6007 5.94376 15.0382 7.67202 15.0382 10.2194C15.0382 10.3924 15.1069 10.5582 15.2293 10.6806C15.3515 10.8028 15.5175 10.8716 15.6904 10.8716C15.8634 10.8716 16.0293 10.8028 16.1515 10.6806C16.2739 10.5582 16.3426 10.3924 16.3426 10.2194C16.3426 7.48745 13.6752 5.63463 12.2502 4.83963C18.1433 -0.359501 23.5569 2.80354 23.8791 2.96789C24.6108 3.38967 25.1728 4.0531 25.4685 4.84419L20.3946 11.1181C20.2088 11.3512 20.0806 11.6247 20.0201 11.9164C19.9596 12.2082 19.9686 12.5101 20.0462 12.7978C20.124 13.0854 20.2682 13.3508 20.4674 13.5725C20.6665 13.7941 20.915 13.9659 21.1928 14.0738L22.8663 14.7096C22.9115 15.4093 22.7355 16.1054 22.363 16.6993C21.9905 17.2932 21.4406 17.7548 20.7911 18.0187C20.7589 17.7704 20.6564 17.5364 20.4957 17.3444C20.335 17.1523 20.1227 17.0102 19.8839 16.9348C19.6583 16.8638 19.4176 16.8556 19.1878 16.9112C18.958 16.9668 18.7476 17.0841 18.5795 17.2505L18.0148 17.8087L17.5869 15.1087C17.5468 14.8751 17.4443 14.6567 17.2901 14.4767C17.1359 14.2967 16.9359 14.1617 16.7112 14.0862C16.4865 14.0107 16.2455 13.9975 16.0139 14.0479C15.7823 14.0983 15.5687 14.2104 15.3956 14.3725L13.0035 16.6668C12.8049 16.8567 12.6716 17.1045 12.6227 17.3747C12.5737 17.6451 12.6115 17.924 12.7308 18.1714L14.5381 21.9357C14.1519 22.7338 13.8828 23.5834 13.7391 24.4583C13.7222 24.544 13.7227 24.6321 13.7404 24.7176C13.7582 24.8031 13.793 24.8841 13.8427 24.9559C13.8924 25.0276 13.956 25.0887 14.0297 25.1354C14.1035 25.1822 14.1858 25.2137 14.2719 25.228C14.3581 25.2423 14.4461 25.2392 14.531 25.2188C14.616 25.1985 14.6959 25.1613 14.7661 25.1094C14.8364 25.0576 14.8955 24.9922 14.94 24.9171C14.9845 24.8421 15.0134 24.7587 15.0252 24.6722C15.096 24.246 15.1989 23.8256 15.333 23.4148C15.5725 23.6554 15.8968 23.7927 16.2361 23.7969C16.5756 23.8012 16.9033 23.6722 17.1487 23.4377L18.3943 22.2422L19.3034 23.2609C19.4928 23.4742 19.7467 23.6195 20.0263 23.6747C20.3061 23.73 20.5962 23.6921 20.8523 23.5667C21.1084 23.4414 21.3164 23.2356 21.4444 22.9809C21.5725 22.7261 21.6135 22.4365 21.5613 22.1561L21.0395 19.3407C21.9069 19.0302 22.6651 18.4741 23.2217 17.7399C23.7783 17.0058 24.1091 16.1255 24.1739 15.2066L26.0574 15.924L24.1276 20.4761C23.9672 20.8564 23.9355 21.2787 24.0375 21.6786C24.1395 22.0785 24.3695 22.4341 24.6924 22.691C25.0154 22.9481 25.4135 23.0923 25.8261 23.102C26.2386 23.1116 26.643 22.9861 26.9776 22.7444L30.4341 20.2401C30.8641 20.4846 31.2339 20.8225 31.5161 21.2287C31.7982 21.6351 31.9856 22.0995 32.0646 22.5879L30.6141 22.4509C30.4055 22.4328 30.1956 22.4641 30.0013 22.542C29.807 22.62 29.6337 22.7424 29.4954 22.8996C29.3572 23.0568 29.2577 23.2443 29.2052 23.447C29.1527 23.6496 29.1485 23.8618 29.193 24.0664L29.5941 25.837L28.1789 26.1018C27.8937 26.1554 27.6339 26.3008 27.4391 26.5159C27.2442 26.7309 27.1252 27.0039 27.1001 27.293C27.0749 27.5821 27.1451 27.8714 27.2999 28.1169C27.4547 28.3624 27.6854 28.5505 27.9572 28.6525L29.3404 29.1696C25.3021 32.7774 19.8748 32.5277 19.8168 32.5264ZM20.2785 22.3955L18.9233 20.8714C18.8023 20.7434 18.6361 20.6677 18.4601 20.6607C18.2841 20.6535 18.1123 20.7156 17.9815 20.8335L16.2487 22.496L13.9008 17.6105L16.293 15.3161L16.9217 19.2664C16.9421 19.3839 16.9941 19.4936 17.0721 19.5838C17.1501 19.6741 17.2511 19.7414 17.3644 19.7786C17.4777 19.8158 17.599 19.8214 17.7153 19.7949C17.8316 19.7685 17.9385 19.7109 18.0246 19.6283L19.492 18.1792L20.2785 22.3955ZM32.9861 26.1266C32.875 26.0832 32.7541 26.0708 32.6366 26.0909C32.519 26.111 32.4092 26.1628 32.3188 26.2407C32.2285 26.3186 32.1611 26.4195 32.1239 26.5328C32.0867 26.6461 32.081 26.7675 32.1076 26.8838L32.5778 28.9916L28.413 27.3873L30.4921 26.996C30.5787 26.9794 30.661 26.9459 30.7343 26.8971C30.8076 26.8483 30.8704 26.7854 30.9191 26.712C30.9677 26.6386 31.0011 26.5561 31.0174 26.4696C31.0337 26.3831 31.0325 26.2941 31.0139 26.2081L30.4921 23.7494L36.1094 24.2973L36.8365 27.6787L32.9861 26.1266ZM35.482 22.9134L33.4074 22.7177C33.3382 22.0722 33.1394 21.4474 32.8226 20.8807C32.5059 20.3141 32.0779 19.8174 31.5643 19.4203L36.1087 16.1281C36.3828 15.9243 36.5968 15.6505 36.7287 15.3354C36.8604 15.0202 36.9049 14.6755 36.8576 14.3373C36.8102 13.999 36.6728 13.6797 36.4594 13.4129C36.2462 13.1461 35.9651 12.9417 35.6456 12.8209L35.212 12.6631C35.6054 11.8124 35.7521 10.8683 35.6352 9.93831C36.7974 10.5553 38.5198 12.1335 38.5198 16.087C38.4998 17.3709 38.2204 18.6374 37.6984 19.8106C37.1763 20.9837 36.4224 22.0391 35.482 22.9134Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_614'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "colorBlindness",
              meaning: "\u06a9\u0648\u0631\u0631\u0646\u06af\u06cc",
              icon: "<svg width='40' height='37' viewBox='0 0 40 37' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_672)'>\r\n<path d='M39.8197 11.7084C37.0807 8.38115 32.2731 4.50386 27.7347 2.53527C25.2886 1.47423 22.6619 0.813354 20 0.813354C17.3377 0.813354 14.711 1.47439 12.265 2.53527C7.6559 4.53469 2.85895 8.45328 0.180275 11.7084C0.0637738 11.8499 0 12.0282 0 12.2121C0 12.396 0.0637738 12.5743 0.180275 12.7158C4.56231 18.0408 12.5524 23.6108 20 23.6108C22.6622 23.6108 25.2888 22.9498 27.7348 21.8889C32.3392 19.8917 37.1352 15.9768 39.8197 12.7158C39.9362 12.5742 40 12.396 40 12.2121C39.9999 12.0281 39.9362 11.8499 39.8197 11.7084ZM29.7336 12.2121C29.7336 17.6409 25.3536 22.0342 20 22.0342C14.6416 22.0342 10.2663 17.636 10.2663 12.2121C10.2663 6.78338 14.6463 2.39006 20 2.39006C25.3585 2.39006 29.7336 6.78851 29.7336 12.2121ZM1.82254 12.2119C4.48512 9.25778 8.00926 6.40072 11.6093 4.58886C7.7327 8.92923 7.7366 15.4995 11.6093 19.8354C8.03613 18.0373 4.51785 15.2001 1.82254 12.2119ZM28.3906 19.8353C32.2672 15.4949 32.2632 8.92494 28.3905 4.58886C31.9677 6.38921 35.4852 9.22776 38.1773 12.2124C35.5148 15.1664 31.9907 18.0235 28.3906 19.8353Z' fill='#8254C6'/>\r\n<path d='M12.5983 12.2122C12.5983 16.3307 15.9197 19.6812 19.9999 19.6812C24.0944 19.6812 27.4017 16.317 27.4017 12.2122C27.4017 8.09379 24.0813 4.74329 19.9999 4.74329C15.9186 4.74329 12.5983 8.09379 12.5983 12.2122ZM19.2187 6.37424V11.6843L14.3515 13.7067C13.4538 10.2545 15.7864 6.83968 19.2187 6.37424ZM19.9999 18.1045C17.8455 18.1045 15.9612 16.9201 14.9493 15.1634L19.9999 13.0647L25.0507 15.1634C24.0387 16.9201 22.1544 18.1045 19.9999 18.1045ZM25.6484 13.7067L20.7812 11.6843V6.37424C24.2174 6.84015 26.545 10.2586 25.6484 13.7067ZM7.92739 26.75C5.34927 26.75 3.25177 28.8665 3.25177 31.4681C3.25177 34.0696 5.34927 36.1863 7.92739 36.1863C10.5055 36.1863 12.603 34.0697 12.603 31.4681C12.6029 28.8665 10.5055 26.75 7.92739 26.75ZM7.92739 34.6096C6.21083 34.6096 4.81427 33.2004 4.81427 31.4681C4.81427 29.7359 6.21083 28.3267 7.92739 28.3267C9.64394 28.3267 11.0405 29.7359 11.0405 31.4681C11.0404 33.2004 9.64394 34.6096 7.92739 34.6096ZM19.9999 26.75C17.4219 26.75 15.3244 28.8665 15.3244 31.4681C15.3244 34.0696 17.4219 36.1863 19.9999 36.1863C22.5781 36.1863 24.6756 34.0697 24.6756 31.4681C24.6756 28.8665 22.5781 26.75 19.9999 26.75ZM19.9999 34.6096C18.2834 34.6096 16.8869 33.2004 16.8869 31.4681C16.8869 29.7359 18.2834 28.3267 19.9999 28.3267C21.7165 28.3267 23.1131 29.7359 23.1131 31.4681C23.1131 33.2004 21.7165 34.6096 19.9999 34.6096ZM32.0725 26.75C29.4944 26.75 27.3968 28.8665 27.3968 31.4681C27.3968 34.0696 29.4944 36.1863 32.0725 36.1863C34.6507 36.1863 36.7482 34.0697 36.7482 31.4681C36.7482 28.8665 34.6507 26.75 32.0725 26.75ZM32.0725 34.6096C30.3559 34.6096 28.9593 33.2004 28.9593 31.4681C28.9593 29.7359 30.3559 28.3267 32.0725 28.3267C33.7891 28.3267 35.1857 29.7359 35.1857 31.4681C35.1857 33.2004 33.7891 34.6096 32.0725 34.6096Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_672'>\r\n<rect width='40' height='37' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "albinism",
              meaning: "\u0632\u0627\u0644\u200c\u0628\u0648\u062f\u0646",
              icon: "<svg width='30' height='40' viewBox='0 0 30 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_603)'>\r\n<path d='M28.4007 35.0603V38.913C28.4007 39.086 28.331 39.2519 28.2069 39.3742C28.0828 39.4965 27.9145 39.5652 27.739 39.5652C27.5635 39.5652 27.3951 39.4965 27.2711 39.3742C27.1469 39.2519 27.0772 39.086 27.0772 38.913V35.0603C27.0776 34.3475 26.9353 33.6417 26.6587 32.9832C26.3821 32.3246 25.9765 31.7262 25.4651 31.2222C24.9537 30.7182 24.3464 30.3185 23.6782 30.0459C23.0099 29.7733 22.2937 29.6331 21.5705 29.6334C20.8678 29.6364 20.1763 29.4597 19.5636 29.1207C18.9509 28.7816 18.4379 28.2917 18.0747 27.6989C18.0267 27.6257 17.9941 27.5439 17.9788 27.458C17.9635 27.3723 17.9657 27.2843 17.9854 27.1994C18.0051 27.1145 18.0419 27.0343 18.0936 26.9637C18.1452 26.893 18.2108 26.8333 18.2863 26.7879C18.3618 26.7426 18.4457 26.7127 18.5331 26.6999C18.6206 26.687 18.7097 26.6916 18.7954 26.7133C18.8809 26.735 18.9612 26.7733 19.0316 26.8261C19.1019 26.8789 19.1607 26.9451 19.2047 27.0207C19.4507 27.4216 19.7979 27.753 20.2125 27.9823C20.6271 28.2116 21.095 28.3311 21.5705 28.3291C22.0789 28.3284 22.5857 28.3831 23.0818 28.4921C27.3692 24.4722 28.629 18.5709 27.7282 13.2296C27.0169 9.01248 25.0092 5.61465 22.0743 3.6622C18.1078 1.02253 11.8922 1.02253 7.92904 3.6622C1.68198 7.81981 0.379964 18.0818 4.00561 24.7429C4.76896 26.1378 5.7533 27.4038 6.92151 28.4929C7.41754 28.3833 7.92445 28.3286 8.43281 28.3299C8.79537 28.3303 9.1545 28.2603 9.48953 28.1239C9.82465 27.9874 10.1292 27.7873 10.3857 27.5347C10.6422 27.2822 10.8457 26.9824 10.9845 26.6523C11.1234 26.3222 11.1949 25.9684 11.1949 25.6111V25.4391C8.03989 23.9521 6.14889 20.8079 6.14889 17.6644V12.9891C6.14889 12.8161 6.21862 12.6502 6.34272 12.528C6.46683 12.4056 6.63515 12.3369 6.81066 12.3369C6.98618 12.3369 7.15449 12.4056 7.2786 12.528C7.40271 12.6502 7.47242 12.8161 7.47242 12.9891V17.5649C7.47242 19.5324 8.26551 21.4193 9.67721 22.8106C11.0889 24.2018 13.0036 24.9834 15 24.9834C16.9964 24.9834 18.9111 24.2018 20.3228 22.8106C21.7345 21.4193 22.5275 19.5324 22.5275 17.5649V13.66C20.9145 13.5695 19.5422 12.5726 19.0533 10.7627C16.3025 12.5 13.2029 13.6301 9.96724 14.0758C9.79527 14.0953 9.62242 14.0476 9.48574 13.9429C9.34898 13.8383 9.25933 13.685 9.23595 13.516C9.21256 13.3469 9.2573 13.1756 9.36062 13.0387C9.46395 12.9018 9.61756 12.8102 9.78856 12.7837C13.169 12.3182 16.3867 11.0601 19.1716 9.11517C19.2709 9.04709 19.3872 9.00717 19.5079 8.99961C19.6286 8.99204 19.749 9.01726 19.8562 9.07248C19.9633 9.12769 20.0532 9.21083 20.1157 9.31274C20.1784 9.41474 20.2114 9.53161 20.2114 9.65083C20.2114 9.66709 20.2172 11.2813 21.4621 12.0231C21.9621 12.308 22.5445 12.4202 23.1165 12.3418C23.2859 12.323 23.4561 12.3693 23.5917 12.471C23.7274 12.5727 23.8179 12.7221 23.8444 12.888C23.8577 12.9695 23.8536 12.6492 23.8536 17.6163C23.8536 22.2801 19.9608 26.2902 15.0025 26.2902C14.1577 26.2902 13.3173 26.1711 12.5068 25.9364C12.4636 26.4833 12.3066 27.0154 12.0456 27.4999C11.7846 27.9843 11.4252 28.4106 10.9897 28.7521L15 31.8108L17.36 30.0108C17.4285 29.9561 17.5074 29.9154 17.5921 29.8912C17.6767 29.8668 17.7655 29.8595 17.853 29.8695C17.9406 29.8795 18.0253 29.9067 18.1021 29.9493C18.1789 29.992 18.2463 30.0495 18.3002 30.1182C18.3542 30.1869 18.3937 30.2656 18.4164 30.3495C18.4391 30.4335 18.4444 30.5211 18.4324 30.6072C18.4202 30.6933 18.3907 30.776 18.3456 30.8507C18.3005 30.9254 18.2408 30.9905 18.1699 31.0421L15.6618 32.9554V38.913C15.6618 39.086 15.5921 39.2519 15.4679 39.3742C15.3439 39.4965 15.1755 39.5652 15 39.5652C14.8245 39.5652 14.6562 39.4965 14.5321 39.3742C14.4079 39.2519 14.3382 39.086 14.3382 38.913V32.9554L9.71745 29.4296C9.30212 29.5656 8.86721 29.6345 8.4295 29.6334C7.70626 29.6331 6.99004 29.7733 6.32179 30.0459C5.65354 30.3185 5.04636 30.7182 4.53495 31.2222C4.02353 31.7262 3.61793 32.3246 3.3413 32.9832C3.06468 33.6417 2.92246 34.3475 2.92279 35.0603V38.913C2.92279 39.086 2.85308 39.2519 2.72896 39.3742C2.60486 39.4965 2.43654 39.5652 2.26103 39.5652C2.08552 39.5652 1.9172 39.4965 1.79309 39.3742C1.66898 39.2519 1.59926 39.086 1.59926 38.913V35.0603C1.59882 33.7827 1.96727 32.5313 2.66157 31.4525C3.35588 30.3735 4.34737 29.5116 5.52022 28.9673C4.46072 27.8947 3.55861 26.6813 2.84007 25.3625C-1.07675 18.1739 0.313788 7.15623 7.18456 2.58449C11.5687 -0.331547 18.4346 -0.331547 22.8187 2.58449C29.6937 7.15867 31.0775 18.1787 27.1674 25.3625C26.4465 26.6818 25.5419 27.8952 24.4797 28.9673C25.6527 29.5115 26.6442 30.3734 27.3386 31.4524C28.0329 32.5313 28.4013 33.7827 28.4007 35.0603ZM9.45768 16.7391C9.45645 16.1033 9.69089 15.4888 10.1169 15.0113C10.543 14.5339 11.1312 14.2261 11.7713 14.146C12.4114 14.066 13.0591 14.219 13.5927 14.5764C14.1263 14.9338 14.5091 15.471 14.6691 16.0869H15.3309C15.4919 15.4721 15.875 14.9364 16.4082 14.58C16.9414 14.2237 17.5883 14.0712 18.2274 14.1512C18.8666 14.2312 19.4541 14.5382 19.88 15.0146C20.3059 15.491 20.5409 16.1041 20.5409 16.7391C20.5409 17.374 20.3059 17.9872 19.88 18.4636C19.4541 18.94 18.8666 19.247 18.2274 19.327C17.5883 19.407 16.9414 19.2546 16.4082 18.8982C15.875 18.5419 15.4919 18.006 15.3309 17.3913H14.6691C14.5091 18.0073 14.1263 18.5444 13.5927 18.9018C13.0591 19.2593 12.4114 19.4122 11.7713 19.3321C11.1312 19.252 10.543 18.9443 10.1169 18.4668C9.69089 17.9893 9.45645 17.3749 9.45768 16.7391ZM16.5717 16.7391C16.5717 16.9971 16.6493 17.2493 16.7947 17.4638C16.9402 17.6783 17.1469 17.8454 17.3887 17.9441C17.6306 18.0429 17.8967 18.0687 18.1534 18.0184C18.4102 17.968 18.646 17.8439 18.8311 17.6614C19.0162 17.479 19.1422 17.2466 19.1933 16.9936C19.2444 16.7406 19.2182 16.4783 19.118 16.24C19.0178 16.0016 18.8482 15.7979 18.6305 15.6546C18.4129 15.5113 18.157 15.4347 17.8952 15.4347C17.5442 15.4347 17.2076 15.5722 16.9594 15.8168C16.7112 16.0614 16.5717 16.3932 16.5717 16.7391ZM10.7812 16.7391C10.7812 16.9971 10.8589 17.2493 11.0043 17.4638C11.1498 17.6783 11.3564 17.8454 11.5983 17.9441C11.8401 18.0429 12.1062 18.0687 12.363 18.0184C12.6198 17.968 12.8555 17.8439 13.0407 17.6614C13.2258 17.479 13.3518 17.2466 13.4029 16.9936C13.4539 16.7406 13.4277 16.4783 13.3276 16.24C13.2274 16.0016 13.0578 15.7979 12.8401 15.6546C12.6224 15.5113 12.3665 15.4347 12.1047 15.4347C11.7537 15.4347 11.4171 15.5722 11.1689 15.8168C10.9207 16.0614 10.7812 16.3932 10.7812 16.7391Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_603'>\r\n<rect width='30' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "thalassemia",
              meaning: "\u062a\u0627\u0644\u0627\u0633\u0645\u06cc",
              icon: "<svg width='38' height='40' viewBox='0 0 38 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_605)'>\r\n<path d='M18.5348 12.3899C16.992 12.3899 15.484 12.8514 14.2014 13.716C12.9187 14.5806 11.919 15.8094 11.3286 17.2472C10.7383 18.6849 10.5838 20.267 10.8849 21.7932C11.1858 23.3195 11.9287 24.7215 13.0196 25.8219C14.1104 26.9222 15.5002 27.6716 17.0133 27.9752C18.5262 28.2788 20.0946 28.1229 21.5198 27.5273C22.945 26.9317 24.1631 25.9232 25.0201 24.6292C25.8772 23.3352 26.3346 21.814 26.3345 20.2578C26.3321 18.1718 25.5096 16.1719 24.0474 14.6969C22.5851 13.2219 20.6026 12.3922 18.5348 12.3899ZM18.5348 27.0325C17.2065 27.0325 15.9081 26.6352 14.8038 25.8908C13.6994 25.1464 12.8387 24.0884 12.3304 22.8506C11.8221 21.6127 11.6891 20.2506 11.9482 18.9365C12.2073 17.6224 12.8469 16.4153 13.786 15.4678C14.7252 14.5204 15.9218 13.8752 17.2244 13.6137C18.5271 13.3523 19.8774 13.4865 21.1045 13.9992C22.3316 14.5119 23.3804 15.3802 24.1184 16.4942C24.8563 17.6082 25.2502 18.918 25.2503 20.2578C25.2483 22.0539 24.5402 23.7759 23.2812 25.046C22.0222 26.3161 20.3152 27.0305 18.5348 27.0325ZM36.8927 34.8107L30.285 28.1452C30.0626 27.9212 29.7848 27.7612 29.4805 27.6818C29.1762 27.6025 28.8565 27.6066 28.5543 27.6937L26.8485 25.973C28.1408 24.0623 28.7473 21.7637 28.5676 19.4577C28.3878 17.1518 27.4325 14.9771 25.86 13.2937C24.2875 11.6104 22.1921 10.5195 19.9209 10.2017C17.6498 9.88392 15.3391 10.3584 13.3718 11.5465V6.67328C13.8954 6.60971 14.3777 6.35502 14.7278 5.9573C15.078 5.55957 15.2717 5.0463 15.2724 4.51438V2.87742C15.2716 2.30092 15.0443 1.74826 14.6402 1.34065C14.236 0.933033 13.6881 0.703766 13.1166 0.703125H2.74804C2.17657 0.703766 1.62867 0.933042 1.22455 1.34065C0.820421 1.74827 0.593063 2.30093 0.592346 2.87742V4.51438C0.593036 5.04632 0.786737 5.55959 1.13689 5.95733C1.48703 6.35507 1.9694 6.60974 2.49294 6.67328V33.8094C2.49837 35.2612 3.07384 36.6515 4.09335 37.6761C5.11285 38.7007 6.49329 39.2759 7.93238 39.2759C9.37147 39.2759 10.7519 38.7007 11.7714 37.6761C12.7909 36.6515 13.3663 35.2612 13.3718 33.8094V28.9695C15.0187 29.9651 16.914 30.4637 18.8331 30.4061C20.7522 30.3485 22.6147 29.7372 24.2001 28.6447L25.906 30.3657C25.8613 30.5243 25.8385 30.6885 25.8383 30.8535C25.8374 31.0871 25.8826 31.3186 25.9709 31.5344C26.0593 31.7503 26.1893 31.9464 26.3533 32.1113L32.961 38.7771C33.2921 39.1101 33.7405 39.2971 34.2079 39.2971C34.6754 39.2971 35.1238 39.1101 35.4548 38.7771L36.8927 37.3266C37.2225 36.9925 37.4076 36.5403 37.4076 36.0688C37.4076 35.5973 37.2225 35.1448 36.8927 34.8107ZM8.47054 20.2578C8.46996 21.1154 8.57735 21.9697 8.79007 22.8H3.57718V19.1657H5.04431C5.18809 19.1657 5.32598 19.1082 5.42765 19.0056C5.52931 18.9031 5.58643 18.7639 5.58643 18.6189C5.58643 18.4738 5.52931 18.3347 5.42765 18.2322C5.32598 18.1297 5.18809 18.072 5.04431 18.072H3.57718V15.3281H6.96767C7.11145 15.3281 7.24934 15.2705 7.35101 15.1679C7.45268 15.0654 7.50979 14.9262 7.50979 14.7812C7.50979 14.6362 7.45268 14.4971 7.35101 14.3946C7.24934 14.292 7.11145 14.2343 6.96767 14.2343H3.57718V11.4902H5.04431C5.18809 11.4902 5.32598 11.4325 5.42765 11.33C5.52931 11.2274 5.58643 11.0883 5.58643 10.9432C5.58643 10.7982 5.52931 10.6592 5.42765 10.5566C5.32598 10.454 5.18809 10.3964 5.04431 10.3964H3.57718V6.68907H12.2876V12.3041C11.0975 13.2532 10.1359 14.4619 9.4749 15.8394C8.81386 17.2168 8.47046 18.7274 8.47054 20.2578ZM1.67658 4.51438V2.87742C1.67697 2.59091 1.79 2.31625 1.99086 2.11368C2.19172 1.91112 2.46403 1.79718 2.74804 1.79687H13.1166C13.4007 1.79718 13.6731 1.91116 13.874 2.11379C14.0748 2.31642 14.1878 2.59116 14.1881 2.87773V4.51438C14.1878 4.80096 14.0748 5.07571 13.874 5.27835C13.6731 5.48099 13.4007 5.59498 13.1166 5.59532H2.74804C2.46396 5.59498 2.19162 5.48099 1.99075 5.27834C1.78987 5.0757 1.67689 4.80095 1.67658 4.51438ZM12.2876 33.8094C12.2827 34.9714 11.8217 36.0842 11.0055 36.9041C10.1893 37.724 9.08424 38.1843 7.93238 38.1843C6.78047 38.1843 5.67549 37.724 4.85926 36.9041C4.04303 36.0842 3.58204 34.9714 3.57718 33.8094V23.894H9.13843C9.78773 25.5908 10.8749 27.0816 12.2876 28.2119V33.8094ZM9.55478 20.2578C9.55478 18.4662 10.0815 16.7147 11.0683 15.2251C12.055 13.7354 13.4575 12.5744 15.0984 11.8888C16.7393 11.2032 18.5448 11.0238 20.2868 11.3734C22.0287 11.7229 23.6287 12.5857 24.8846 13.8527C26.1405 15.1195 26.9957 16.7337 27.3422 18.4908C27.6886 20.2481 27.5108 22.0695 26.8311 23.7247C26.1514 25.38 25.0005 26.7948 23.5237 27.7902C22.0469 28.7855 20.3108 29.3168 18.5348 29.3168C16.1539 29.3141 13.8713 28.3587 12.1878 26.6605C10.5043 24.9622 9.55734 22.6596 9.55478 20.2578ZM26.1833 26.8486L27.6298 28.3077L26.5146 29.4328L25.0681 27.9736C25.4683 27.6284 25.8411 27.2522 26.1833 26.8486ZM36.1259 36.5532L34.6881 38.0036C34.5607 38.1318 34.388 38.2038 34.208 38.2038C34.028 38.2038 33.8554 38.1318 33.7278 38.0036L27.1202 31.3379C26.9937 31.209 26.9228 31.0349 26.9228 30.8535C26.9228 30.6721 26.9937 30.4981 27.1202 30.3692L28.5582 28.9186C28.6856 28.7903 28.8584 28.7182 29.0384 28.7182C29.2184 28.7182 29.3911 28.7903 29.5185 28.9186L36.1262 35.5843C36.2527 35.7132 36.3236 35.8872 36.3236 36.0687C36.3236 36.2501 36.2524 36.4242 36.1259 36.5532ZM18.9969 16.5508C18.9484 16.4711 18.8804 16.4052 18.7995 16.3596C18.7186 16.3139 18.6274 16.2899 18.5348 16.2899C18.4421 16.2899 18.3509 16.3139 18.27 16.3596C18.1891 16.4052 18.1211 16.4711 18.0726 16.5508L16.516 19.1105C15.7493 20.3708 15.5618 22.3761 16.5949 23.4183C17.1102 23.936 17.8077 24.2266 18.5348 24.2266C19.262 24.2266 19.9596 23.936 20.4749 23.4183C21.5079 22.3762 21.3202 20.3708 20.5537 19.1105L18.9969 16.5508ZM19.708 22.645C19.396 22.9573 18.9742 23.1326 18.5348 23.1326C18.0952 23.1326 17.6734 22.9573 17.3614 22.645C16.7322 22.0102 16.8979 20.5742 17.4403 19.6824L18.5348 17.8828L19.6292 19.6828C20.1716 20.5743 20.3373 22.0102 19.708 22.645Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_605'>\r\n<rect width='38' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "epilepsy",
              meaning: "\u0635\u0631\u0639",
              icon: "<svg width='38' height='40' viewBox='0 0 38 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_605)'>\r\n<path d='M18.5348 12.3899C16.992 12.3899 15.484 12.8514 14.2014 13.716C12.9187 14.5806 11.919 15.8094 11.3286 17.2472C10.7383 18.6849 10.5838 20.267 10.8849 21.7932C11.1858 23.3195 11.9287 24.7215 13.0196 25.8219C14.1104 26.9222 15.5002 27.6716 17.0133 27.9752C18.5262 28.2788 20.0946 28.1229 21.5198 27.5273C22.945 26.9317 24.1631 25.9232 25.0201 24.6292C25.8772 23.3352 26.3346 21.814 26.3345 20.2578C26.3321 18.1718 25.5096 16.1719 24.0474 14.6969C22.5851 13.2219 20.6026 12.3922 18.5348 12.3899ZM18.5348 27.0325C17.2065 27.0325 15.9081 26.6352 14.8038 25.8908C13.6994 25.1464 12.8387 24.0884 12.3304 22.8506C11.8221 21.6127 11.6891 20.2506 11.9482 18.9365C12.2073 17.6224 12.8469 16.4153 13.786 15.4678C14.7252 14.5204 15.9218 13.8752 17.2244 13.6137C18.5271 13.3523 19.8774 13.4865 21.1045 13.9992C22.3316 14.5119 23.3804 15.3802 24.1184 16.4942C24.8563 17.6082 25.2502 18.918 25.2503 20.2578C25.2483 22.0539 24.5402 23.7759 23.2812 25.046C22.0222 26.3161 20.3152 27.0305 18.5348 27.0325ZM36.8927 34.8107L30.285 28.1452C30.0626 27.9212 29.7848 27.7612 29.4805 27.6818C29.1762 27.6025 28.8565 27.6066 28.5543 27.6937L26.8485 25.973C28.1408 24.0623 28.7473 21.7637 28.5676 19.4577C28.3878 17.1518 27.4325 14.9771 25.86 13.2937C24.2875 11.6104 22.1921 10.5195 19.9209 10.2017C17.6498 9.88392 15.3391 10.3584 13.3718 11.5465V6.67328C13.8954 6.60971 14.3777 6.35502 14.7278 5.9573C15.078 5.55957 15.2717 5.0463 15.2724 4.51438V2.87742C15.2716 2.30092 15.0443 1.74826 14.6402 1.34065C14.236 0.933033 13.6881 0.703766 13.1166 0.703125H2.74804C2.17657 0.703766 1.62867 0.933042 1.22455 1.34065C0.820421 1.74827 0.593063 2.30093 0.592346 2.87742V4.51438C0.593036 5.04632 0.786737 5.55959 1.13689 5.95733C1.48703 6.35507 1.9694 6.60974 2.49294 6.67328V33.8094C2.49837 35.2612 3.07384 36.6515 4.09335 37.6761C5.11285 38.7007 6.49329 39.2759 7.93238 39.2759C9.37147 39.2759 10.7519 38.7007 11.7714 37.6761C12.7909 36.6515 13.3663 35.2612 13.3718 33.8094V28.9695C15.0187 29.9651 16.914 30.4637 18.8331 30.4061C20.7522 30.3485 22.6147 29.7372 24.2001 28.6447L25.906 30.3657C25.8613 30.5243 25.8385 30.6885 25.8383 30.8535C25.8374 31.0871 25.8826 31.3186 25.9709 31.5344C26.0593 31.7503 26.1893 31.9464 26.3533 32.1113L32.961 38.7771C33.2921 39.1101 33.7405 39.2971 34.2079 39.2971C34.6754 39.2971 35.1238 39.1101 35.4548 38.7771L36.8927 37.3266C37.2225 36.9925 37.4076 36.5403 37.4076 36.0688C37.4076 35.5973 37.2225 35.1448 36.8927 34.8107ZM8.47054 20.2578C8.46996 21.1154 8.57735 21.9697 8.79007 22.8H3.57718V19.1657H5.04431C5.18809 19.1657 5.32598 19.1082 5.42765 19.0056C5.52931 18.9031 5.58643 18.7639 5.58643 18.6189C5.58643 18.4738 5.52931 18.3347 5.42765 18.2322C5.32598 18.1297 5.18809 18.072 5.04431 18.072H3.57718V15.3281H6.96767C7.11145 15.3281 7.24934 15.2705 7.35101 15.1679C7.45268 15.0654 7.50979 14.9262 7.50979 14.7812C7.50979 14.6362 7.45268 14.4971 7.35101 14.3946C7.24934 14.292 7.11145 14.2343 6.96767 14.2343H3.57718V11.4902H5.04431C5.18809 11.4902 5.32598 11.4325 5.42765 11.33C5.52931 11.2274 5.58643 11.0883 5.58643 10.9432C5.58643 10.7982 5.52931 10.6592 5.42765 10.5566C5.32598 10.454 5.18809 10.3964 5.04431 10.3964H3.57718V6.68907H12.2876V12.3041C11.0975 13.2532 10.1359 14.4619 9.4749 15.8394C8.81386 17.2168 8.47046 18.7274 8.47054 20.2578ZM1.67658 4.51438V2.87742C1.67697 2.59091 1.79 2.31625 1.99086 2.11368C2.19172 1.91112 2.46403 1.79718 2.74804 1.79687H13.1166C13.4007 1.79718 13.6731 1.91116 13.874 2.11379C14.0748 2.31642 14.1878 2.59116 14.1881 2.87773V4.51438C14.1878 4.80096 14.0748 5.07571 13.874 5.27835C13.6731 5.48099 13.4007 5.59498 13.1166 5.59532H2.74804C2.46396 5.59498 2.19162 5.48099 1.99075 5.27834C1.78987 5.0757 1.67689 4.80095 1.67658 4.51438ZM12.2876 33.8094C12.2827 34.9714 11.8217 36.0842 11.0055 36.9041C10.1893 37.724 9.08424 38.1843 7.93238 38.1843C6.78047 38.1843 5.67549 37.724 4.85926 36.9041C4.04303 36.0842 3.58204 34.9714 3.57718 33.8094V23.894H9.13843C9.78773 25.5908 10.8749 27.0816 12.2876 28.2119V33.8094ZM9.55478 20.2578C9.55478 18.4662 10.0815 16.7147 11.0683 15.2251C12.055 13.7354 13.4575 12.5744 15.0984 11.8888C16.7393 11.2032 18.5448 11.0238 20.2868 11.3734C22.0287 11.7229 23.6287 12.5857 24.8846 13.8527C26.1405 15.1195 26.9957 16.7337 27.3422 18.4908C27.6886 20.2481 27.5108 22.0695 26.8311 23.7247C26.1514 25.38 25.0005 26.7948 23.5237 27.7902C22.0469 28.7855 20.3108 29.3168 18.5348 29.3168C16.1539 29.3141 13.8713 28.3587 12.1878 26.6605C10.5043 24.9622 9.55734 22.6596 9.55478 20.2578ZM26.1833 26.8486L27.6298 28.3077L26.5146 29.4328L25.0681 27.9736C25.4683 27.6284 25.8411 27.2522 26.1833 26.8486ZM36.1259 36.5532L34.6881 38.0036C34.5607 38.1318 34.388 38.2038 34.208 38.2038C34.028 38.2038 33.8554 38.1318 33.7278 38.0036L27.1202 31.3379C26.9937 31.209 26.9228 31.0349 26.9228 30.8535C26.9228 30.6721 26.9937 30.4981 27.1202 30.3692L28.5582 28.9186C28.6856 28.7903 28.8584 28.7182 29.0384 28.7182C29.2184 28.7182 29.3911 28.7903 29.5185 28.9186L36.1262 35.5843C36.2527 35.7132 36.3236 35.8872 36.3236 36.0687C36.3236 36.2501 36.2524 36.4242 36.1259 36.5532ZM18.9969 16.5508C18.9484 16.4711 18.8804 16.4052 18.7995 16.3596C18.7186 16.3139 18.6274 16.2899 18.5348 16.2899C18.4421 16.2899 18.3509 16.3139 18.27 16.3596C18.1891 16.4052 18.1211 16.4711 18.0726 16.5508L16.516 19.1105C15.7493 20.3708 15.5618 22.3761 16.5949 23.4183C17.1102 23.936 17.8077 24.2266 18.5348 24.2266C19.262 24.2266 19.9596 23.936 20.4749 23.4183C21.5079 22.3762 21.3202 20.3708 20.5537 19.1105L18.9969 16.5508ZM19.708 22.645C19.396 22.9573 18.9742 23.1326 18.5348 23.1326C18.0952 23.1326 17.6734 22.9573 17.3614 22.645C16.7322 22.0102 16.8979 20.5742 17.4403 19.6824L18.5348 17.8828L19.6292 19.6828C20.1716 20.5743 20.3373 22.0102 19.708 22.645Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_605'>\r\n<rect width='38' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "hypertension",
              meaning:
                "\u0641\u0634\u0627\u0631 \u062e\u0648\u0646 \u0628\u0627\u0644\u0627",
              icon: "<svg width='40' height='37' viewBox='0 0 40 37' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_622)'>\r\n<path d='M14.8227 25.3392L6.04993 15.8244C2.71539 12.2067 2.91882 6.52634 6.50336 3.16189C10.1204 -0.234258 15.7368 0.0256615 19.0501 3.61858L19.9993 4.64871L20.9492 3.61858C24.256 0.0328358 29.8706 -0.240407 33.4974 3.16181C37.0812 6.52697 37.2843 12.2073 33.9503 15.8244L31.6342 18.3357C31.5818 18.3925 31.5188 18.4385 31.4489 18.4709C31.379 18.5032 31.3034 18.5214 31.2265 18.5243C31.1496 18.5271 31.0729 18.5148 31.0008 18.4877C30.9286 18.4607 30.8624 18.4196 30.8061 18.3668C30.7497 18.314 30.7041 18.2505 30.672 18.1799C30.64 18.1093 30.622 18.033 30.6191 17.9555C30.6163 17.8779 30.6285 17.8004 30.6553 17.7277C30.6821 17.6549 30.7228 17.5881 30.7752 17.5312L33.0921 15.0189C35.986 11.8792 35.8098 6.94858 32.6993 4.02774C29.5509 1.07441 24.6776 1.31139 21.8069 4.42419L20.4282 5.91962C20.1956 6.17189 19.8008 6.16977 19.5702 5.91954L18.1919 4.42404C15.3167 1.30595 10.4418 1.07906 7.30156 4.02774C4.19008 6.9481 4.01352 11.8788 6.90805 15.019L15.6806 24.5336C17.192 26.1722 19.4603 26.8149 21.5999 26.2102C21.9118 26.1226 22.235 26.3057 22.3222 26.6201C22.3641 26.7711 22.3448 26.9327 22.2686 27.0694C22.1924 27.2061 22.0656 27.3066 21.9159 27.3489C19.3761 28.0663 16.6513 27.3216 14.8227 25.3392Z' fill='#8254C6'/>\r\n<path d='M20.055 19.168L16.4318 11.3335L14.6494 14.4812C14.5981 14.5717 14.5241 14.6469 14.4347 14.6992C14.3454 14.7516 14.2439 14.7791 14.1407 14.7791H0.664062C0.340391 14.7791 0.078125 14.5144 0.078125 14.1878C0.078125 13.8613 0.340391 13.5966 0.664062 13.5966H13.8006L15.9756 9.75566C16.2117 9.33891 16.8149 9.36565 17.0153 9.79888L20.4805 17.2916L23.5429 7.50592C23.6922 7.02826 24.3291 6.9432 24.5959 7.36654L28.5248 13.5966H39.3359C39.6596 13.5966 39.9218 13.8613 39.9218 14.1878C39.9218 14.5144 39.6596 14.7791 39.3359 14.7791H28.2032C28.1046 14.7791 28.0076 14.754 27.9212 14.7061C27.8348 14.6582 27.7617 14.5891 27.7088 14.5052L24.2819 9.07108L21.1446 19.0959C21.1091 19.2094 21.0403 19.3096 20.9475 19.3831C20.8547 19.4566 20.742 19.5 20.6242 19.5079C20.5064 19.5157 20.3891 19.4873 20.2875 19.4267C20.186 19.3661 20.1049 19.2758 20.055 19.168Z' fill='#8254C6'/>\r\n<path d='M30.5468 36.2376C25.3775 36.2376 21.1718 31.9937 21.1718 26.7774C21.1718 21.561 25.3775 17.3171 30.5468 17.3171C35.7162 17.3171 39.9218 21.561 39.9218 26.7774C39.9218 31.9937 35.7162 36.2376 30.5468 36.2376ZM30.5468 18.4996C26.0236 18.4996 22.3437 22.213 22.3437 26.7774C22.3437 31.3417 26.0236 35.055 30.5468 35.055C35.0701 35.055 38.75 31.3417 38.75 26.7774C38.75 22.213 35.0701 18.4996 30.5468 18.4996Z' fill='#8254C6'/>\r\n<path d='M36.9922 27.3685H34.6484C34.5715 27.3685 34.4954 27.3532 34.4242 27.3236C34.3531 27.2939 34.2885 27.2503 34.2341 27.1954C34.1797 27.1405 34.1365 27.0753 34.1071 27.0036C34.0777 26.9318 34.0625 26.8549 34.0625 26.7773C34.0625 24.8211 32.4854 23.2297 30.5469 23.2297C28.6084 23.2297 27.0313 24.8211 27.0313 26.7773C27.0313 27.1039 26.769 27.3685 26.4454 27.3685H24.1016C24.0246 27.3685 23.9484 27.3532 23.8774 27.3236C23.8063 27.2939 23.7417 27.2503 23.6873 27.1954C23.6329 27.1405 23.5897 27.0753 23.5602 27.0036C23.5308 26.9318 23.5156 26.8549 23.5157 26.7773C23.5157 22.865 26.6699 19.6821 30.5469 19.6821C34.4239 19.6821 37.5782 22.865 37.5782 26.7773C37.5782 27.1039 37.3159 27.3685 36.9922 27.3685ZM35.1979 26.186H36.3772C36.0822 23.2024 33.5799 20.8646 30.5469 20.8646C27.5139 20.8646 25.0116 23.2024 24.7166 26.186H25.8959C26.1851 23.8559 28.1606 22.0472 30.5469 22.0472C32.9331 22.0472 34.9087 23.8559 35.1979 26.186Z' fill='#8254C6'/>\r\n<path d='M30.5469 23.2297C30.47 23.2297 30.3939 23.2144 30.3227 23.1847C30.2516 23.155 30.187 23.1114 30.1326 23.0565C30.0782 23.0016 30.035 22.9364 30.0056 22.8647C29.9762 22.793 29.961 22.716 29.961 22.6384V20.2734C29.961 19.9468 30.2233 19.6821 30.5469 19.6821C30.8706 19.6821 31.1329 19.9468 31.1329 20.2734V22.6384C31.1329 22.965 30.8706 23.2297 30.5469 23.2297ZM27.2324 24.2688L25.5751 22.5965C25.5207 22.5416 25.4775 22.4764 25.4481 22.4047C25.4186 22.3329 25.4034 22.256 25.4034 22.1784C25.4034 22.1008 25.4186 22.0238 25.4481 21.9521C25.4775 21.8803 25.5207 21.8152 25.5751 21.7603C25.6295 21.7054 25.6941 21.6618 25.7652 21.6321C25.8363 21.6023 25.9124 21.5871 25.9894 21.5871C26.0664 21.5871 26.1426 21.6023 26.2137 21.6321C26.2848 21.6618 26.3494 21.7054 26.4038 21.7603L28.061 23.4326C28.1154 23.4875 28.1586 23.5527 28.188 23.6244C28.2175 23.6962 28.2327 23.7731 28.2327 23.8507C28.2327 23.9284 28.2175 24.0052 28.188 24.077C28.1586 24.1487 28.1154 24.2139 28.061 24.2688C28.0066 24.3237 27.942 24.3673 27.8709 24.397C27.7999 24.4267 27.7236 24.442 27.6467 24.442C27.5698 24.442 27.4935 24.4267 27.4224 24.397C27.3514 24.3673 27.2868 24.3237 27.2324 24.2688ZM33.0329 24.2688C32.9784 24.2139 32.9353 24.1487 32.9058 24.077C32.8764 24.0052 32.8612 23.9284 32.8612 23.8507C32.8612 23.7731 32.8764 23.6962 32.9058 23.6244C32.9353 23.5527 32.9784 23.4875 33.0329 23.4326L34.6901 21.7603C34.7999 21.6494 34.949 21.5871 35.1044 21.5871C35.2599 21.5871 35.4089 21.6494 35.5188 21.7603C35.6287 21.8712 35.6904 22.0215 35.6904 22.1784C35.6904 22.3352 35.6287 22.4856 35.5188 22.5965L33.8615 24.2688C33.7516 24.3797 33.6025 24.4419 33.4472 24.4419C33.2918 24.4419 33.1427 24.3797 33.0329 24.2688ZM30.5469 33.2811C29.2546 33.2811 28.2032 32.2202 28.2032 30.9161C28.2032 29.612 29.2546 28.551 30.5469 28.551C31.8393 28.551 32.8907 29.612 32.8907 30.9161C32.8907 32.2202 31.8393 33.2811 30.5469 33.2811ZM30.5469 29.7336C29.9008 29.7336 29.3751 30.264 29.3751 30.9161C29.3751 31.5681 29.9008 32.0987 30.5469 32.0987C31.1931 32.0987 31.7189 31.5681 31.7189 30.9161C31.7189 30.264 31.1931 29.7336 30.5469 29.7336Z' fill='#8254C6'/>\r\n<path d='M30.5469 29.7336C30.4699 29.7336 30.3938 29.7183 30.3227 29.6886C30.2515 29.6589 30.1869 29.6154 30.1325 29.5604C30.0781 29.5055 30.035 29.4404 30.0055 29.3686C29.9761 29.2968 29.9609 29.22 29.9609 29.1423V25.0035C29.9609 24.6769 30.2232 24.4122 30.5469 24.4122C30.8706 24.4122 31.1329 24.6769 31.1329 25.0035V29.1423C31.1329 29.469 30.8706 29.7336 30.5469 29.7336Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_622'>\r\n<rect width='40' height='37' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "diabetes",
              meaning: "\u062f\u06cc\u0627\u0628\u062a",
              icon: "<svg width='25' height='40' viewBox='0 0 25 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_655)'>\r\n<path d='M12.5 0.227295C5.669 0.227295 0.111633 5.8857 0.111633 12.8409V28.9775C0.111633 31.4212 2.06431 33.4094 4.46431 33.4094H8.70516V39.0909C8.70516 39.2718 8.77571 39.4452 8.90129 39.573C9.0269 39.7009 9.19717 39.7728 9.37485 39.7728H15.6252C15.8029 39.7728 15.9732 39.7009 16.0988 39.573C16.2243 39.4452 16.2948 39.2718 16.2948 39.0909V33.4094H20.5357C22.9357 33.4094 24.8884 31.4212 24.8884 28.9775V12.8409C24.8884 5.8857 19.331 0.227295 12.5 0.227295ZM10.0445 38.4091V35.6852H14.9556V38.4091H10.0445ZM14.9556 34.3216H10.0445V33.4094H14.9556V34.3216ZM23.5491 28.9775C23.5491 30.6691 22.1972 32.0458 20.5357 32.0458H4.46431C3.66538 32.0448 2.89943 31.7213 2.3345 31.146C1.76957 30.5708 1.4518 29.791 1.45092 28.9775V12.8409C2.05561 -2.07793 22.9417 -2.08475 23.5491 12.8409V28.9775Z' fill='#8254C6'/>\r\n<path d='M6.83073 25.4115C3.68475 25.4954 3.68542 30.1863 6.83073 30.2695C9.97671 30.1856 9.97609 25.4947 6.83073 25.4115ZM6.83073 28.9059C5.45596 28.8806 5.45596 26.8004 6.83073 26.7751C8.20551 26.8004 8.20551 28.8806 6.83073 28.9059ZM18.1691 25.4115C15.0231 25.4954 15.0238 30.1863 18.1691 30.2695C21.3145 30.1856 21.3145 25.4947 18.1691 25.4115ZM18.1691 28.9059C16.7943 28.8806 16.7943 26.8004 18.1691 26.7751C19.5439 26.8004 19.5439 28.8806 18.1691 28.9059ZM18.441 9.15833H6.55886C5.45127 9.15833 4.54993 10.0761 4.54993 11.2038V21.9779C4.54993 23.1056 5.45127 24.0233 6.55886 24.0233H18.441C19.5486 24.0233 20.4499 23.1056 20.4499 21.9779V11.2038C20.4499 10.0761 19.5486 9.15833 18.441 9.15833ZM19.1106 21.9779C19.1106 22.3536 18.8106 22.6597 18.441 22.6597H6.55886C6.18921 22.6597 5.88921 22.3536 5.88921 21.9779V11.2038C5.88921 10.8281 6.18921 10.522 6.55886 10.522H18.441C18.8106 10.522 19.1106 10.8281 19.1106 11.2038V21.9779Z' fill='#8254C6'/>\r\n<path d='M11.9435 12.6417C11.5396 13.2546 9.5274 16.3841 9.5274 17.814C9.65196 21.8141 15.3486 21.8141 15.4731 17.814C15.4731 16.3841 13.4602 13.2546 13.057 12.6417C12.8066 12.264 12.1932 12.264 11.9435 12.6417ZM12.4999 19.4782C12.0668 19.4777 11.6516 19.3022 11.3454 18.9903C11.0392 18.6784 10.867 18.2556 10.8667 17.8146C10.8667 17.2099 11.7004 15.6069 12.4999 14.2841C13.2995 15.6062 14.1332 17.2091 14.1332 17.8146C14.1329 18.2556 13.9606 18.6784 13.6545 18.9903C13.3482 19.3022 12.933 19.4777 12.4999 19.4782ZM12.4999 24.7726C12.3223 24.7726 12.152 24.8444 12.0264 24.9722C11.9008 25.1001 11.8303 25.2736 11.8303 25.4544V30.909C11.8303 31.0898 11.9008 31.2632 12.0264 31.3911C12.152 31.5189 12.3223 31.5908 12.4999 31.5908C12.6775 31.5908 12.8479 31.5189 12.9734 31.3911C13.099 31.2632 13.1695 31.0898 13.1695 30.909V25.4544C13.1695 25.2736 13.099 25.1001 12.9734 24.9722C12.8479 24.8444 12.6775 24.7726 12.4999 24.7726Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_655'>\r\n<rect width='25' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "obesity",
              meaning: "\u0686\u0627\u0642\u06cc",
              icon: "<svg width='38' height='40' viewBox='0 0 38 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_161_611)'>\r\n<path d='M36.226 28.598C36.6407 27.8501 37.1616 26.1944 36.0936 23.4287C36.0387 19.8666 34.1384 19.0237 33.22 16.568C33.6361 15.8172 33.9625 14.8294 33.9625 13.5715C33.9625 10.6809 32.6594 9.95009 32.2931 7.93941C33.8 6.04798 34.3957 3.45298 33.6297 0.532274C33.3904 -0.380583 32.0116 -0.0191534 32.2517 0.895847C33.4601 5.50513 30.3765 8.57156 28.8667 8.57156C22.9094 8.57156 23.4524 7.14656 18.9978 7.13299C14.5162 7.14656 15.1354 8.57156 9.13256 8.57156C7.54155 8.57156 4.55689 5.4387 5.74748 0.895847C5.98759 -0.0191534 4.61104 -0.37844 4.3695 0.532274C3.60428 3.45013 4.19779 6.04656 5.70615 7.93941C5.35916 9.84657 4.03748 10.7951 4.03748 13.5715C4.03748 14.8301 4.36451 15.818 4.7799 16.5687C3.88286 18.9644 1.96125 19.9144 1.90639 23.4287C0.838351 26.1951 1.35919 27.8509 1.77386 28.598C1.0122 30.1829 0.474976 33.9551 0.474976 35.0001C0.474976 39.2915 0.822676 39.6244 1.00935 39.8029C1.60073 40.3658 2.517 39.6501 2.12441 38.9401C2.08523 38.8058 1.89998 38.0151 1.89998 35.0001C1.89998 33.8029 2.4942 30.4551 2.98511 29.3323C4.73786 29.5509 6.65378 30.0301 8.559 30.7258C8.88248 30.9144 9.15394 31.0551 9.34346 31.1294C10.1251 31.4358 10.8917 32.3994 13.3477 33.0129C15.5814 34.3515 17.28 35.8508 18.2861 37.3651V39.2858C18.2861 40.2309 19.7111 40.2315 19.7111 39.2858V37.3658C20.7171 35.8515 22.4157 34.3523 24.6494 33.0137C28.4534 32.0623 28.1884 30.1837 35.0127 29.3323C35.5057 30.4551 36.1 33.8029 36.1 35.0001C36.1 38.0151 35.9147 38.8058 35.8756 38.9401C35.4744 39.6666 36.4128 40.3537 36.9906 39.8029C37.1773 39.6244 37.525 39.2915 37.525 35.0001C37.525 33.9551 36.9878 30.1829 36.226 28.598ZM3.01076 27.9058C2.83976 27.6087 2.56759 26.9101 2.75141 25.6851C3.36844 26.5666 4.25194 27.4637 5.18959 28.2737C4.46941 28.1172 3.74235 27.9945 3.01076 27.9058ZM19 35.9101C18.3495 35.0794 17.518 34.2658 16.5404 33.4858C18.0716 33.5972 19.8344 33.6044 21.4595 33.4858C20.482 34.2658 19.6504 35.0794 19 35.9101ZM19 32.1429C13.5828 32.1429 11.9548 31.0751 10.8775 30.3687C10.5434 30.1494 10.2284 29.9429 9.86354 29.8001C8.5191 29.2723 3.32498 25.3266 3.32498 23.5715C3.32498 20.7958 4.68086 20.0401 5.76814 17.8658C6.5355 18.6144 7.54583 19.0401 8.1828 19.1037C9.12615 19.198 9.25796 17.7751 8.32459 17.6823C8.01394 17.6515 7.50735 17.3994 7.25085 17.2429C7.17746 17.1987 5.46248 16.1323 5.46248 13.5715C5.46248 11.5501 6.32531 10.7358 6.87821 9.09871C7.62776 9.66799 8.43004 10.0001 9.13256 10.0001C15.2038 10.0001 14.9786 8.5737 18.9978 8.56157C23.0783 8.5737 22.7121 10.0001 28.8667 10.0001C29.5699 10.0001 30.3729 9.66799 31.1218 9.09871C31.6768 10.7437 32.5375 11.5429 32.5375 13.5715C32.5375 16.3744 30.8268 17.7129 28.1022 18.1029C27.1688 18.2358 27.3697 19.6509 28.3038 19.5166C29.4958 19.3458 31.2236 18.8472 32.2311 17.8644C33.3205 20.0429 34.675 20.7944 34.675 23.5715C34.675 25.3266 29.4809 29.2723 28.1364 29.7994C26.6081 30.3994 25.9839 32.1429 19 32.1429ZM35.2492 25.6844C35.4337 26.908 35.1617 27.6072 34.9899 27.9058C34.2845 27.9887 33.5549 28.1144 32.8104 28.2744C33.7487 27.4637 34.6316 26.5666 35.2492 25.6844Z' fill='#8254C6'/>\r\n<path d='M19 24.4643C19.3935 24.4643 19.7125 24.0646 19.7125 23.5714C19.7125 23.0783 19.3935 22.6786 19 22.6786C18.6065 22.6786 18.2875 23.0783 18.2875 23.5714C18.2875 24.0646 18.6065 24.4643 19 24.4643Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_161_611'>\r\n<rect width='38' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            }
          ],
          venereal: [
            {
              value: "chlamydia",
              meaning: "\u06a9\u0644\u0627\u0645\u06cc\u062f\u06cc\u0627",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_164_737)'>\r\n<path d='M18.7432 34.3856C18.1578 35.3373 17.3383 36.1233 16.3629 36.6685C15.3875 37.2138 14.2887 37.5 13.1713 37.5C12.018 37.5 10.8853 37.1951 9.88783 36.6163C8.89042 36.0375 8.06374 35.2052 7.49156 34.204L3.87914 27.8822C2.5658 25.5839 1.87499 22.9827 1.875 20.3356C1.875 16.8818 3.05047 13.5307 5.20813 10.8336L7.52797 7.93382C8.7535 6.40196 9.76117 4.70794 10.5224 2.89992C10.7381 2.38776 11.1 1.95061 11.563 1.64322C12.0259 1.33583 12.5693 1.17187 13.125 1.17188C13.6808 1.17187 14.2241 1.33583 14.687 1.64322C15.15 1.95061 15.5119 2.38776 15.7276 2.89992C16.4888 4.70794 17.4965 6.40196 18.722 7.93382L21.0418 10.8336C22.7022 12.9089 23.7897 15.383 24.1961 18.0094' stroke='#8254C6' stroke-width='1.8' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M16.8448 28.9788L15.8703 30.8391C15.6078 31.34 15.2133 31.7596 14.7293 32.0523C14.2454 32.3451 13.6906 32.4999 13.125 32.5C12.5485 32.5 11.9962 32.3398 11.5212 32.0523C11.0368 31.7601 10.6419 31.3403 10.3798 30.8391L8.10707 26.5C5.93832 22.3578 6.26801 17.3711 8.91875 13.5632C9.04459 13.3812 9.17659 13.2023 9.31334 13.0258L13.125 8.125L16.9368 13.0258C17.0735 13.2023 17.2055 13.3812 17.3313 13.5632C18.8528 15.7491 19.6097 18.3232 19.5682 20.9031' stroke='#8254C6' stroke-width='1.8' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M27.5 38.8281C33.368 38.8281 38.125 34.0711 38.125 28.2031C38.125 22.335 33.368 17.5781 27.5 17.5781C21.632 17.5781 16.875 22.335 16.875 28.2031C16.875 34.0711 21.632 38.8281 27.5 38.8281Z' stroke='#8254C6' stroke-width='1.8' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M27.5 31.875C29.5711 31.875 31.25 30.1961 31.25 28.125C31.25 26.0539 29.5711 24.375 27.5 24.375C25.4289 24.375 23.75 26.0539 23.75 28.125C23.75 30.1961 25.4289 31.875 27.5 31.875Z' stroke='#8254C6' stroke-width='1.8' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M27.5 21.875V24.375M23.0806 23.7055L24.8484 25.4733M21.25 28.125H23.75M23.0806 32.5444L24.8484 30.7766M27.5 34.375V31.875M31.9195 32.5444L30.1517 30.7766M33.75 28.125H31.25M31.9195 23.7055L30.1517 25.4733M17.2584 13.6189C16.108 14.4862 14.6764 15 13.125 15C11.5732 15 10.1412 14.4857 8.9906 13.6182M13.125 20.625V25' stroke='#8254C6' stroke-width='1.8' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_164_737'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "pubicLice",
              meaning:
                "\u0634\u067e\u0634 \u0646\u0627\u062d\u06cc\u0647 \u062a\u0646\u0627\u0633\u0644\u06cc",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_164_702)'>\r\n<path d='M38.8461 20.3847H31.923V17.9857C35.4062 17.4308 38.0769 14.4063 38.0769 10.7694V9.231C38.0769 8.59383 37.5602 8.07716 36.923 8.07716C36.2859 8.07716 35.7692 8.59383 35.7692 9.231V10.7694C35.7692 13.1292 34.1255 15.1111 31.9231 15.6336V14.6156C31.9231 13.5552 31.0605 12.6926 30.0001 12.6926H28.8462V8.46183C28.8462 6.03481 27.1076 4.00684 24.8105 3.55614L25.6698 1.62286C25.9286 1.04059 25.6664 0.358639 25.084 0.0998894C24.5015 -0.159017 23.8198 0.103327 23.561 0.68567L22.3271 3.46192H17.673L16.4391 0.685514C16.1804 0.103249 15.4985 -0.159096 14.9162 0.0997327C14.3339 0.358483 14.0716 1.04043 14.3304 1.6227L15.1896 3.55598C12.8927 4.00677 11.154 6.03458 11.154 8.46167V12.6924H10.0002C8.93987 12.6924 8.0772 13.5551 8.0772 14.6154V15.6334C5.87486 15.111 4.23111 13.1291 4.23111 10.7693V9.23083C4.23111 8.59367 3.71447 8.077 3.07727 8.077C2.44009 8.077 1.92345 8.59367 1.92345 9.23083V10.7693C1.92345 14.4062 4.59415 17.4306 8.07727 17.9855V20.3846H1.15407C0.516885 20.3846 0.000244141 20.9012 0.000244141 21.5384C0.000244141 22.1756 0.516885 22.6922 1.15407 22.6922H8.07712V25.0913C4.59399 25.6462 1.92329 28.6707 1.92329 32.3076V33.846C1.92329 34.4832 2.43993 34.9998 3.07712 34.9998C3.71431 34.9998 4.23095 34.4832 4.23095 33.846V32.3076C4.23095 29.9477 5.8747 27.9659 8.07704 27.4434V28.0767C8.07712 34.6513 13.4258 40 20.0001 40C26.5744 40 31.923 34.6513 31.923 28.077V27.4437C34.1254 27.9662 35.7691 29.9479 35.7691 32.3077V33.8463C35.7691 34.4834 36.2858 35.0001 36.923 35.0001C37.5602 35.0001 38.0768 34.4834 38.0768 33.8463V32.3077C38.0768 28.6709 35.4061 25.6464 31.923 25.0915V22.6925H38.846C39.4832 22.6925 39.9999 22.1758 39.9999 21.5387C39.9999 20.9014 39.4833 20.3847 38.8461 20.3847ZM13.4616 8.46175C13.4616 6.97723 14.6694 5.7695 16.154 5.7695H23.8462C25.3307 5.7695 26.5385 6.97723 26.5385 8.46175V12.6925H13.4616V8.46175ZM29.6154 28.077C29.6154 33.3788 25.302 37.6923 20.0001 37.6923C14.6982 37.6923 10.3848 33.3788 10.3848 28.077V15.0002H18.8463V26.1539C18.8463 26.7912 19.3629 27.3077 20.0001 27.3077C20.6373 27.3077 21.154 26.7912 21.154 26.1539V15.0002H29.6154V28.077Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_164_702'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "genitalHerpes",
              meaning:
                "\u062a\u0628\u062e\u0627\u0644 \u062a\u0646\u0627\u0633\u0644\u06cc",
              icon: "<svg width='40' height='35' viewBox='0 0 40 35' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_164_728)'>\r\n<path d='M10.0183 2.91467C10.9015 3.26795 11.6739 3.85145 12.2551 4.60447C12.8362 5.35749 13.2051 6.25251 13.323 7.19639L14.3073 15.071M25.6794 15.0711L26.6561 7.25756C26.7762 6.2966 27.1535 5.38589 27.7481 4.62153C28.3428 3.85717 29.1328 3.2675 30.0347 2.91475M15.5152 27.9432C15.7961 29.2546 15.938 30.592 15.9386 31.933V33.9805H24.0483V31.933C24.0489 30.592 24.1908 29.2546 24.4717 27.9432' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10'/>\r\n<path d='M5.87377 13.494C7.17343 13.494 8.22702 12.4404 8.22702 11.1407C8.22702 9.84106 7.17343 8.78748 5.87377 8.78748C4.5741 8.78748 3.52051 9.84106 3.52051 11.1407C3.52051 12.4404 4.5741 13.494 5.87377 13.494Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10'/>\r\n<path d='M34.1129 13.494C35.4126 13.494 36.4661 12.4404 36.4661 11.1407C36.4661 9.84106 35.4126 8.78748 34.1129 8.78748C32.8132 8.78748 31.7596 9.84106 31.7596 11.1407C31.7596 12.4404 32.8132 13.494 34.1129 13.494Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10'/>\r\n<path d='M35.6588 9.36713L37.9765 6.70826C40.3641 3.76334 37.3083 0.0111776 34.0338 1.28728L30.0346 2.91468C28.2885 3.62445 26.225 3.46338 24.6491 2.42935C21.8806 0.587912 18.1695 0.557758 15.3657 2.41271C14.583 2.92655 13.6865 3.24096 12.7544 3.32848C11.8222 3.41599 10.8829 3.27395 10.0183 2.91477L6.12858 1.29721C2.42563 -0.077875 -0.267596 3.96208 2.01012 6.70826L4.32784 9.36713' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10'/>\r\n<path d='M10.0183 2.91467L15.3656 5.13638C18.3288 6.36741 21.6595 6.37132 24.6255 5.14724L30.0346 2.91475M19.9936 6.17463V12.7935' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10'/>\r\n<path d='M19.9933 29.2663C24.5421 29.2663 28.2297 25.5787 28.2297 21.0299C28.2297 16.481 24.5421 12.7935 19.9933 12.7935C15.4444 12.7935 11.7568 16.481 11.7568 21.0299C11.7568 25.5787 15.4444 29.2663 19.9933 29.2663Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10'/>\r\n<path d='M19.9932 23.9674C21.6154 23.9674 22.9305 22.6524 22.9305 21.0301C22.9305 19.4079 21.6154 18.0928 19.9932 18.0928C18.3709 18.0928 17.0558 19.4079 17.0558 21.0301C17.0558 22.6524 18.3709 23.9674 19.9932 23.9674Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10'/>\r\n<path d='M19.9933 18.0926V15.689M19.9933 23.9673V26.371M17.4495 19.5613L15.3679 18.3594M22.5371 22.4986L24.6187 23.7005M17.4495 22.4986L15.3679 23.7005M22.5371 19.5613L24.6187 18.3594' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_164_728'>\r\n<rect width='40' height='35' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "hepatitisB",
              meaning: "\u0647\u067e\u0627\u062a\u06cc\u062a B",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_164_710)'>\r\n<path d='M3.20984 16.7089C3.52726 15.0594 4.08171 13.6565 4.83632 12.2125L3.20984 16.7089ZM5.71186 29.5169C4.80531 28.141 4.17336 26.7889 3.69218 25.1744L5.71186 29.5169ZM16.5541 36.8724C14.9689 36.548 13.4383 35.9988 12.0087 35.2413L16.5541 36.8724ZM29.3371 34.4476C28.0409 35.2945 26.6353 35.9607 25.1591 36.4277L29.3371 34.4476ZM36.7635 23.5065C36.4567 25.0345 35.9409 26.5129 35.2307 27.9001L36.7635 23.5065ZM34.3072 10.6619C35.1429 11.9417 35.8028 13.328 36.2695 14.7834L34.3072 10.6619ZM23.2955 3.30896C24.8529 3.59664 26.3615 4.10389 27.7763 4.81553L23.2955 3.30896ZM10.6331 5.81412C11.9484 4.9507 13.3771 4.27381 14.8783 3.80279L10.6331 5.81412Z' fill='#8254C6'/>\r\n<path d='M3.20984 16.7089C3.52726 15.0594 4.08171 13.6565 4.83632 12.2125M5.71186 29.5169C4.80531 28.141 4.17336 26.7889 3.69218 25.1744M16.5541 36.8724C14.9689 36.548 13.4383 35.9988 12.0087 35.2413M29.3371 34.4476C28.0409 35.2945 26.6353 35.9607 25.1591 36.4277M36.7635 23.5065C36.4567 25.0345 35.9409 26.5129 35.2307 27.9001M34.3072 10.6619C35.1429 11.9417 35.8028 13.328 36.2695 14.7834M23.2955 3.30896C24.8529 3.59664 26.3615 4.10389 27.7763 4.81553M10.6331 5.81412C11.9484 4.9507 13.3771 4.27381 14.8783 3.80279' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M23.3709 3.02249C23.3709 3.73054 21.8617 4.30452 20 4.30452C18.1383 4.30452 16.629 3.73054 16.629 3.02249C16.629 2.31445 18.1383 1.40295 20 1.40295C21.8617 1.40295 23.3709 2.31436 23.3709 3.02249ZM16.629 37.051C16.629 36.343 18.1383 35.769 20 35.769C21.8617 35.769 23.3709 36.343 23.3709 37.051C23.3709 37.759 21.8617 38.6705 20 38.6705C18.1383 38.6705 16.629 37.759 16.629 37.051Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M19.9603 31.1641C21.6379 31.1641 22.998 30.1356 22.998 28.8669C22.998 27.5982 21.6379 26.5698 19.9603 26.5698C18.2825 26.5698 16.9224 27.5982 16.9224 28.8669C16.9224 30.1356 18.2825 31.1641 19.9603 31.1641Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M19.9603 13.4794C21.6379 13.4794 22.998 12.5078 22.998 11.3094C22.998 10.1109 21.6379 9.1394 19.9603 9.1394C18.2825 9.1394 16.9224 10.1109 16.9224 11.3094C16.9224 12.5078 18.2825 13.4794 19.9603 13.4794Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M2.98561 16.6659C3.69365 16.6659 4.26764 18.1751 4.26764 20.0368C4.26764 21.8986 3.69365 23.4078 2.98561 23.4078C2.27756 23.4078 1.36615 21.8986 1.36615 20.0368C1.36615 18.1751 2.27756 16.6659 2.98561 16.6659ZM37.0142 23.4078C36.3062 23.4078 35.7322 21.8986 35.7322 20.0368C35.7322 18.1751 36.3062 16.6659 37.0142 16.6659C37.7222 16.6659 38.6337 18.1751 38.6337 20.0368C38.6337 21.8986 37.7222 23.4078 37.0142 23.4078Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M28.8346 23.1142C30.1008 23.1142 31.1273 21.7541 31.1273 20.0764C31.1273 18.3987 30.1008 17.0386 28.8346 17.0386C27.5682 17.0386 26.5417 18.3987 26.5417 20.0764C26.5417 21.7541 27.5682 23.1142 28.8346 23.1142Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M11.3445 23.1142C12.5828 23.1142 13.5866 21.7541 13.5866 20.0764C13.5866 18.3987 12.5828 17.0386 11.3445 17.0386C10.1062 17.0386 9.10242 18.3987 9.10242 20.0764C9.10242 21.7541 10.1062 23.1142 11.3445 23.1142Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n<path d='M5.5855 29.6839C6.0862 29.1831 7.55925 29.8445 8.87569 31.161C10.1921 32.4775 10.8534 33.9505 10.3528 34.4511C9.8521 34.9518 8.14042 34.5291 6.82402 33.2127C5.50761 31.8963 5.0848 30.1845 5.5855 29.6839ZM34.4146 10.3893C33.9139 10.89 32.4409 10.2287 31.1244 8.91221C29.808 7.59573 29.1467 6.12268 29.6473 5.62206C30.148 5.12136 31.8596 5.54409 33.176 6.8605C34.4924 8.1769 34.9153 9.88863 34.4146 10.3893ZM10.3528 5.62206C10.8534 6.12277 10.1921 7.59581 8.87569 8.91221C7.55917 10.2286 6.08613 10.89 5.5855 10.3893C5.0848 9.88863 5.50753 8.17698 6.82394 6.86058C8.14035 5.54417 9.8521 5.12143 10.3528 5.62206ZM29.6473 34.4511C29.1466 33.9505 29.8079 32.4774 31.1244 31.161C32.4409 29.8445 33.9139 29.1832 34.4146 29.6839C34.9153 30.1845 34.4925 31.8962 33.1761 33.2126C31.8597 34.529 30.148 34.9518 29.6473 34.4511Z' stroke='#8254C6' stroke-width='1.5' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_164_710'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "trichomoniasis",
              meaning:
                "\u062a\u0631\u06cc\u06a9\u0648\u0645\u0648\u0646\u06cc\u0627\u0632\u06cc\u0633",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\n<g clip-path='url(#clip0_164_692)'>\n<path d='M13.8992 29.1308L11.9357 31.0936C11.6102 31.419 11.6102 31.9467 11.9355 32.2722L13.7901 34.1272C14.1186 34.4558 14.1149 34.9896 13.7819 35.3136L12.0342 37.0143C11.7076 37.3323 11.1861 37.3287 10.8637 37.0063L9.03249 35.1751C8.70708 34.8497 8.17946 34.8497 7.85403 35.1751L4.4613 38.5678C4.13587 38.8933 3.60823 38.8933 3.28279 38.5678L1.42034 36.7054C1.09491 36.3799 1.09491 35.8523 1.42034 35.5268L4.81306 32.1342C5.1385 31.8088 5.1385 31.2811 4.81307 30.9557L3.07224 29.2148C2.74369 28.8863 2.74729 28.3525 3.08024 28.0284L4.82806 26.3272C5.15472 26.0092 5.67623 26.0127 5.99857 26.335L7.71612 28.0526C8.04155 28.378 8.56916 28.378 8.89466 28.0526L13.6181 23.3292C13.9084 23.0388 13.9417 22.5818 13.7167 22.2382C12.2768 20.0391 11.4388 17.4109 11.4388 14.5865C11.4388 10.5223 13.1728 6.86228 15.9403 4.30713M16.8398 3.54395C19.2101 1.69868 22.1899 0.599365 25.4259 0.599365C33.1502 0.599365 39.4123 6.8615 39.4123 14.5865C39.4123 22.3115 33.1502 28.5737 25.4259 28.5737C22.5897 28.5737 19.9511 27.7288 17.7466 26.2778C17.4029 26.0517 16.9447 26.0844 16.6538 26.3753L14.7297 28.2994' stroke='#8254C6' stroke-width='1.41039' stroke-miterlimit='10'/>\n<path d='M32.9055 22.0663C37.0363 17.9353 37.0362 11.2377 32.9052 7.10686C28.7742 2.976 22.0766 2.97611 17.9457 7.10712C13.8149 11.2381 13.815 17.9357 17.946 22.0666C22.077 26.1974 28.7746 26.1973 32.9055 22.0663Z' stroke='#8254C6' stroke-width='1.41039' stroke-miterlimit='10'/>\n<path d='M29.6391 15.956C29.6391 18.9723 27.8388 21.8876 25.618 21.8876C23.3972 21.8876 21.5969 18.9723 21.5969 15.956C21.5969 12.9397 23.3972 11.8265 25.618 11.8265C27.8388 11.8265 29.6391 12.9396 29.6391 15.956Z' stroke='#8254C6' stroke-width='1.41039' stroke-miterlimit='10'/>\n<path d='M25.6178 21.8875V18.9118C25.6178 18.0714 24.1472 17.7138 24.1472 16.7195C24.1472 15.7251 25.6178 15.3388 25.6178 14.527V11.8262C25.6178 8.70196 28.627 11.0127 29.9773 11.0127C31.3277 11.0127 32.1163 10.272 32.1163 9.64563' stroke='#8254C6' stroke-width='1.41039' stroke-miterlimit='10'/>\n<path d='M19.4646 11.8262C18.9975 11.3299 19.2362 9.64562 20.5565 9.64562C21.6367 9.64562 21.8089 11.3382 22.8765 10.2706C23.541 9.60612 25.6179 11.1423 25.6179 11.8262V9.06721C25.6179 8.19692 26.0476 7.85952 26.8327 8.23508C28.9033 9.22529 28.9756 7.86171 29.4673 7.2616' stroke='#8254C6' stroke-width='1.41039' stroke-miterlimit='10'/>\n</g>\n<defs>\n<clipPath id='clip0_164_692'>\n<rect width='40' height='40' fill='white'/>\n</clipPath>\n</defs>\n</svg>\n"
            },
            {
              value: "hiv",
              meaning: "\u0627\u0686\u200c\u0622\u06cc\u200c\u0648\u06cc (HIV)",
              icon: "<svg width='48' height='48' viewBox='0 0 48 48' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M31 28.0001C31.1974 28.0001 31.3903 27.9417 31.5546 27.8323C31.7188 27.7228 31.847 27.5672 31.923 27.3851L34.423 21.3851C34.5251 21.1403 34.5258 20.865 34.4249 20.6197C34.324 20.3744 34.1298 20.1792 33.885 20.0771C33.6402 19.975 33.3649 19.9743 33.1196 20.0752C32.8743 20.1761 32.6791 20.3703 32.577 20.6151L31 24.4001L29.423 20.6151C29.3209 20.3703 29.1257 20.1761 28.8804 20.0752C28.6351 19.9743 28.3598 19.975 28.115 20.0771C27.8702 20.1792 27.676 20.3744 27.5751 20.6197C27.4742 20.865 27.4749 21.1403 27.577 21.3851L30.077 27.3851C30.153 27.5672 30.2812 27.7228 30.4454 27.8323C30.6097 27.9417 30.8026 28.0001 31 28.0001ZM16 21.0001C16 20.7349 15.8946 20.4805 15.7071 20.293C15.5196 20.1054 15.2652 20.0001 15 20.0001C14.7348 20.0001 14.4804 20.1054 14.2929 20.293C14.1054 20.4805 14 20.7349 14 21.0001V27.0001C14 27.2653 14.1054 27.5196 14.2929 27.7072C14.4804 27.8947 14.7348 28.0001 15 28.0001C15.2652 28.0001 15.5196 27.8947 15.7071 27.7072C15.8946 27.5196 16 27.2653 16 27.0001V25.0001H18V27.0001C18 27.2653 18.1054 27.5196 18.2929 27.7072C18.4804 27.8947 18.7348 28.0001 19 28.0001C19.2652 28.0001 19.5196 27.8947 19.7071 27.7072C19.8946 27.5196 20 27.2653 20 27.0001V21.0001C20 20.7349 19.8946 20.4805 19.7071 20.293C19.5196 20.1054 19.2652 20.0001 19 20.0001C18.7348 20.0001 18.4804 20.1054 18.2929 20.293C18.1054 20.4805 18 20.7349 18 21.0001V23.0001H16V21.0001Z' fill='#8254C6'/>\r\n<path fill-rule='evenodd' clip-rule='evenodd' d='M21 5C21 4.73478 21.1054 4.48043 21.2929 4.29289C21.4804 4.10536 21.7348 4 22 4H26C26.2652 4 26.5196 4.10536 26.7071 4.29289C26.8946 4.48043 27 4.73478 27 5C27 5.26522 26.8946 5.51957 26.7071 5.70711C26.5196 5.89464 26.2652 6 26 6H25V9.033C28.2829 9.24775 31.403 10.5403 33.876 12.71L36.021 10.565L35.314 9.858C35.2185 9.76575 35.1423 9.65541 35.0899 9.5334C35.0375 9.4114 35.0099 9.28018 35.0088 9.1474C35.0076 9.01462 35.0329 8.88294 35.0832 8.76005C35.1335 8.63715 35.2077 8.5255 35.3016 8.43161C35.3955 8.33771 35.5072 8.26346 35.63 8.21318C35.7529 8.1629 35.8846 8.1376 36.0174 8.13875C36.1502 8.1399 36.2814 8.16749 36.4034 8.2199C36.5254 8.27231 36.6358 8.34849 36.728 8.444L39.556 11.272C39.7382 11.4606 39.839 11.7132 39.8367 11.9754C39.8344 12.2376 39.7292 12.4884 39.5438 12.6738C39.3584 12.8592 39.1076 12.9644 38.8454 12.9667C38.5832 12.969 38.3306 12.8682 38.142 12.686L37.435 11.979L35.29 14.124C37.4596 16.597 38.7522 19.7172 38.967 23H42V22C42 21.7348 42.1054 21.4804 42.2929 21.2929C42.4804 21.1054 42.7348 21 43 21C43.2652 21 43.5196 21.1054 43.7071 21.2929C43.8946 21.4804 44 21.7348 44 22V26C44 26.2652 43.8946 26.5196 43.7071 26.7071C43.5196 26.8946 43.2652 27 43 27C42.7348 27 42.4804 26.8946 42.2929 26.7071C42.1054 26.5196 42 26.2652 42 26V25H38.967C38.7522 28.2828 37.4596 31.403 35.29 33.876L37.435 36.021L38.142 35.314C38.2342 35.2185 38.3446 35.1423 38.4666 35.0899C38.5886 35.0375 38.7198 35.0099 38.8526 35.0088C38.9854 35.0076 39.1171 35.0329 39.24 35.0832C39.3629 35.1335 39.4745 35.2077 39.5684 35.3016C39.6623 35.3955 39.7365 35.5072 39.7868 35.63C39.8371 35.7529 39.8624 35.8846 39.8613 36.0174C39.8601 36.1502 39.8325 36.2814 39.7801 36.4034C39.7277 36.5254 39.6515 36.6358 39.556 36.728L36.728 39.556C36.5394 39.7382 36.2868 39.839 36.0246 39.8367C35.7624 39.8344 35.5116 39.7292 35.3262 39.5438C35.1408 39.3584 35.0356 39.1076 35.0333 38.8454C35.031 38.5832 35.1318 38.3306 35.314 38.142L36.021 37.435L33.876 35.29C31.403 37.4596 28.2828 38.7522 25 38.967V42H26C26.2652 42 26.5196 42.1054 26.7071 42.2929C26.8946 42.4804 27 42.7348 27 43C27 43.2652 26.8946 43.5196 26.7071 43.7071C26.5196 43.8946 26.2652 44 26 44H22C21.7348 44 21.4804 43.8946 21.2929 43.7071C21.1054 43.5196 21 43.2652 21 43C21 42.7348 21.1054 42.4804 21.2929 42.2929C21.4804 42.1054 21.7348 42 22 42H23V38.967C19.7171 38.7522 16.597 37.4597 14.124 35.29L11.979 37.435L12.686 38.142C12.7815 38.2342 12.8577 38.3446 12.9101 38.4666C12.9625 38.5886 12.9901 38.7198 12.9913 38.8526C12.9924 38.9854 12.9671 39.1171 12.9168 39.24C12.8665 39.3629 12.7923 39.4745 12.6984 39.5684C12.6045 39.6623 12.4929 39.7365 12.37 39.7868C12.2471 39.8371 12.1154 39.8624 11.9826 39.8613C11.8498 39.8601 11.7186 39.8325 11.5966 39.7801C11.4746 39.7277 11.3642 39.6515 11.272 39.556L8.444 36.728C8.34849 36.6358 8.27231 36.5254 8.2199 36.4034C8.16749 36.2814 8.1399 36.1502 8.13875 36.0174C8.1376 35.8846 8.1629 35.7529 8.21318 35.63C8.26346 35.5072 8.33771 35.3955 8.43161 35.3016C8.5255 35.2077 8.63715 35.1335 8.76005 35.0832C8.88294 35.0329 9.01462 35.0076 9.1474 35.0088C9.28018 35.0099 9.4114 35.0375 9.5334 35.0899C9.65541 35.1423 9.76575 35.2185 9.858 35.314L10.565 36.021L12.71 33.876C10.5403 31.403 9.24775 28.2829 9.033 25H6V26C6 26.2652 5.89464 26.5196 5.70711 26.7071C5.51957 26.8946 5.26522 27 5 27C4.73478 27 4.48043 26.8946 4.29289 26.7071C4.10536 26.5196 4 26.2652 4 26V22C4 21.7348 4.10536 21.4804 4.29289 21.2929C4.48043 21.1054 4.73478 21 5 21C5.26522 21 5.51957 21.1054 5.70711 21.2929C5.89464 21.4804 6 21.7348 6 22V23H9.033C9.24775 19.7171 10.5403 16.597 12.71 14.124L10.565 11.979L9.858 12.686C9.6694 12.8682 9.4168 12.969 9.1546 12.9667C8.8924 12.9644 8.64159 12.8592 8.45618 12.6738C8.27077 12.4884 8.1656 12.2376 8.16333 11.9754C8.16105 11.7132 8.26184 11.4606 8.444 11.272L11.272 8.444C11.3642 8.34849 11.4746 8.27231 11.5966 8.2199C11.7186 8.16749 11.8498 8.1399 11.9826 8.13875C12.1154 8.1376 12.2471 8.1629 12.37 8.21318C12.4929 8.26346 12.6045 8.33771 12.6984 8.43161C12.7923 8.5255 12.8665 8.63715 12.9168 8.76005C12.9671 8.88294 12.9924 9.01462 12.9913 9.1474C12.9901 9.28018 12.9625 9.4114 12.9101 9.5334C12.8577 9.65541 12.7815 9.76575 12.686 9.858L11.979 10.565L14.124 12.71C16.597 10.5403 19.7171 9.24775 23 9.033V6H22C21.7348 6 21.4804 5.89464 21.2929 5.70711C21.1054 5.51957 21 5.26522 21 5ZM33.872 15.542C35.6708 17.635 36.7535 20.2481 36.962 23H36C35.7348 23 35.4804 23.1054 35.2929 23.2929C35.1054 23.4804 35 23.7348 35 24C35 24.2652 35.1054 24.5196 35.2929 24.7071C35.4804 24.8946 35.7348 25 36 25H36.962C36.7534 27.7518 35.6707 30.365 33.872 32.458L33.192 31.778C33.0034 31.5958 32.7508 31.495 32.4886 31.4973C32.2264 31.4996 31.9756 31.6048 31.7902 31.7902C31.6048 31.9756 31.4996 32.2264 31.4973 32.4886C31.495 32.7508 31.5958 33.0034 31.778 33.192L32.458 33.872C30.365 35.6707 27.7518 36.7534 25 36.962V36C25 35.7348 24.8946 35.4804 24.7071 35.2929C24.5196 35.1054 24.2652 35 24 35C23.7348 35 23.4804 35.1054 23.2929 35.2929C23.1054 35.4804 23 35.7348 23 36V36.962C20.2481 36.7535 17.635 35.6708 15.542 33.872L16.222 33.192C16.4042 33.0034 16.505 32.7508 16.5027 32.4886C16.5004 32.2264 16.3952 31.9756 16.2098 31.7902C16.0244 31.6048 15.7736 31.4996 15.5114 31.4973C15.2492 31.495 14.9966 31.5958 14.808 31.778L14.128 32.458C12.3289 30.3651 11.2459 27.752 11.037 25H12C12.2652 25 12.5196 24.8946 12.7071 24.7071C12.8946 24.5196 13 24.2652 13 24C13 23.7348 12.8946 23.4804 12.7071 23.2929C12.5196 23.1054 12.2652 23 12 23H11.038C11.2466 20.2482 12.3293 17.635 14.128 15.542L14.808 16.222C14.9966 16.4042 15.2492 16.505 15.5114 16.5027C15.7736 16.5004 16.0244 16.3952 16.2098 16.2098C16.3952 16.0244 16.5004 15.7736 16.5027 15.5114C16.505 15.2492 16.4042 14.9966 16.222 14.808L15.542 14.128C17.635 12.3293 20.2482 11.2466 23 11.038V12C23 12.2652 23.1054 12.5196 23.2929 12.7071C23.4804 12.8946 23.7348 13 24 13C24.2652 13 24.5196 12.8946 24.7071 12.7071C24.8946 12.5196 25 12.2652 25 12V11.038C27.7518 11.2466 30.365 12.3293 32.458 14.128L31.778 14.808C31.5958 14.9966 31.495 15.2492 31.4973 15.5114C31.4996 15.7736 31.6048 16.0244 31.7902 16.2098C31.9756 16.3952 32.2264 16.5004 32.4886 16.5027C32.7508 16.505 33.0034 16.4042 33.192 16.222L33.872 15.542Z' fill='#8254C6'/>\r\n<path d='M24 21V27' stroke='#8254C6' stroke-width='2' stroke-miterlimit='10' stroke-linecap='round' stroke-linejoin='round'/>\r\n</svg>\r\n"
            },
            {
              value: "genitalWarts",
              meaning:
                "\u0632\u06af\u06cc\u0644 \u062a\u0646\u0627\u0633\u0644\u06cc (HPV)",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_164_720)'>\r\n<path d='M27 24.0001C27.1974 24.0001 27.3903 23.9417 27.5546 23.8323C27.7188 23.7228 27.847 23.5672 27.923 23.3851L30.423 17.3851C30.5251 17.1403 30.5258 16.865 30.4249 16.6197C30.324 16.3744 30.1298 16.1792 29.885 16.0771C29.6402 15.975 29.3649 15.9743 29.1196 16.0752C28.8743 16.1761 28.6791 16.3703 28.577 16.6151L27 20.4001L25.423 16.6151C25.3209 16.3703 25.1257 16.1761 24.8804 16.0752C24.6351 15.9743 24.3598 15.975 24.115 16.0771C23.8702 16.1792 23.676 16.3744 23.5751 16.6197C23.4742 16.865 23.4749 17.1403 23.577 17.3851L26.077 23.3851C26.153 23.5672 26.2812 23.7228 26.4454 23.8323C26.6097 23.9417 26.8026 24.0001 27 24.0001ZM12 17.0001C12 16.7349 11.8946 16.4805 11.7071 16.293C11.5196 16.1054 11.2652 16.0001 11 16.0001C10.7348 16.0001 10.4804 16.1054 10.2929 16.293C10.1054 16.4805 10 16.7349 10 17.0001V23.0001C10 23.2653 10.1054 23.5196 10.2929 23.7072C10.4804 23.8947 10.7348 24.0001 11 24.0001C11.2652 24.0001 11.5196 23.8947 11.7071 23.7072C11.8946 23.5196 12 23.2653 12 23.0001V21.0001H14V23.0001C14 23.2653 14.1054 23.5196 14.2929 23.7072C14.4804 23.8947 14.7348 24.0001 15 24.0001C15.2652 24.0001 15.5196 23.8947 15.7071 23.7072C15.8946 23.5196 16 23.2653 16 23.0001V17.0001C16 16.7349 15.8946 16.4805 15.7071 16.293C15.5196 16.1054 15.2652 16.0001 15 16.0001C14.7348 16.0001 14.4804 16.1054 14.2929 16.293C14.1054 16.4805 14 16.7349 14 17.0001V19.0001H12V17.0001Z' fill='#8254C6'/>\r\n<path fill-rule='evenodd' clip-rule='evenodd' d='M18 16C17.7348 16 17.4804 16.1054 17.2929 16.2929C17.1054 16.4804 17 16.7348 17 17V23C17 23.2652 17.1054 23.5196 17.2929 23.7071C17.4804 23.8946 17.7348 24 18 24C18.2652 24 18.5196 23.8946 18.7071 23.7071C18.8946 23.5196 19 23.2652 19 23V21H20.5C21.163 21 21.7989 20.7366 22.2678 20.2678C22.7366 19.7989 23 19.163 23 18.5C23 17.837 22.7366 17.2011 22.2678 16.7322C21.7989 16.2634 21.163 16 20.5 16H18ZM21 18.5C21 18.6326 20.9473 18.7598 20.8536 18.8536C20.7598 18.9473 20.6326 19 20.5 19H19V18H20.5C20.6326 18 20.7598 18.0527 20.8536 18.1464C20.9473 18.2402 21 18.3674 21 18.5Z' fill='#8254C6'/>\r\n<path fill-rule='evenodd' clip-rule='evenodd' d='M17 1C17 0.734784 17.1054 0.48043 17.2929 0.292893C17.4804 0.105357 17.7348 0 18 0H22C22.2652 0 22.5196 0.105357 22.7071 0.292893C22.8946 0.48043 23 0.734784 23 1C23 1.26522 22.8946 1.51957 22.7071 1.70711C22.5196 1.89464 22.2652 2 22 2H21V5.033C24.2829 5.24775 27.403 6.54031 29.876 8.71L32.021 6.565L31.314 5.858C31.2185 5.76575 31.1423 5.65541 31.0899 5.5334C31.0375 5.4114 31.0099 5.28018 31.0088 5.1474C31.0076 5.01462 31.0329 4.88294 31.0832 4.76005C31.1335 4.63715 31.2077 4.5255 31.3016 4.43161C31.3955 4.33771 31.5072 4.26346 31.63 4.21318C31.7529 4.1629 31.8846 4.1376 32.0174 4.13875C32.1502 4.1399 32.2814 4.16749 32.4034 4.2199C32.5254 4.27231 32.6358 4.34849 32.728 4.444L35.556 7.272C35.7382 7.4606 35.839 7.7132 35.8367 7.9754C35.8344 8.2376 35.7292 8.48841 35.5438 8.67382C35.3584 8.85923 35.1076 8.9644 34.8454 8.96667C34.5832 8.96895 34.3306 8.86816 34.142 8.686L33.435 7.979L31.29 10.124C33.4596 12.597 34.7522 15.7172 34.967 19H38V18C38 17.7348 38.1054 17.4804 38.2929 17.2929C38.4804 17.1054 38.7348 17 39 17C39.2652 17 39.5196 17.1054 39.7071 17.2929C39.8946 17.4804 40 17.7348 40 18V22C40 22.2652 39.8946 22.5196 39.7071 22.7071C39.5196 22.8946 39.2652 23 39 23C38.7348 23 38.4804 22.8946 38.2929 22.7071C38.1054 22.5196 38 22.2652 38 22V21H34.967C34.7522 24.2828 33.4596 27.403 31.29 29.876L33.435 32.021L34.142 31.314C34.2342 31.2185 34.3446 31.1423 34.4666 31.0899C34.5886 31.0375 34.7198 31.0099 34.8526 31.0088C34.9854 31.0076 35.1171 31.0329 35.24 31.0832C35.3629 31.1335 35.4745 31.2077 35.5684 31.3016C35.6623 31.3955 35.7365 31.5072 35.7868 31.63C35.8371 31.7529 35.8624 31.8846 35.8613 32.0174C35.8601 32.1502 35.8325 32.2814 35.7801 32.4034C35.7277 32.5254 35.6515 32.6358 35.556 32.728L32.728 35.556C32.5394 35.7382 32.2868 35.839 32.0246 35.8367C31.7624 35.8344 31.5116 35.7292 31.3262 35.5438C31.1408 35.3584 31.0356 35.1076 31.0333 34.8454C31.031 34.5832 31.1318 34.3306 31.314 34.142L32.021 33.435L29.876 31.29C27.403 33.4596 24.2828 34.7522 21 34.967V38H22C22.2652 38 22.5196 38.1054 22.7071 38.2929C22.8946 38.4804 23 38.7348 23 39C23 39.2652 22.8946 39.5196 22.7071 39.7071C22.5196 39.8946 22.2652 40 22 40H18C17.7348 40 17.4804 39.8946 17.2929 39.7071C17.1054 39.5196 17 39.2652 17 39C17 38.7348 17.1054 38.4804 17.2929 38.2929C17.4804 38.1054 17.7348 38 18 38H19V34.967C15.7171 34.7522 12.597 33.4597 10.124 31.29L7.979 33.435L8.686 34.142C8.78151 34.2342 8.85769 34.3446 8.9101 34.4666C8.96251 34.5886 8.9901 34.7198 8.99125 34.8526C8.9924 34.9854 8.9671 35.1171 8.91682 35.24C8.86654 35.3629 8.79229 35.4745 8.69839 35.5684C8.6045 35.6623 8.49285 35.7365 8.36995 35.7868C8.24706 35.8371 8.11538 35.8624 7.9826 35.8613C7.84982 35.8601 7.7186 35.8325 7.5966 35.7801C7.47459 35.7277 7.36425 35.6515 7.272 35.556L4.444 32.728C4.34849 32.6358 4.27231 32.5254 4.2199 32.4034C4.16749 32.2814 4.1399 32.1502 4.13875 32.0174C4.1376 31.8846 4.1629 31.7529 4.21318 31.63C4.26346 31.5072 4.33771 31.3955 4.43161 31.3016C4.5255 31.2077 4.63715 31.1335 4.76005 31.0832C4.88294 31.0329 5.01462 31.0076 5.1474 31.0088C5.28018 31.0099 5.4114 31.0375 5.5334 31.0899C5.65541 31.1423 5.76575 31.2185 5.858 31.314L6.565 32.021L8.71 29.876C6.54031 27.403 5.24775 24.2829 5.033 21H2V22C2 22.2652 1.89464 22.5196 1.70711 22.7071C1.51957 22.8946 1.26522 23 1 23C0.734784 23 0.48043 22.8946 0.292893 22.7071C0.105357 22.5196 0 22.2652 0 22V18C0 17.7348 0.105357 17.4804 0.292893 17.2929C0.48043 17.1054 0.734784 17 1 17C1.26522 17 1.51957 17.1054 1.70711 17.2929C1.89464 17.4804 2 17.7348 2 18V19H5.033C5.24775 15.7171 6.54031 12.597 8.71 10.124L6.565 7.979L5.858 8.686C5.6694 8.86816 5.4168 8.96895 5.1546 8.96667C4.8924 8.9644 4.64159 8.85923 4.45618 8.67382C4.27077 8.48841 4.1656 8.2376 4.16333 7.9754C4.16105 7.7132 4.26184 7.4606 4.444 7.272L7.272 4.444C7.36425 4.34849 7.47459 4.27231 7.5966 4.2199C7.7186 4.16749 7.84982 4.1399 7.9826 4.13875C8.11538 4.1376 8.24706 4.1629 8.36995 4.21318C8.49285 4.26346 8.6045 4.33771 8.69839 4.43161C8.79229 4.5255 8.86654 4.63715 8.91682 4.76005C8.9671 4.88294 8.9924 5.01462 8.99125 5.1474C8.9901 5.28018 8.96251 5.4114 8.9101 5.5334C8.85769 5.65541 8.78151 5.76575 8.686 5.858L7.979 6.565L10.124 8.71C12.597 6.54031 15.7171 5.24775 19 5.033V2H18C17.7348 2 17.4804 1.89464 17.2929 1.70711C17.1054 1.51957 17 1.26522 17 1ZM29.872 11.542C31.6708 13.635 32.7535 16.2481 32.962 19H32C31.7348 19 31.4804 19.1054 31.2929 19.2929C31.1054 19.4804 31 19.7348 31 20C31 20.2652 31.1054 20.5196 31.2929 20.7071C31.4804 20.8946 31.7348 21 32 21H32.962C32.7534 23.7518 31.6707 26.365 29.872 28.458L29.192 27.778C29.0034 27.5958 28.7508 27.495 28.4886 27.4973C28.2264 27.4996 27.9756 27.6048 27.7902 27.7902C27.6048 27.9756 27.4996 28.2264 27.4973 28.4886C27.495 28.7508 27.5958 29.0034 27.778 29.192L28.458 29.872C26.365 31.6707 23.7518 32.7534 21 32.962V32C21 31.7348 20.8946 31.4804 20.7071 31.2929C20.5196 31.1054 20.2652 31 20 31C19.7348 31 19.4804 31.1054 19.2929 31.2929C19.1054 31.4804 19 31.7348 19 32V32.962C16.2481 32.7535 13.635 31.6708 11.542 29.872L12.222 29.192C12.4042 29.0034 12.505 28.7508 12.5027 28.4886C12.5004 28.2264 12.3952 27.9756 12.2098 27.7902C12.0244 27.6048 11.7736 27.4996 11.5114 27.4973C11.2492 27.495 10.9966 27.5958 10.808 27.778L10.128 28.458C8.32893 26.3651 7.2459 23.752 7.037 21H8C8.26522 21 8.51957 20.8946 8.70711 20.7071C8.89464 20.5196 9 20.2652 9 20C9 19.7348 8.89464 19.4804 8.70711 19.2929C8.51957 19.1054 8.26522 19 8 19H7.038C7.24662 16.2482 8.32929 13.635 10.128 11.542L10.808 12.222C10.9966 12.4042 11.2492 12.505 11.5114 12.5027C11.7736 12.5004 12.0244 12.3952 12.2098 12.2098C12.3952 12.0244 12.5004 11.7736 12.5027 11.5114C12.505 11.2492 12.4042 10.9966 12.222 10.808L11.542 10.128C13.635 8.32929 16.2482 7.24662 19 7.038V8C19 8.26522 19.1054 8.51957 19.2929 8.70711C19.4804 8.89464 19.7348 9 20 9C20.2652 9 20.5196 8.89464 20.7071 8.70711C20.8946 8.51957 21 8.26522 21 8V7.038C23.7518 7.24662 26.365 8.32929 28.458 10.128L27.778 10.808C27.5958 10.9966 27.495 11.2492 27.4973 11.5114C27.4996 11.7736 27.6048 12.0244 27.7902 12.2098C27.9756 12.3952 28.2264 12.5004 28.4886 12.5027C28.7508 12.505 29.0034 12.4042 29.192 12.222L29.872 11.542Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_164_720'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "molluscumContagiosum",
              meaning: "\u0645\u0648\u0644\u0648\u0633\u06a9\u0648\u0645",
              icon: "<svg width='40' height='25' viewBox='0 0 40 25' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_164_704)'>\r\n<path d='M32.5518 18.8739C30.6366 18.8739 29.6054 18.2065 28.7769 17.6702C28.0347 17.1898 27.4984 16.8427 26.2756 16.8427C25.0528 16.8427 24.5165 17.1898 23.7744 17.6702C22.9458 18.2065 21.9147 18.8739 19.9995 18.8739C18.0844 18.8739 17.0533 18.2065 16.2248 17.6702C15.4828 17.1898 14.9466 16.8427 13.7238 16.8427C12.5009 16.8427 11.9647 17.1898 11.2226 17.6702C10.3941 18.2065 9.36292 18.8739 7.44782 18.8739C5.53258 18.8739 4.50157 18.2065 3.67305 17.6702C2.93094 17.1898 2.39477 16.8427 1.17195 16.8427C0.524766 16.8427 7.8125e-05 16.318 7.8125e-05 15.6708C7.8125e-05 15.0236 0.524766 14.4989 1.17195 14.4989C3.08711 14.4989 4.11813 15.1663 4.94664 15.7027C5.68875 16.183 6.22493 16.5302 7.44782 16.5302C8.67058 16.5302 9.20692 16.1831 9.949 15.7027C10.7775 15.1663 11.8086 14.4989 13.7238 14.4989C15.6389 14.4989 16.67 15.1663 17.4984 15.7027C18.2406 16.183 18.7768 16.5302 19.9995 16.5302C21.2223 16.5302 21.7587 16.1831 22.5008 15.7026C23.3293 15.1663 24.3605 14.4989 26.2756 14.4989C28.1908 14.4989 29.2219 15.1663 30.0505 15.7027C30.7928 16.183 31.3289 16.5302 32.5518 16.5302C33.7748 16.5302 34.3111 16.1831 35.0533 15.7026C35.8818 15.1663 36.9131 14.4989 38.8282 14.4989C39.4754 14.4989 40.0001 15.0236 40.0001 15.6708C40.0001 16.318 39.4754 16.8427 38.8282 16.8427C37.6053 16.8427 37.0691 17.1898 36.3268 17.6702C35.4982 18.2065 34.4671 18.8739 32.5518 18.8739ZM38.8282 12.1552H26.6867C24.6836 12.1552 22.8232 11.301 21.5821 9.81183C21.1893 9.3405 20.6127 9.07017 20 9.07017C19.3873 9.07017 18.8107 9.3405 18.4178 9.81192C17.1768 11.3011 15.3163 12.1552 13.3133 12.1552H1.17188C0.524688 12.1552 0 11.6305 0 10.9833C0 10.3361 0.524688 9.81142 1.17188 9.81142H13.3133C14.6187 9.81142 15.8229 9.26467 16.6173 8.31142C17.4568 7.30416 18.6898 6.72642 20 6.72642C21.3102 6.72642 22.5432 7.30416 23.3826 8.31135C24.177 9.26467 25.3812 9.81142 26.6867 9.81142H38.8282C39.4753 9.81142 40 10.3361 40 10.9833C40 11.6306 39.4753 12.1552 38.8282 12.1552ZM33.5157 24.3624C33.0144 24.3624 32.5621 24.0319 32.4034 23.5582C32.2451 23.0854 32.4168 22.5452 32.8178 22.2492C33.1868 21.9769 33.6894 21.9458 34.0893 22.1691C34.5124 22.4055 34.75 22.8986 34.6722 23.3771C34.5812 23.937 34.0838 24.3624 33.5157 24.3624ZM20 24.3624C19.4893 24.3624 19.0284 24.0183 18.8788 23.5311C18.7341 23.0597 18.9132 22.5285 19.3137 22.2408C19.6699 21.985 20.1481 21.949 20.5379 22.1502C20.9712 22.3737 21.2297 22.8642 21.161 23.3486C21.0799 23.9209 20.5803 24.3624 20 24.3624ZM6.48438 24.3624C5.97493 24.3624 5.51109 24.0185 5.3632 23.5311C5.21532 23.0437 5.40868 22.4987 5.83359 22.2162C6.22039 21.9592 6.73109 21.9562 7.12133 22.2072C7.53758 22.4747 7.74055 22.9964 7.62047 23.4756C7.49141 23.9907 7.01508 24.3624 6.48438 24.3624ZM26.4843 22.0187C25.9835 22.0187 25.5301 21.6884 25.3722 21.2142C25.2148 20.7413 25.3849 20.2011 25.7868 19.9054C26.1858 19.612 26.7376 19.6006 27.1468 19.8807C27.5581 20.1621 27.7501 20.6944 27.6088 21.1731C27.4628 21.668 27.0019 22.0187 26.4843 22.0187ZM13.9843 22.0187C13.5238 22.0187 13.1018 21.7403 12.9138 21.3215C12.7052 20.8568 12.8333 20.2909 13.2193 19.9592C13.5766 19.652 14.0949 19.5897 14.5146 19.8022C14.9489 20.0222 15.2077 20.5068 15.1474 20.9904C15.0754 21.5693 14.5681 22.0187 13.9843 22.0187ZM14.9711 6.69846C14.8172 6.69866 14.6648 6.66843 14.5225 6.60953C14.3803 6.55061 14.2512 6.46418 14.1425 6.35518L13.1264 5.33908C12.6688 4.8815 12.6688 4.13948 13.1264 3.68182C13.584 3.22424 14.326 3.22424 14.7837 3.68182L15.7998 4.69791C16.2574 5.15557 16.2574 5.8976 15.7998 6.35518C15.6911 6.46417 15.5619 6.5506 15.4197 6.60951C15.2775 6.66843 15.125 6.69865 14.9711 6.69846ZM25.0289 6.69846C24.875 6.69866 24.7226 6.66843 24.5803 6.60953C24.4382 6.55061 24.309 6.46418 24.2003 6.35518C23.7427 5.8976 23.7427 5.15557 24.2003 4.69791L25.2164 3.68182C25.6741 3.22424 26.416 3.22424 26.8737 3.68182C27.3313 4.13939 27.3313 4.88143 26.8737 5.33908L25.8576 6.35518C25.7489 6.46417 25.6198 6.5506 25.4775 6.60951C25.3353 6.66843 25.1828 6.69865 25.0289 6.69846ZM20 4.41799C19.3528 4.41799 18.8282 3.8933 18.8282 3.24612V1.80908C18.8282 1.16189 19.3528 0.637207 20 0.637207C20.6472 0.637207 21.1718 1.16189 21.1718 1.80908V3.24612C21.1718 3.8933 20.6472 4.41799 20 4.41799Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_164_704'>\r\n<rect width='40' height='25' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "genitalScabies",
              meaning:
                "\u06af\u0627\u0644 \u062a\u0646\u0627\u0633\u0644\u06cc",
              icon: "<svg width='40' height='33' viewBox='0 0 40 33' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_164_724)'>\r\n<path d='M2.50002 26.4C1.76501 26.4 1.04168 26.207 0.411684 25.8423C0.237794 25.7236 0.115684 25.5443 0.0698615 25.3401C0.0240391 25.136 0.0578952 24.9223 0.164635 24.7418C0.271375 24.5613 0.443099 24.4276 0.645342 24.3673C0.847588 24.307 1.06538 24.3247 1.25501 24.4167C1.63343 24.6337 2.06271 24.7486 2.50002 24.75C3.87835 24.75 5.00002 23.6396 5.00002 22.275C5.00002 20.9105 3.87835 19.8 2.50002 19.8C2.06271 19.8014 1.63343 19.9163 1.25501 20.1333C1.16046 20.1881 1.05593 20.224 0.947388 20.2388C0.838846 20.2536 0.728411 20.2472 0.622396 20.2197C0.516383 20.1923 0.416864 20.1445 0.329522 20.079C0.24218 20.0135 0.168724 19.9316 0.11335 19.838C0.0579761 19.7443 0.0217676 19.6409 0.00679199 19.5334C-0.00818359 19.426 -0.00163295 19.3167 0.0260698 19.2117C0.0537727 19.1067 0.102085 19.0082 0.168249 18.9217C0.234412 18.8353 0.317132 18.7626 0.411684 18.7077C1.04564 18.3421 1.7663 18.1496 2.50002 18.15C4.79835 18.15 6.66669 20.0013 6.66669 22.275C6.66669 24.5487 4.79835 26.4 2.50002 26.4ZM38.3333 26.4C36.4951 26.4 35 24.92 35 23.1C35 21.2801 36.4951 19.8 38.3333 19.8C38.7266 19.8 39.0951 19.866 39.4601 20.0013C39.8917 20.1614 40.1101 20.6366 39.9467 21.0639C39.8681 21.2682 39.7113 21.4334 39.5102 21.5237C39.3092 21.6139 39.0803 21.6219 38.8733 21.5457C37.8583 21.1695 36.6666 21.9978 36.6666 23.1C36.6666 24.2022 37.8583 25.0289 38.8733 24.6543C39.0803 24.5782 39.3092 24.5862 39.5102 24.6764C39.7113 24.7666 39.8681 24.9319 39.9467 25.1361C39.9855 25.2375 40.0036 25.3455 40.0001 25.4538C39.9966 25.5622 39.9715 25.6687 39.9263 25.7675C39.8811 25.8662 39.8166 25.9551 39.7366 26.0291C39.6566 26.1031 39.5626 26.1608 39.4601 26.1987C39.0951 26.334 38.7266 26.4 38.3333 26.4Z' fill='#8254C6'/>\r\n<path d='M35.8333 33H4.16667C3.06201 32.9987 2.00297 32.5637 1.22185 31.7904C0.440735 31.017 0.00132322 29.9686 0 28.875V15.675C0 14.3104 1.12167 13.2 2.5 13.2H5.96C9.00167 13.2 11.83 12.2875 13.9233 10.6309C17.9567 7.43655 22.0417 7.43655 26.075 10.6309C28.1667 12.2875 30.9967 13.2 34.04 13.2H37.5C38.8783 13.2 40 14.3104 40 15.675V28.875C40 31.1487 38.1317 33 35.8333 33ZM2.5 14.85C2.27898 14.85 2.06703 14.937 1.91074 15.0916C1.75447 15.2463 1.66667 15.4562 1.66667 15.675V28.875C1.66667 30.2395 2.78833 31.35 4.16667 31.35H35.8333C37.2117 31.35 38.3333 30.2395 38.3333 28.875V15.675C38.3333 15.4562 38.2455 15.2463 38.0892 15.0916C37.933 14.937 37.721 14.85 37.5 14.85H34.04C30.6183 14.85 27.42 13.8088 25.035 11.9196C21.6467 9.23505 18.355 9.23505 14.9667 11.9196C12.5783 13.8088 9.38 14.85 5.96 14.85H2.5ZM20 4.95C19.779 4.95 19.567 4.86308 19.4107 4.70837C19.2545 4.55365 19.1667 4.34381 19.1667 4.125V0.825C19.1667 0.606197 19.2545 0.396355 19.4107 0.241637C19.567 0.0869195 19.779 0 20 0C20.221 0 20.433 0.0869195 20.5892 0.241637C20.7455 0.396355 20.8333 0.606197 20.8333 0.825V4.125C20.8333 4.34381 20.7455 4.55365 20.5892 4.70837C20.433 4.86308 20.221 4.95 20 4.95ZM25.8333 6.6C25.6687 6.59997 25.5077 6.55162 25.3707 6.46107C25.2337 6.37052 25.1269 6.24182 25.0638 6.09123C25.0007 5.94064 24.9841 5.7749 25.016 5.61496C25.0479 5.45501 25.1271 5.30802 25.2433 5.19255L26.91 3.54255C27.0672 3.39227 27.2777 3.30912 27.4962 3.311C27.7147 3.31287 27.9237 3.39964 28.0782 3.5526C28.2327 3.70556 28.3203 3.91248 28.3222 4.12879C28.3242 4.34511 28.2402 4.55351 28.0883 4.7091L26.4217 6.3591C26.3444 6.43561 26.2527 6.49628 26.1517 6.53762C26.0508 6.57895 25.9426 6.60016 25.8333 6.6ZM14.1667 6.6C13.9456 6.60003 13.7334 6.51342 13.5767 6.3591L11.91 4.7091C11.7582 4.55351 11.6742 4.34511 11.6761 4.12879C11.678 3.91248 11.7657 3.70556 11.9202 3.5526C12.0747 3.39964 12.2837 3.31287 12.5022 3.311C12.7207 3.30912 12.9312 3.39227 13.0883 3.54255L14.755 5.19255C14.8712 5.30792 14.9503 5.45476 14.9823 5.61455C15.0143 5.77435 14.9978 5.93994 14.9348 6.09047C14.8719 6.24099 14.7654 6.36971 14.6287 6.46039C14.492 6.55106 14.3312 6.59964 14.1667 6.6Z' fill='#8254C6'/>\r\n<path d='M17.5 24.75C16.1217 24.75 15 23.6396 15 22.275C15 20.9105 16.1217 19.8 17.5 19.8C18.8783 19.8 20 20.9105 20 22.275C20 23.6396 18.8783 24.75 17.5 24.75ZM17.5 21.45C17.2786 21.4505 17.0663 21.538 16.9101 21.6933C16.7538 21.8487 16.6662 22.0591 16.6667 22.2783C16.6671 22.4976 16.7555 22.7077 16.9124 22.8624C17.0693 23.0171 17.2819 23.1038 17.5033 23.1033C17.7247 23.1029 17.937 23.0154 18.0933 22.8601C18.2496 22.7047 18.3371 22.4943 18.3367 22.275C18.3362 22.0558 18.2478 21.8457 18.0909 21.691C17.934 21.5363 17.7214 21.4496 17.5 21.45ZM27.5 28.05C26.1217 28.05 25 26.9396 25 25.575C25 24.2105 26.1217 23.1 27.5 23.1C28.8783 23.1 30 24.2105 30 25.575C30 26.9396 28.8783 28.05 27.5 28.05ZM27.5 24.75C27.3903 24.7503 27.2818 24.7718 27.1806 24.8136C27.0793 24.8553 26.9874 24.9165 26.9101 24.9933C26.8327 25.0702 26.7713 25.1615 26.7296 25.2619C26.6878 25.3623 26.6664 25.4698 26.6667 25.5783C26.6669 25.6869 26.6887 25.7943 26.7308 25.8946C26.773 25.9948 26.8347 26.0858 26.9124 26.1624C26.9901 26.239 27.0822 26.2997 27.1837 26.3411C27.2851 26.3824 27.3937 26.4036 27.5033 26.4034C27.7248 26.4029 27.937 26.3154 28.0932 26.1601C28.2496 26.0047 28.3371 25.7943 28.3367 25.575C28.3363 25.3558 28.2478 25.1457 28.0909 24.991C27.934 24.8363 27.7214 24.7496 27.5 24.75Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_164_724'>\r\n<rect width='40' height='33' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "syphilis",
              meaning: "\u0633\u06cc\u0641\u0644\u06cc\u0633",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\n<g clip-path='url(#clip0_164_698)'>\n<path d='M12.2688 8.95257L11.2261 7.90988C10.9007 7.58444 10.9007 7.0568 11.2261 6.73136L13.2045 4.75295C13.5268 4.43064 13.5304 3.90916 13.2125 3.5825L11.2526 1.56864C10.9285 1.23564 10.3947 1.23202 10.0662 1.56059L8.06065 3.56604C7.73524 3.89146 7.20765 3.89149 6.88221 3.56612L4.73354 1.41796C4.4081 1.09259 3.88052 1.09262 3.5551 1.41803L1.41803 3.5551C1.09262 3.88051 1.09259 4.4081 1.41796 4.73354L3.56604 6.88214C3.89144 7.20761 3.89139 7.73525 3.5659 8.06065L1.46344 10.1627C1.14105 10.4849 1.13749 11.0065 1.45542 11.3332L3.41531 13.347C3.73936 13.68 4.27313 13.6837 4.6017 13.3552L6.73142 11.2259C7.05684 10.9006 7.58439 10.9006 7.9098 11.2259L10.8802 14.1957C11.1534 14.4689 11.1997 14.8926 11.0182 15.2339C10.2631 16.6544 9.83499 18.2747 9.83499 19.9955C9.83499 25.6072 14.3837 30.156 19.9955 30.156C21.7162 30.156 23.3366 29.7278 24.7571 28.9727C25.0983 28.7912 25.522 28.8374 25.7952 29.1107L30.6193 33.9347C31.1442 34.4597 30.7725 35.3573 30.0301 35.3573H25.6394C25.1792 35.3573 24.8061 35.7304 24.8061 36.1907V38.5804C24.8061 39.0407 25.1792 39.4137 25.6394 39.4137H34.7126' stroke='#8254C6' stroke-width='1.40684' stroke-miterlimit='10'/>\n<path d='M16.7303 18.885C16.7303 18.885 14.1162 20.5806 14.5569 21.7638C14.9852 22.9139 17.1817 20.9982 17.641 22.0635C18.0973 23.1217 15.5239 24.1111 16.5416 25.1289C17.6192 26.2065 19.6679 24.1012 20.4337 24.8196C21.1927 25.5317 20.3463 26.865 19.4776 27.7412M11.25 7.91663L13.0982 9.78188L14.1958 10.88C14.469 11.1534 14.8927 11.1997 15.2341 11.0183C16.6546 10.2631 18.2748 9.83504 19.9956 9.83504C25.6072 9.83504 30.1561 14.3838 30.1561 19.9955C30.1561 21.7163 29.7279 23.3366 28.9727 24.7571C28.7913 25.0984 28.8375 25.522 29.1108 25.7953L33.9348 30.6194C34.4598 31.1443 35.3574 30.7725 35.3574 30.0301V25.6395C35.3574 25.1792 35.7306 24.8061 36.1908 24.8061H38.5805C39.0407 24.8061 39.4138 25.1792 39.4138 25.6395V38.5805C39.4138 39.0407 39.0407 39.4138 38.5805 39.4138H35.885H33.75' stroke='#8254C6' stroke-width='1.40684' stroke-miterlimit='10'/>\n<path d='M26.2813 16.2919C27.2391 17.609 27.2391 18.1479 25.9819 19.4649C25.5092 19.9601 24.1534 20.6457 24.0533 21.3229C23.9531 22.0005 25.5895 22.421 25.4893 23.0985C25.3891 23.7762 24.1665 23.5166 24.0663 24.1942C23.966 24.8719 25.0046 25.4322 24.9043 26.1099C24.8041 26.7876 22.7492 26.1099 22.7492 26.1099M18.9083 12.4972C18.9083 12.4972 20.9114 12.5718 21.119 13.2754C21.3265 13.9789 19.3872 14.6671 19.5946 15.3707C19.8022 16.0744 22.0856 15.7445 22.2932 16.4483C22.5008 17.1521 20.361 17.9346 20.5686 18.6384C20.7762 19.3423 23.3296 18.6809 23.3296 18.6809' stroke='#8254C6' stroke-width='1.40684' stroke-miterlimit='10'/>\n</g>\n<defs>\n<clipPath id='clip0_164_698'>\n<rect width='40' height='40' fill='white'/>\n</clipPath>\n</defs>\n</svg>\n"
            },
            {
              value: "gonorrhea",
              meaning: "\u0633\u0648\u0632\u0627\u06a9",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_165_745)'>\r\n<path d='M21.9484 39.9429C24.0184 39.63 26.0313 39.1459 27.93 38.2771C34.5899 35.2326 38.4866 30.0511 39.7917 22.8853C39.8728 22.438 39.7641 21.9594 40 21.5361V18.775C39.7862 18.5652 39.5908 18.2725 39.2295 18.4584C38.9124 18.6222 38.8995 18.9296 38.9032 19.2518C38.9106 20.4151 38.9032 21.5692 38.741 22.7325C37.4986 31.6709 29.6424 38.6232 20.5419 38.8882C13.1281 39.1036 5.05991 34.6141 2.22857 26.4378C-0.309677 19.1137 1.10599 12.4651 6.41843 6.82711C10.1935 2.81993 14.9825 0.933229 20.5272 1.08417C20.8922 1.09337 21.2903 1.1762 21.5078 0.773089C21.7014 0.414155 21.4028 0.217201 21.1982 0H18.4332C17.224 0.305554 15.9687 0.346049 14.7668 0.714187C6.60092 3.22673 1.80645 8.72486 0.206452 17.0595C0.121659 17.5049 0.234101 17.9817 0 18.4069V21.5361C0.326267 23.1779 0.494009 24.8511 1.09493 26.436C3.92995 33.911 9.2977 38.3287 17.1631 39.7423C17.1631 39.7423 18.7152 40.1436 21.9502 39.9429H21.9484Z' fill='#8254C6'/>\r\n<path d='M14.4387 4.59988C15.447 5.12448 16.3115 4.50601 17.3143 3.81391C19.224 2.49597 21.7788 2.81073 23.4949 4.39004C23.8673 4.73241 24.1936 4.8723 24.7042 4.7545C27.4083 4.13419 29.93 5.52575 30.7963 8.16345C30.9954 8.77088 31.3198 9.00465 31.8765 9.1924C34.2359 9.9931 35.7954 12.2682 35.3198 14.685C35.1097 15.7508 35.3954 16.2294 35.9926 16.9804C37.4986 18.8689 37.2682 21.6631 35.6 23.4614C35.2516 23.8369 35.1226 24.1609 35.2406 24.6671C35.8673 27.3526 34.459 29.8744 31.8212 30.7524C31.2793 30.9328 30.9991 31.1849 30.8148 31.7408C29.9318 34.4172 27.4489 35.7811 24.6489 35.1756C24.2286 35.0854 23.9355 35.1443 23.5926 35.459C21.4525 37.423 18.5493 37.4175 16.3908 35.4406C16.0387 35.1167 15.7364 35.0927 15.3272 35.1829C12.5309 35.7996 10.0387 34.3785 9.12996 31.6378C9.00093 31.2494 8.88111 30.9972 8.41107 30.8463C5.52075 29.913 4.16775 27.5349 4.77973 24.5529C4.86084 24.1572 4.81291 23.8811 4.50323 23.5811C2.43134 21.5747 2.59171 17.9154 4.68941 16.2128C4.9825 15.9735 4.93641 15.7526 4.8424 15.4986C3.92075 13.0247 5.56867 9.90106 8.20277 9.16847C8.77236 9.01017 9.01568 8.71014 9.19448 8.16898C9.93918 5.91965 11.8562 4.57963 14.4369 4.59804L14.4387 4.59988ZM34.3521 14.466C34.424 12.1338 33.0175 10.3833 30.894 9.97653C30.3668 9.87529 30.1254 9.72804 30.0148 9.15559C29.4876 6.40376 27.0065 5.00483 24.3115 5.93438C23.8396 6.09636 23.5963 6.00064 23.2885 5.66748C21.2369 3.45681 18.7779 3.46234 16.7005 5.67852C16.4258 5.97119 16.2083 6.10925 15.7585 5.96383C12.8498 5.02692 10.6028 6.3154 9.96867 9.26234C9.88757 9.63785 9.76038 9.84584 9.36591 9.94524C6.35208 10.7018 5.23872 12.4431 5.81015 15.4986C5.92075 16.095 5.8378 16.5275 5.34747 16.9914C3.54287 18.6996 3.60922 21.3814 5.48388 23.0786C5.93918 23.4909 6.05346 23.8443 5.8931 24.4186C5.12074 27.2017 6.4424 29.4087 9.23134 29.9811C9.70323 30.0787 9.88204 30.2536 9.97604 30.7266C10.529 33.5153 12.9807 34.9473 15.635 34.0233C16.129 33.8521 16.4 33.9294 16.7392 34.2994C18.7244 36.4696 21.2774 36.4696 23.2627 34.2994C23.6 33.9313 23.8691 33.8484 24.365 34.0233C26.9677 34.94 29.4986 33.5061 30.0111 30.8205C30.1161 30.272 30.306 30.0769 30.8571 29.9683C33.5042 29.4455 34.9438 27.0526 34.1272 24.5124C33.9097 23.8369 34.0756 23.4761 34.5733 23.027C36.1106 21.6428 36.5401 19.3567 35.2682 17.8105C34.3152 16.6509 33.7641 15.6403 34.3521 14.466Z' fill='#8254C6'/>\r\n<path d='M36.2857 9.90661C36.1438 9.80169 35.9668 9.72254 35.8618 9.58817C35.4857 9.10775 35.1244 8.61445 34.7742 8.11378C34.5825 7.83768 34.5456 7.55237 34.859 7.31308C35.1576 7.08484 35.3991 7.24498 35.5705 7.4677C35.9816 7.99782 36.3816 8.53898 36.7429 9.10407C37.0452 9.57713 36.6728 9.74095 36.2839 9.90845L36.2857 9.90661Z' fill='#8254C6'/>\r\n<path d='M25.4728 0.7639C25.8783 0.89827 26.5143 1.09891 27.141 1.32347C27.4452 1.43391 27.5484 1.69529 27.4562 1.99348C27.3585 2.31376 27.1152 2.38923 26.8074 2.28615C26.2028 2.08551 25.5982 1.8812 24.9899 1.69161C24.6783 1.59405 24.5198 1.40262 24.5917 1.08602C24.6673 0.752856 24.929 0.690273 25.4728 0.762059V0.7639Z' fill='#8254C6'/>\r\n<path d='M39.235 14.5027C39.3106 15.077 39.235 15.3366 38.8995 15.3992C38.5825 15.4581 38.3963 15.2887 38.3023 14.9776C38.1272 14.3978 37.9392 13.8199 37.7364 13.2492C37.6129 12.905 37.6571 12.64 38.024 12.5258C38.3299 12.4301 38.5733 12.559 38.6802 12.8627C38.9032 13.4904 39.106 14.1254 39.2332 14.5046L39.235 14.5027Z' fill='#8254C6'/>\r\n<path d='M30.7779 3.17883C31.412 3.59299 32.1604 4.00162 32.7152 4.66243C32.8867 4.86491 32.7613 5.08027 32.6046 5.22936C32.4037 5.41895 32.1309 5.40607 31.93 5.26065C31.4139 4.89068 30.918 4.48941 30.4258 4.08629C30.177 3.88198 30.201 3.60035 30.3134 3.33713C30.3761 3.19172 30.5125 3.11257 30.7779 3.17883Z' fill='#8254C6'/>\r\n<path d='M22.8314 19.2923C22.8424 16.4705 25.0452 14.2046 27.8415 14.1402C30.7226 14.0739 33.0894 16.1668 33.2258 18.9039C33.2461 19.3015 33.3198 19.793 32.765 19.8279C32.2673 19.8592 32.282 19.4119 32.2396 19.0328C31.989 16.789 30.247 15.1489 28.1032 15.1139C25.9742 15.079 24.1364 16.6785 23.8507 18.9039C23.6848 20.1887 24.1567 21.3042 25.0194 22.2576C25.2811 22.5466 25.7051 22.8411 25.2627 23.2424C24.8479 23.6197 24.5272 23.2295 24.2618 22.9461C23.3014 21.9208 22.789 20.7133 22.8314 19.2923Z' fill='#8254C6'/>\r\n<path d='M18.4958 15.482C17.1613 15.471 16.1511 14.8562 15.4193 13.7757C15.2129 13.4701 14.859 13.0707 15.3677 12.7523C15.8433 12.4541 16.0405 12.859 16.2802 13.2051C17.4875 14.9427 19.8285 14.9004 20.8516 13.1388C21.458 12.0952 21.2958 10.7625 20.4627 9.9213C19.6074 9.05802 18.2009 8.88315 17.1594 9.51267C17.0285 9.59182 16.9143 9.69674 16.7889 9.78325C16.5124 9.97284 16.223 10.0667 15.976 9.75932C15.7198 9.43904 15.9207 9.20159 16.1548 8.97151C17.0488 8.0843 18.7226 7.8358 20.0239 8.40089C21.611 9.09115 22.5438 10.8214 22.1972 12.4338C21.7898 14.3334 20.3723 15.5004 18.4958 15.4839V15.482Z' fill='#8254C6'/>\r\n<path d='M18.9935 27.2035C18.9899 28.7442 18.083 30.0492 16.6415 30.5922C15.27 31.1076 13.6571 30.7395 12.6747 29.6866C11.6682 28.608 11.4083 26.8998 12.059 25.5874C12.153 25.3978 12.2747 25.2193 12.3982 25.0444C12.6065 24.7517 12.87 24.4996 13.2369 24.7388C13.6184 24.9873 13.4599 25.3131 13.2553 25.6113C12.7392 26.3587 12.5475 27.152 12.8793 28.0374C13.2774 29.0994 14.2175 29.7989 15.3106 29.8155C16.3631 29.832 17.3456 29.1859 17.7659 28.1993C18.2065 27.1649 17.9687 26.0715 17.1263 25.269C16.9936 25.142 16.8424 25.0352 16.706 24.9119C16.4774 24.7039 16.376 24.4646 16.5991 24.1922C16.8147 23.9271 17.0581 23.9731 17.3346 24.1149C18.271 24.5897 18.9954 25.9206 18.9917 27.2017L18.9935 27.2035Z' fill='#8254C6'/>\r\n<path d='M13.6811 18.7695C13.6774 20.0746 12.6544 21.1164 11.3714 21.1238C10.1069 21.1311 9.03963 20.0672 9.02673 18.7879C9.01382 17.459 10.0903 16.3711 11.3954 16.395C12.6691 16.419 13.6829 17.4737 13.6793 18.7695H13.6811ZM11.3346 17.4663C10.612 17.481 10.0682 18.0351 10.0664 18.7566C10.0664 19.5187 10.6507 20.0948 11.3917 20.0617C12.0903 20.0304 12.6876 19.4432 12.7005 18.7769C12.7152 18.0774 12.0608 17.4516 11.3346 17.4663Z' fill='#8254C6'/>\r\n<path d='M24.4737 25.188C25.7825 25.188 26.7355 26.1286 26.7447 27.4281C26.752 28.724 25.8009 29.7124 24.5179 29.74C23.2534 29.7695 22.1438 28.6798 22.1603 27.4263C22.1751 26.1856 23.2073 25.188 24.4737 25.188ZM24.4645 28.7147C25.1281 28.7203 25.7696 28.0871 25.7603 27.4355C25.7511 26.7728 25.0967 26.1028 24.4461 26.1783C23.7437 26.2593 23.2608 26.6458 23.2276 27.4115C23.1963 28.111 23.7732 28.7074 24.4645 28.7129V28.7147Z' fill='#8254C6'/>\r\n<path d='M20.1788 20.1059C20.1696 21.0281 19.4728 21.711 18.5456 21.7091C17.6295 21.7091 16.7779 20.8385 16.8018 19.931C16.8239 19.0512 17.6498 18.2413 18.5309 18.2302C19.5539 18.2192 20.1917 18.9444 20.1788 20.1059ZM18.6138 19.307C18.1991 19.3107 17.9023 19.4727 17.8839 19.9329C17.8654 20.3783 18.1014 20.6194 18.5456 20.6286C18.9696 20.636 19.2921 20.3986 19.3106 20.0028C19.3272 19.6218 19.0875 19.3089 18.6156 19.3089L18.6138 19.307Z' fill='#8254C6'/>\r\n<path d='M25.9465 12.016C24.9622 12.0049 24.2968 11.3202 24.3078 10.328C24.317 9.39482 25.082 8.63829 25.9981 8.6567C26.9198 8.67511 27.6645 9.44636 27.6534 10.3741C27.6424 11.3239 26.9124 12.027 25.9465 12.016ZM26.6009 10.3354C26.5622 9.97832 26.3834 9.7335 25.976 9.72982C25.576 9.72614 25.3309 9.97279 25.3161 10.3299C25.2995 10.7367 25.5668 11.022 25.9926 11.0109C26.3742 11.0017 26.5751 10.7385 26.6009 10.3354Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_165_745'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            },
            {
              value: "chancroid",
              meaning: "\u0634\u0627\u0646\u06a9\u0631\u0648\u0626\u06cc\u062f",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_164_743)'>\r\n<path d='M29.3384 21.1765H33.1436C33.6293 22.5458 34.9369 23.5294 36.4707 23.5294C38.4168 23.5294 40.0001 21.9461 40.0001 20C40.0001 18.0538 38.4168 16.4706 36.4707 16.4706C34.9369 16.4706 33.6293 17.4542 33.1436 18.8235H29.3384C29.1234 17.1075 28.4446 15.5339 27.4318 14.2319L30.5194 11.1443C33.5538 12.9052 37.4106 10.7273 37.4106 7.1771C37.4106 4.64181 35.3588 2.58941 32.8229 2.58941C29.2914 2.58941 27.0832 6.42604 28.8557 9.48058L25.7681 12.5682C24.4661 11.5554 22.8925 10.8766 21.1765 10.6616V6.85648C22.5458 6.37083 23.5294 5.06314 23.5294 3.52941C23.5294 1.58329 21.9462 0 20 0C18.0538 0 16.4706 1.58329 16.4706 3.52941C16.4706 5.06314 17.4542 6.37083 18.8235 6.85648V10.6617C17.1075 10.8766 15.5339 11.5554 14.2319 12.5683L11.1443 9.48067C12.9168 6.42627 10.7087 2.58949 7.1771 2.58949C3.06941 2.58949 1.07318 7.56118 3.93318 10.4212C5.42432 11.9124 7.71208 12.1708 9.48058 11.1445L12.5682 14.2321C11.5554 15.534 10.8766 17.1077 10.6616 18.8237H6.85648C6.37083 17.4543 5.06314 16.4708 3.52941 16.4708C1.58329 16.4708 0 18.054 0 20.0002C0 21.9463 1.58329 23.5296 3.52941 23.5296C5.06314 23.5296 6.37083 22.546 6.85648 21.1767H10.6617C10.8766 22.8927 11.5554 24.4663 12.5683 25.7683L9.65342 28.6831C7.80094 27.5752 5.35984 27.8178 3.76596 29.4118C1.88062 31.2971 1.88047 34.3486 3.76596 36.2341C5.65129 38.1194 8.70275 38.1195 10.5883 36.2341C12.1822 34.6401 12.4248 32.1992 11.3171 30.3467L14.2319 27.4318C15.5339 28.4446 17.1075 29.1234 18.8235 29.3384V33.1436C17.4542 33.6293 16.4706 34.9369 16.4706 36.4707C16.4706 38.4168 18.0538 40.0001 20 40.0001C21.9462 40.0001 23.5294 38.4168 23.5294 36.4707C23.5294 34.9369 22.5458 33.6293 21.1765 33.1436V29.3384C22.8925 29.1235 24.4661 28.4447 25.7681 27.4318L28.6829 30.3467C26.7629 33.5576 29.0821 37.6471 32.8229 37.6471C34.1115 37.6471 35.3229 37.1453 36.2341 36.2341C38.1194 34.3488 38.1195 31.2973 36.2341 29.4118C34.6402 27.8178 32.1991 27.5752 30.3466 28.6829L27.4318 25.7681C28.4446 24.4661 29.1234 22.8925 29.3384 21.1765ZM36.4706 18.8235C37.1194 18.8235 37.6471 19.3513 37.6471 20C37.6471 20.6488 37.1194 21.1765 36.4706 21.1765C35.8218 21.1765 35.2941 20.6488 35.2941 20C35.2941 19.3513 35.8218 18.8235 36.4706 18.8235ZM32.8229 4.94235C34.0578 4.94235 35.0577 5.94181 35.0577 7.1771C35.0577 9.16167 32.6428 10.1571 31.2427 8.75725C29.8438 7.35812 30.8376 4.94235 32.8229 4.94235ZM20 2.35294C20.6488 2.35294 21.1765 2.88071 21.1765 3.52941C21.1765 4.17812 20.6488 4.70588 20 4.70588C19.3513 4.70588 18.8235 4.17812 18.8235 3.52941C18.8235 2.88071 19.3513 2.35294 20 2.35294ZM5.59687 8.75725C4.20212 7.36251 5.17906 4.94228 7.17702 4.94228C9.16292 4.94228 10.1557 7.35867 8.75717 8.75725C7.88588 9.62858 6.46816 9.6285 5.59687 8.75725ZM3.52941 21.1765C2.88071 21.1765 2.35294 20.6488 2.35294 20C2.35294 19.3513 2.88071 18.8235 3.52941 18.8235C4.17812 18.8235 4.70588 19.3513 4.70588 20C4.70588 20.6488 4.17812 21.1765 3.52941 21.1765ZM5.42973 34.5703C4.46408 33.6048 4.46384 32.0415 5.42973 31.0755C6.99459 29.5107 9.64825 30.6446 9.64825 32.8229C9.64825 35.0044 6.99161 36.1322 5.42973 34.5703ZM20 37.6471C19.3513 37.6471 18.8235 37.1194 18.8235 36.4706C18.8235 35.8218 19.3513 35.2941 20 35.2941C20.6488 35.2941 21.1765 35.8218 21.1765 36.4706C21.1765 37.1194 20.6488 37.6471 20 37.6471ZM20 27.0588C16.1078 27.0588 12.9412 23.8923 12.9412 20C12.9412 16.1078 16.1078 12.9412 20 12.9412C23.8923 12.9412 27.0588 16.1078 27.0588 20C27.0588 23.8923 23.8923 27.0588 20 27.0588ZM35.2941 32.8229C35.2941 34.1887 34.1888 35.2941 32.8229 35.2941C30.6309 35.2941 29.5248 32.6262 31.0755 31.0755C31.5423 30.6088 32.1628 30.3518 32.8229 30.3518C34.1888 30.3518 35.2941 31.4569 35.2941 32.8229Z' fill='#8254C6'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_164_743'>\r\n<rect width='40' height='40' fill='white'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
            }
          ],
          vaginal: [
            {
              value: "watery",
              meaning: "\u0622\u0628\u06a9\u06cc",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M15.0005 26.1784C19.9844 26.1784 22.7292 23.2502 22.7292 17.9343C22.7311 12.9562 15.6847 5.04208 15.3887 4.7082C15.3391 4.65647 15.2796 4.6153 15.2137 4.58718C15.1479 4.55905 15.077 4.54456 15.0053 4.54456C14.9337 4.54456 14.8628 4.55905 14.7969 4.58718C14.731 4.6153 14.6715 4.65647 14.6219 4.7082C14.3211 5.04208 7.27271 12.9562 7.27271 17.9343C7.27271 23.2511 10.0175 26.1784 15.0014 26.1784H15.0005ZM15.0005 5.83795C16.4757 7.56947 21.6975 13.9763 21.6975 17.9333C21.6975 21.2246 20.5328 25.1476 15.0005 25.1476C9.46816 25.1476 8.30346 21.2246 8.30346 17.9333C8.30346 13.9772 13.5262 7.56947 15.0005 5.83892V5.83795Z' fill='#8254C6'/>\r\n<path d='M29.4287 27.2093C32.3764 27.2093 34.0661 25.2429 34.0661 21.8119C34.0661 18.5905 29.979 14.1627 29.8063 13.9764C29.7569 13.9266 29.6982 13.8871 29.6334 13.8601C29.5687 13.8331 29.4993 13.8192 29.4292 13.8192C29.3591 13.8192 29.2896 13.8331 29.2249 13.8601C29.1602 13.8871 29.1015 13.9266 29.0521 13.9764C28.8784 14.1637 24.7922 18.5915 24.7922 21.8119C24.7913 25.2419 26.4811 27.2093 29.4287 27.2093ZM29.4287 15.1052C30.4226 16.2611 33.0354 19.5203 33.0354 21.8119C33.0354 24.7091 31.8222 26.1795 29.4287 26.1795C27.0353 26.1795 25.822 24.71 25.822 21.8119C25.822 19.5203 28.4348 16.2602 29.4287 15.1052Z' fill='#8254C6'/>\r\n<path d='M21.8301 25.3219C21.6991 25.4704 18.6097 28.9994 18.6097 31.3308C18.6097 33.9513 19.9249 35.4528 22.2164 35.4528C24.508 35.4528 25.8231 33.9504 25.8231 31.3308C25.8231 29.0014 22.7337 25.4704 22.6027 25.3219C22.553 25.2688 22.4928 25.2264 22.4261 25.1975C22.3593 25.1685 22.2873 25.1536 22.2145 25.1536C22.1417 25.1536 22.0697 25.1685 22.0029 25.1975C21.9361 25.2264 21.876 25.2688 21.8262 25.3219H21.8301ZM22.2184 34.423C20.5092 34.423 19.6424 33.3826 19.6424 31.3317C19.6424 29.9312 21.2546 27.6513 22.2184 26.4633C23.1831 27.6484 24.7943 29.9293 24.7943 31.3317C24.7933 33.3826 23.9256 34.423 22.2164 34.423H22.2184Z' fill='#8254C6'/>\r\n<path d='M13.9194 24.1147H13.9709C14.1025 24.1138 14.2289 24.0626 14.324 23.9716C14.4192 23.8806 14.4758 23.7566 14.4824 23.625C14.489 23.4935 14.445 23.3645 14.3594 23.2644C14.2739 23.1643 14.1532 23.1008 14.0223 23.0868C13.4901 23.0602 12.9697 22.9212 12.4951 22.6789C12.0205 22.4367 11.6025 22.0967 11.2688 21.6814C9.89832 19.8946 10.3525 17.0139 10.3564 16.9857C10.3737 16.8533 10.3389 16.7193 10.2594 16.612C10.1798 16.5046 10.0617 16.4324 9.92989 16.4105C9.79811 16.3886 9.66297 16.4188 9.55297 16.4946C9.44297 16.5704 9.36669 16.6859 9.34023 16.8169C9.31694 16.9527 8.80641 20.1586 10.4477 22.3045C10.8651 22.8349 11.3905 23.2705 11.989 23.5824C12.5876 23.8943 13.2456 24.0754 13.9194 24.1137V24.1147Z' fill='#8254C6'/>\r\n<path d='M28.9144 25.1514C29.8663 25.1381 30.774 24.7475 31.4379 24.0653C31.7212 23.7009 31.9189 23.2776 32.0165 22.8265C32.1141 22.3754 32.1091 21.9082 32.0018 21.4593C31.9758 21.3278 31.8996 21.2117 31.7894 21.1355C31.6791 21.0593 31.5435 21.029 31.4113 21.0511C31.2792 21.0732 31.1608 21.1459 31.0813 21.2538C31.0018 21.3617 30.9675 21.4964 30.9856 21.6291C31.0635 21.9297 31.0742 22.2437 31.017 22.5488C30.9598 22.8539 30.8361 23.1427 30.6547 23.3946C30.1885 23.8481 29.5675 24.1076 28.9173 24.1206C28.7806 24.1206 28.6496 24.1749 28.5529 24.2716C28.4563 24.3682 28.402 24.4993 28.402 24.636C28.402 24.7727 28.4563 24.9038 28.5529 25.0004C28.6496 25.0971 28.7806 25.1514 28.9173 25.1514H28.9144Z' fill='#8254C6'/>\r\n<path d='M21.931 32.416C21.8516 32.3839 21.7801 32.335 21.7215 32.2726C21.6629 32.2102 21.6185 32.1358 21.5915 32.0546C21.5644 31.9734 21.5553 31.8872 21.5649 31.8022C21.5744 31.7171 21.6023 31.6351 21.6466 31.5619C21.7077 31.4396 21.7178 31.2981 21.6746 31.1684C21.6313 31.0387 21.5384 30.9315 21.4161 30.8703C21.2938 30.8092 21.1523 30.7991 21.0226 30.8424C20.8929 30.8856 20.7857 30.9786 20.7245 31.1008C20.6197 31.2956 20.5559 31.5097 20.5369 31.73C20.5179 31.9503 20.5441 32.1722 20.6141 32.382C20.684 32.5918 20.796 32.7852 20.9434 32.9501C21.0907 33.115 21.2703 33.248 21.4709 33.3409C21.5932 33.4021 21.7347 33.4121 21.8644 33.3689C21.9941 33.3257 22.1013 33.2327 22.1625 33.1104C22.2236 32.9881 22.2336 32.8466 22.1904 32.7169C22.1472 32.5872 22.0542 32.48 21.9319 32.4189L21.931 32.416Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "egg",
              meaning: "\u062a\u062e\u0645 \u0645\u0631\u063a\u06cc",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M20.0655 33.6364C17.1916 33.6274 14.4352 32.495 12.3849 30.4811C10.3347 28.4672 9.15316 25.7314 9.09277 22.8582C9.32515 22.6698 9.61261 22.5624 9.91155 22.5522C10.1974 22.5599 10.4725 22.6633 10.6926 22.8459C10.7408 25.3196 11.765 27.6739 13.542 29.3955C15.319 31.1171 17.7045 32.0664 20.1785 32.0364C22.6525 32.0063 25.0143 30.9994 26.7489 29.2352C28.4835 27.4709 29.4503 25.0924 29.4385 22.6183C29.2634 19.2837 28.2776 16.0421 26.5666 13.1745C25.6544 11.6068 23.1933 7.96059 20.0655 7.96059C16.9377 7.96059 14.4757 11.6097 13.5606 13.1773C12.5822 14.872 11.8234 16.6844 11.3026 18.5707C11.012 18.7715 10.668 18.881 10.3148 18.8852C10.0736 18.8828 9.83502 18.8341 9.61218 18.7416C10.1658 16.5085 11.0305 14.3642 12.1809 12.3718C14.4351 8.49794 17.2352 6.36365 20.0655 6.36365C22.8958 6.36365 25.6921 8.49794 27.9464 12.3718C29.7946 15.4848 30.8556 19.0016 31.0373 22.6174C31.0403 25.5325 29.8868 28.3299 27.8299 30.3956C25.773 32.4614 22.9807 33.6269 20.0655 33.6364V33.6364ZM25.1472 17.7056C24.6259 17.7056 24.2028 17.0701 24.2028 16.2891C24.2028 15.5081 24.6269 14.8725 25.1472 14.8725C25.6676 14.8725 26.0916 15.5081 26.0916 16.2891C26.0916 17.0701 25.6657 17.7056 25.1472 17.7056ZM22.7863 13.9281C22.5061 13.9281 22.2322 13.845 21.9993 13.6894C21.7663 13.5337 21.5847 13.3125 21.4775 13.0537C21.3703 12.7948 21.3423 12.51 21.3969 12.2352C21.4516 11.9604 21.5865 11.708 21.7846 11.5099C21.9827 11.3118 22.2351 11.1769 22.5099 11.1222C22.7847 11.0675 23.0695 11.0956 23.3284 11.2028C23.5872 11.31 23.8085 11.4916 23.9641 11.7246C24.1198 11.9575 24.2028 12.2314 24.2028 12.5116C24.2018 12.8866 24.0522 13.2459 23.7866 13.5108C23.5211 13.7756 23.1613 13.9243 22.7863 13.9243V13.9281Z' fill='#8254C6'/>\r\n<path d='M10.0353 19.5836C10.2221 19.5836 10.4047 19.639 10.56 19.7428C10.7153 19.8465 10.8363 19.994 10.9078 20.1666C10.9793 20.3392 10.998 20.529 10.9616 20.7122C10.9251 20.8954 10.8352 21.0637 10.7031 21.1958C10.571 21.3278 10.4028 21.4178 10.2196 21.4542C10.0364 21.4907 9.84649 21.472 9.67392 21.4005C9.50136 21.329 9.35387 21.208 9.2501 21.0527C9.14633 20.8974 9.09094 20.7148 9.09094 20.528C9.09094 20.2775 9.19044 20.0373 9.36754 19.8602C9.54465 19.6831 9.78486 19.5836 10.0353 19.5836V19.5836Z' fill='#8254C6'/>\r\n</svg>\r\n"
            },
            {
              value: "spotting",
              meaning: "\u0644\u06a9\u0647\u200c\u0628\u06cc\u0646\u06cc",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M29.5356 24.4319C29.1328 24.1242 28.804 23.7304 28.573 23.2792C28.3421 22.8281 28.2149 22.331 28.2009 21.8243C28.2424 21.4476 28.3698 21.0854 28.5733 20.7657C28.7767 20.4459 29.0508 20.1771 29.3745 19.9799C29.6878 19.8087 29.9634 19.5763 30.185 19.2963C30.4065 19.0164 30.5695 18.6947 30.664 18.3505C30.7586 18.0062 30.7829 17.6464 30.7355 17.2926C30.688 16.9388 30.5698 16.5981 30.3879 16.2909C30.1052 15.7468 29.6257 15.3309 29.0471 15.1279C28.4685 14.9249 27.8343 14.9501 27.2736 15.1984C27.0224 15.3422 26.795 15.5241 26.5996 15.7376C26.2929 16.0921 25.8962 16.3575 25.4514 16.5058C25.2803 16.549 25.1022 16.5569 24.928 16.529C24.7538 16.5011 24.587 16.438 24.438 16.3436C24.3384 16.2862 24.2521 16.2084 24.1846 16.1153C24.1172 16.0222 24.0702 15.916 24.0468 15.8034C23.914 14.9714 24.5373 14.1941 25.198 13.3712C25.8801 12.5219 26.5865 11.6432 26.4263 10.6187C26.3153 9.91022 25.9516 9.26592 25.4024 8.80484C24.8532 8.34376 24.1557 8.09708 23.4387 8.11037C22.8507 8.10555 22.2833 8.3273 21.8544 8.7296C21.4255 9.13191 21.1679 9.68389 21.1351 10.271C20.974 11.7912 20.5402 12.8188 19.919 13.1614C19.6704 13.267 19.3996 13.3097 19.1305 13.2856C18.8615 13.2616 18.6025 13.1716 18.3765 13.0236C18.0167 12.811 17.6153 12.6784 17.1996 12.6347C16.784 12.591 16.3638 12.6372 15.9676 12.7702C15.6752 12.8948 15.4136 13.0816 15.2009 13.3178C14.9882 13.5539 14.8297 13.8336 14.7362 14.1373C14.6062 14.611 14.6167 15.1122 14.7664 15.5801C14.9161 16.0479 15.1986 16.4621 15.5794 16.7723C15.6899 16.8959 15.7933 17.0125 15.8733 17.1179C16.0551 17.389 16.1225 17.721 16.0608 18.0415C15.9991 18.362 15.8134 18.6453 15.544 18.8296C14.7616 19.4377 13.9224 18.9532 13.4036 18.2965C12.0121 16.5463 10.423 15.7153 9.15317 16.073C8.70258 16.2277 8.31001 16.5164 8.02801 16.9004C7.74601 17.2843 7.58803 17.7453 7.57523 18.2215C7.36646 19.9363 8.80758 20.6254 10.0784 21.2335C10.8708 21.5003 11.5639 22.0006 12.0668 22.6685C12.2999 23.1357 12.006 23.5806 11.4202 24.3914C10.873 24.9935 10.4741 25.7153 10.2554 26.499C10.0367 27.2828 10.0042 28.1068 10.1605 28.9053C10.3289 29.8273 10.7923 30.6698 11.4808 31.3058C12.1693 31.9419 13.0457 32.3371 13.9782 32.4321C14.1977 32.4593 14.4187 32.4728 14.64 32.4726C15.4618 32.5035 16.277 32.3145 17.0014 31.925C17.7258 31.5356 18.3331 30.9598 18.7606 30.2572C19.6464 28.5252 20.595 27.5807 21.5811 27.4489C22.932 27.2686 24.216 28.6732 24.9011 29.4282C24.972 29.5062 25.0389 29.5792 25.1038 29.6441C25.5569 30.1005 26.1244 30.4267 26.7468 30.5884C27.3693 30.7501 28.0238 30.7414 28.6417 30.5633C29.2283 30.44 29.7711 30.162 30.2138 29.7579C30.6565 29.3539 30.983 28.8387 31.1591 28.2658C31.5503 26.702 30.4923 25.3177 29.5356 24.4319ZM30.2916 28.0469C30.1542 28.4644 29.9079 28.8378 29.5782 29.1285C29.2485 29.4192 28.8472 29.6168 28.4157 29.7008C27.9526 29.8362 27.4617 29.846 26.9936 29.7292C26.5254 29.6123 26.0967 29.3731 25.7514 29.036C25.6926 28.9732 25.6288 28.9032 25.5598 28.8282C24.7623 27.9526 23.2776 26.323 21.4635 26.5662C20.1714 26.7395 18.9958 27.8442 17.9691 29.8518C17.5543 30.4788 16.9669 30.9724 16.2778 31.273C15.5887 31.5737 14.8274 31.6686 14.0856 31.5463C13.3372 31.4682 12.6344 31.1494 12.0826 30.6377C11.5309 30.126 11.1602 29.4491 11.026 28.7087C10.8994 28.0331 10.9345 27.3372 11.1282 26.6778C11.322 26.0183 11.6689 25.4141 12.1408 24.9143C12.7337 24.0934 13.3468 23.2442 12.8614 22.2723C12.285 21.4117 11.4412 20.7649 10.4605 20.4319C9.13695 19.7984 8.33228 19.3586 8.45693 18.331C8.46047 18.032 8.55087 17.7405 8.71714 17.492C8.8834 17.2435 9.11835 17.0487 9.39336 16.9314C9.50951 16.8992 9.62955 16.8831 9.75009 16.8838C10.3512 16.9915 10.9238 17.2218 11.432 17.5604C11.9403 17.899 12.3734 18.3386 12.7043 18.8519C12.9349 19.2544 13.2821 19.5775 13.7001 19.7787C14.1181 19.9798 14.5873 20.0496 15.0458 19.9787C15.5042 19.9078 15.9304 19.6996 16.2681 19.3815C16.6058 19.0635 16.8392 18.6506 16.9374 18.1972C17.0006 17.9173 17.0014 17.6269 16.9398 17.3467C16.8781 17.0665 16.7555 16.8032 16.5807 16.5757C16.4794 16.4429 16.3638 16.3142 16.2422 16.1774C15.6879 15.5572 15.3423 15.1001 15.5754 14.4343C15.6276 14.2502 15.7197 14.0799 15.8451 13.9354C15.9705 13.7909 16.1261 13.6758 16.301 13.5982C16.5806 13.5176 16.8739 13.4959 17.1623 13.5347C17.4506 13.5734 17.7278 13.6716 17.9762 13.8232C18.3289 14.041 18.7308 14.1665 19.1447 14.1879C19.5587 14.2094 19.9714 14.1261 20.3447 13.9458C21.2568 13.4452 21.8243 12.2412 22.0229 10.3683C22.033 9.99728 22.1895 9.64528 22.4581 9.38915C22.7268 9.13303 23.0858 8.99356 23.4569 9.00119C23.9582 8.99186 24.4459 9.16458 24.8296 9.48734C25.2133 9.81009 25.467 10.261 25.5436 10.7565C25.645 11.3929 25.0876 12.0841 24.5008 12.8148C23.7823 13.7086 22.9685 14.7221 23.1641 15.9443C23.2064 16.1806 23.2985 16.4052 23.4342 16.6032C23.57 16.8011 23.7463 16.9679 23.9515 17.0925C24.2059 17.2553 24.4912 17.3635 24.7894 17.4104C25.0877 17.4573 25.3925 17.4419 25.6845 17.3652C26.2774 17.1804 26.8089 16.8378 27.2219 16.374C27.3545 16.2287 27.5054 16.1013 27.6709 15.995C28.0304 15.8484 28.4324 15.8443 28.7948 15.9836C29.1573 16.123 29.453 16.3952 29.6217 16.7449C29.7434 16.9571 29.8206 17.1919 29.8486 17.4349C29.8765 17.6779 29.8546 17.924 29.7842 18.1583C29.7139 18.3926 29.5965 18.61 29.4393 18.7974C29.282 18.9848 29.0882 19.1382 28.8698 19.2481C28.4372 19.5221 28.0725 19.8908 27.8034 20.3264C27.5342 20.762 27.3676 21.2531 27.3162 21.7625C27.3106 22.4044 27.4541 23.0389 27.7355 23.6159C28.0169 24.193 28.4284 24.6967 28.9377 25.0876C30.0494 26.1213 30.5166 27.1449 30.2916 28.0469V28.0469Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.5'/>\r\n<path d='M11.0652 9.00629C10.9533 8.31112 10.719 7.64132 10.373 7.02804C10.0897 6.38763 9.63275 5.83934 9.05385 5.44529C8.47495 5.05124 7.79728 4.82717 7.09758 4.79846C6.65947 4.81432 6.2348 4.95389 5.87269 5.20103C5.51059 5.44817 5.22586 5.79278 5.05144 6.19499C4.83844 6.74484 4.78652 7.344 4.90175 7.9223C5.01698 8.5006 5.29459 9.03409 5.70207 9.46031C6.13463 10.0234 6.67751 10.4923 7.29751 10.8384C7.91751 11.1844 8.60159 11.4004 9.30791 11.473C9.3525 11.473 9.39676 11.473 9.44067 11.473C9.71283 11.4692 9.98006 11.3998 10.2197 11.2707C10.4593 11.1415 10.6641 10.9564 10.8169 10.7312C11.1005 10.2035 11.1884 9.59254 11.0652 9.00629V9.00629ZM10.0751 10.2346C9.99852 10.3443 9.89598 10.4334 9.77662 10.4939C9.65726 10.5544 9.52478 10.5843 9.39101 10.5812C8.80025 10.5202 8.22838 10.3382 7.71105 10.0465C7.19372 9.75477 6.74203 9.35963 6.38412 8.88569C6.08666 8.58561 5.88011 8.20754 5.7883 7.79511C5.69648 7.38268 5.72316 6.95269 5.86523 6.55476C5.97122 6.30474 6.14673 6.09039 6.37092 5.93715C6.59511 5.78392 6.85857 5.69824 7.13001 5.69029H7.20096C7.71608 5.76129 8.20503 5.96089 8.62268 6.27068C9.04034 6.58046 9.37323 6.99045 9.59066 7.46281C10.1075 8.37998 10.4227 9.71266 10.0751 10.2346Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.5'/>\r\n<path d='M18.0617 7.91857C17.8632 7.0861 17.3485 6.36355 16.6267 5.90384C16.4302 5.80133 16.2117 5.74857 15.9901 5.75016C15.7685 5.75175 15.5507 5.80765 15.3558 5.91296C15.0495 6.05731 14.7917 6.28725 14.6133 6.57499C14.4349 6.86274 14.3436 7.19598 14.3505 7.53447C14.3824 7.93971 14.5303 8.32718 14.7765 8.65064C15.0227 8.97411 15.3568 9.2199 15.7389 9.35867C16.0603 9.5113 16.4099 9.5955 16.7655 9.60595C17.0668 9.61439 17.3619 9.51924 17.6016 9.33638C17.8005 9.16465 17.9486 8.9417 18.0297 8.69174C18.1108 8.44178 18.1219 8.17438 18.0617 7.91857V7.91857ZM17.0483 8.62798C16.879 8.75973 16.5213 8.72932 16.0916 8.53677C15.8657 8.46265 15.6655 8.32615 15.514 8.14306C15.3624 7.95996 15.2658 7.73773 15.2352 7.50204C15.2353 7.33212 15.2851 7.16594 15.3783 7.02389C15.4716 6.88185 15.6043 6.77012 15.7602 6.70243C15.8311 6.66219 15.9112 6.64104 15.9927 6.64104C16.0743 6.64104 16.1544 6.66219 16.2253 6.70243C16.6908 7.03554 17.0275 7.51862 17.179 8.07058C17.2072 8.16674 17.2104 8.26852 17.1882 8.36626C17.1661 8.46399 17.1193 8.55443 17.0523 8.62899L17.0483 8.62798Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.5'/>\r\n<path d='M32.4833 9.41657C32.4579 9.23414 32.3895 9.06035 32.2838 8.90952C32.1781 8.75869 32.038 8.63514 31.8752 8.54906C31.483 8.36799 31.0425 8.31995 30.6205 8.41225C30.2328 8.50298 29.8763 8.6957 29.588 8.97045C29.2997 9.24521 29.09 9.59202 28.9808 9.97498C28.8071 10.3512 28.7272 10.7639 28.7478 11.1778C28.7685 11.5917 28.8891 11.9944 29.0993 12.3515C29.2 12.4754 29.3275 12.5748 29.4721 12.6422C29.6168 12.7096 29.7749 12.7433 29.9344 12.7407C30.0119 12.7406 30.0892 12.7338 30.1655 12.7204C30.8759 12.5259 31.4838 12.0644 31.862 11.4323C32.3092 10.8593 32.5303 10.1419 32.4833 9.41657V9.41657ZM30.0155 11.8428C29.8615 11.8701 29.8128 11.8154 29.7895 11.783C29.6867 11.5465 29.636 11.2907 29.6409 11.033C29.6458 10.7752 29.7061 10.5215 29.8179 10.2891C29.8776 10.0562 29.9958 9.84233 30.1612 9.66781C30.3267 9.4933 30.534 9.36392 30.7634 9.29192C31.5387 9.17031 31.5864 9.45508 31.6046 9.56251C31.5786 10.0528 31.4162 10.5261 31.1356 10.929C30.855 11.3319 30.4674 11.6484 30.0165 11.8428H30.0155Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.5'/>\r\n<path d='M34.8539 32.2159C34.5727 31.8597 34.2044 31.582 33.7846 31.4096C33.3647 31.2372 32.9076 31.176 32.4572 31.2318C32.1476 31.2775 31.8576 31.4108 31.6213 31.6158C31.385 31.8209 31.2123 32.0892 31.1235 32.3892C31.0001 32.9345 31.0805 33.506 31.3495 33.9961C31.6186 34.4861 32.0576 34.8608 32.5838 35.0495C32.8234 35.147 33.0792 35.1983 33.3379 35.2005C33.7154 35.1886 34.0811 35.0658 34.3894 34.8476C34.6977 34.6294 34.9351 34.3253 35.0719 33.9732C35.2044 33.6894 35.2542 33.374 35.2157 33.0632C35.1771 32.7524 35.0518 32.4587 34.8539 32.2159V32.2159ZM34.2651 33.5962C34.2233 33.7302 34.1538 33.854 34.0611 33.9595C33.9685 34.065 33.8548 34.1499 33.7273 34.2087C33.5998 34.2676 33.4614 34.299 33.321 34.301C33.1806 34.3031 33.0413 34.2756 32.9122 34.2205C32.5972 34.1141 32.3299 33.8999 32.1575 33.6156C31.9851 33.3314 31.9185 32.9954 31.9697 32.6669C32.0081 32.5212 32.0891 32.3903 32.2023 32.2908C32.3155 32.1914 32.4557 32.1279 32.6051 32.1085C32.6704 32.0976 32.7365 32.0922 32.8027 32.0923C33.0611 32.0993 33.3149 32.1619 33.5468 32.276C33.7787 32.39 33.9833 32.5527 34.1466 32.753C34.2465 32.8667 34.311 33.0071 34.3319 33.157C34.3528 33.3069 34.3292 33.4596 34.2641 33.5962H34.2651Z' fill='#8254C6' stroke='#8254C6' stroke-width='0.5'/>\r\n</svg>\r\n"
            },
            {
              value: "no_discharge",
              meaning: "\u0628\u062f\u0648\u0646 \u062a\u0631\u0634\u062d",
              icon: "<svg width='40' height='40' viewBox='0 0 40 40' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<path d='M20.0012 34.4463C27.9799 34.4463 34.4478 27.9783 34.4478 19.9996C34.4478 12.021 27.9799 5.55298 20.0012 5.55298C12.0225 5.55298 5.55457 12.021 5.55457 19.9996C5.55457 27.9783 12.0225 34.4463 20.0012 34.4463Z' stroke='#8254C6'/>\r\n<path d='M30.8231 9.34839L9.6853 30.4862' stroke='#8254C6'/>\r\n<path d='M9.6853 9.34854L30.8231 30.4863' stroke='#8254C6'/>\r\n</svg>\r\n"
            }
          ]
        })
      },
      {
        path: "befur.list",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) =>
          (() => {
            try {
              return $state.getSign.data.result.current || [];
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return [];
              }
              throw e;
            }
          })()
      },
      {
        path: "button.color",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "choices.selectOne",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "befur.selectOne",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "psychological.selectOne",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "vaginal.selectOne",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "womans.selectOne",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "hereditary.selectOne",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      },
      {
        path: "venereal.selectOne",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => false
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_6BytLjmha8VC()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <section className={classNames(projectcss.all, sty.section__gfKhl)}>
            {(
              hasVariant(globalVariants, "screen", "mobile")
                ? true
                : (() => {
                    try {
                      return true;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return true;
                      }
                      throw e;
                    }
                  })()
            ) ? (
              <HeaderLiom
                data-plasmic-name={"headerLiom"}
                data-plasmic-override={overrides.headerLiom}
                className={classNames("__wab_instance", sty.headerLiom)}
                slot={null}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__c3Bo6)}
                >
                  <PlasmicImg__
                    data-plasmic-name={"img"}
                    data-plasmic-override={overrides.img}
                    alt={""}
                    className={classNames(sty.img)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"20px"}
                    loading={"lazy"}
                    onClick={async event => {
                      const $steps = {};

                      $steps["runCode"] = true
                        ? (() => {
                            const actionArgs = {
                              customFunction: async () => {
                                return (() => {
                                  return window.history.back();
                                })();
                              }
                            };
                            return (({ customFunction }) => {
                              return customFunction();
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["runCode"] != null &&
                        typeof $steps["runCode"] === "object" &&
                        typeof $steps["runCode"].then === "function"
                      ) {
                        $steps["runCode"] = await $steps["runCode"];
                      }
                    }}
                    src={{
                      src: "/plasmic/liom_hamyar/images/image38.svg",
                      fullWidth: 24,
                      fullHeight: 24,
                      aspectRatio: 1
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__x2Cb7
                    )}
                  >
                    {
                      "\u0646\u0634\u0627\u0646\u0647 \u0647\u0627\u06cc \u0642\u0627\u0639\u062f\u06af\u06cc"
                    }
                  </div>
                </Stack__>
              </HeaderLiom>
            ) : null}
          </section>
          <AntdModal
            data-plasmic-name={"number2"}
            data-plasmic-override={overrides.number2}
            className={classNames("__wab_instance", sty.number2)}
            defaultStylesClassName={classNames(
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              plasmic_antd_5_hostless_css.plasmic_tokens,
              plasmic_plasmic_rich_components_css.plasmic_tokens
            )}
            hideFooter={true}
            modalContentClassName={classNames({
              [sty["pcls_ao7QOs5_RJOP"]]: true
            })}
            modalScopeClassName={sty["number2__modal"]}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["number2", "open"]).apply(
                null,
                eventArgs
              );
            }}
            open={generateStateValueProp($state, ["number2", "open"])}
            title={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dqZzs
                )}
              >
                {
                  "\u0644\u0637\u0641\u0627 \u0634\u0645\u0627\u0631\u0647 \u0645\u0648\u0628\u0627\u06cc\u0644 \u0647\u0645\u06cc\u0627\u0631 \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0631\u0648 \u0627\u06cc\u0646\u062c\u0627 \u0648\u0627\u0631\u062f \u06a9\u0646."
                }
              </div>
            }
            trigger={null}
            wrapClassName={classNames({ [sty["pcls_JlfQaey1dPY0"]]: true })}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qu0To)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__oryU9)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___1LAFe
                  )}
                >
                  {
                    "\u0634\u0645\u0627\u0631\u0647 \u0645\u0648\u0628\u0627\u06cc\u0644"
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    sty.freeBox__ww6Ak,
                    "negative"
                  )}
                >
                  <TextInput
                    data-plasmic-name={"textInput"}
                    data-plasmic-override={overrides.textInput}
                    antdInput2={(() => {
                      const child$Props = {
                        "aria-label": ``,
                        bordered: false,
                        className: classNames("__wab_instance", sty.antdInput),
                        id: "inputMobile1",
                        maxLength: (() => {
                          try {
                            return $state.number.startsWith("0") ? 11 : 10;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })(),
                        onChange: async (...eventArgs: any) => {
                          generateStateOnChangePropForCodeComponents(
                            $state,
                            "value",
                            ["antdInput", "value"],
                            Input_Helpers
                          ).apply(null, eventArgs);

                          (async event => {
                            const $steps = {};

                            $steps["updateNumber"] = true
                              ? (() => {
                                  const actionArgs = {
                                    variable: {
                                      objRoot: $state,
                                      variablePath: ["number"]
                                    },
                                    operation: 0,
                                    value: $state.antdInput.value
                                  };
                                  return (({
                                    variable,
                                    value,
                                    startIndex,
                                    deleteCount
                                  }) => {
                                    if (!variable) {
                                      return;
                                    }
                                    const { objRoot, variablePath } = variable;

                                    $stateSet(objRoot, variablePath, value);
                                    return value;
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["updateNumber"] != null &&
                              typeof $steps["updateNumber"] === "object" &&
                              typeof $steps["updateNumber"].then === "function"
                            ) {
                              $steps["updateNumber"] = await $steps[
                                "updateNumber"
                              ];
                            }
                          }).apply(null, eventArgs);
                        },
                        placeholder: "9123456789",
                        size: "large",
                        type: "tel",
                        value: generateStateValueProp($state, [
                          "antdInput",
                          "value"
                        ])
                      };
                      initializeCodeComponentStates(
                        $state,
                        [
                          {
                            name: "value",
                            plasmicStateName: "antdInput.value"
                          }
                        ],
                        [],
                        Input_Helpers ?? {},
                        child$Props
                      );

                      return (
                        <Input
                          data-plasmic-name={"antdInput"}
                          data-plasmic-override={overrides.antdInput}
                          {...child$Props}
                        />
                      );
                    })()}
                    className={classNames("__wab_instance", sty.textInput)}
                    endIcon={
                      <React.Fragment>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ouvg8
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bfrGn,
                            "negative"
                          )}
                        >
                          {"+98 "}
                        </div>
                        <Icon111Icon
                          className={classNames(projectcss.all, sty.svg__gY4Cq)}
                          role={"img"}
                        />
                      </React.Fragment>
                    }
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "textInput",
                          "value"
                        ])((e => e.target?.value).apply(null, eventArgs));
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }

                      (async event => {
                        const $steps = {};
                      }).apply(null, eventArgs);
                    }}
                    placeholder={"09123456789"}
                    required={false}
                    showEndIcon={true}
                    type={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "tel"
                        : "tel"
                    }
                    value={
                      generateStateValueProp($state, ["textInput", "value"]) ??
                      ""
                    }
                  />
                </div>
              </Stack__>
              <div className={classNames(projectcss.all, sty.freeBox__oi5JZ)}>
                <Button
                  data-plasmic-name={"button2"}
                  data-plasmic-override={overrides.button2}
                  className={classNames("__wab_instance", sty.button2)}
                  color={generateStateValueProp($state, ["button2", "color"])}
                  isDisabled={(() => {
                    try {
                      return $state.number.startsWith("0")
                        ? $state.number.length != 11
                        : $state.number.length != 10;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateNumber2Open"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["number2", "open"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateNumber2Open"] != null &&
                      typeof $steps["updateNumber2Open"] === "object" &&
                      typeof $steps["updateNumber2Open"].then === "function"
                    ) {
                      $steps["updateNumber2Open"] = await $steps[
                        "updateNumber2Open"
                      ];
                    }

                    $steps["updateName2Open"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["name2", "open"]
                            },
                            operation: 0,
                            value: true
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateName2Open"] != null &&
                      typeof $steps["updateName2Open"] === "object" &&
                      typeof $steps["updateName2Open"].then === "function"
                    ) {
                      $steps["updateName2Open"] = await $steps[
                        "updateName2Open"
                      ];
                    }
                  }}
                  onColorChange={async (...eventArgs: any) => {
                    ((...eventArgs) => {
                      generateStateOnChangeProp($state, ["button2", "color"])(
                        eventArgs[0]
                      );
                    }).apply(null, eventArgs);

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__l1Gr8
                    )}
                  >
                    {"\u062a\u0627\u06cc\u06cc\u062f"}
                  </div>
                </Button>
              </div>
            </Stack__>
          </AntdModal>
          <AntdModal
            data-plasmic-name={"name2"}
            data-plasmic-override={overrides.name2}
            className={classNames("__wab_instance", sty.name2)}
            defaultStylesClassName={classNames(
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              plasmic_antd_5_hostless_css.plasmic_tokens,
              plasmic_plasmic_rich_components_css.plasmic_tokens
            )}
            hideFooter={true}
            modalContentClassName={classNames({
              [sty["pcls_CxCtTV05gSu9"]]: true
            })}
            modalScopeClassName={sty["name2__modal"]}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["name2", "open"]).apply(
                null,
                eventArgs
              );
            }}
            open={generateStateValueProp($state, ["name2", "open"])}
            title={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wqVz
                )}
              >
                {
                  "\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0647\u0645\u06cc\u0627\u0631\u062a \u0631\u0648 \u0648\u0627\u0631\u062f \u06a9\u0646"
                }
              </div>
            }
            trigger={null}
            wrapClassName={classNames({ [sty["pcls_YeBO-M7kBn8Q"]]: true })}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__y9Y5V)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qvNlc)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dR19P
                  )}
                >
                  {
                    "\u0646\u0627\u0645 \u0647\u0645\u06cc\u0627\u0631 \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0631\u0648 \u0648\u0627\u0631\u062f \u06a9\u0646"
                  }
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    sty.freeBox__bqI6D,
                    "negative"
                  )}
                >
                  <TextInput
                    data-plasmic-name={"textInput2"}
                    data-plasmic-override={overrides.textInput2}
                    antdInput2={(() => {
                      const child$Props = {
                        "aria-label": ``,
                        bordered: false,
                        className: classNames("__wab_instance", sty.antdInput2),
                        id: "inputMobile1",
                        maxLength: (() => {
                          try {
                            return $state.number.startsWith("0") ? 11 : 10;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })(),
                        onChange: async (...eventArgs: any) => {
                          generateStateOnChangePropForCodeComponents(
                            $state,
                            "value",
                            ["antdInput2", "value"],
                            Input_Helpers
                          ).apply(null, eventArgs);

                          (async event => {
                            const $steps = {};

                            $steps["updateName"] = true
                              ? (() => {
                                  const actionArgs = {
                                    variable: {
                                      objRoot: $state,
                                      variablePath: ["name"]
                                    },
                                    operation: 0,
                                    value: $state.antdInput2.value
                                  };
                                  return (({
                                    variable,
                                    value,
                                    startIndex,
                                    deleteCount
                                  }) => {
                                    if (!variable) {
                                      return;
                                    }
                                    const { objRoot, variablePath } = variable;

                                    $stateSet(objRoot, variablePath, value);
                                    return value;
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["updateName"] != null &&
                              typeof $steps["updateName"] === "object" &&
                              typeof $steps["updateName"].then === "function"
                            ) {
                              $steps["updateName"] = await $steps["updateName"];
                            }
                          }).apply(null, eventArgs);
                        },
                        placeholder:
                          "\u0645\u062b\u0644\u0627 \u0639\u0644\u06cc\u060c \u0639\u0634\u0642\u0645\u060c \u0645\u0627\u0645\u0627\u0646 \u0632\u0647\u0631\u0647\u060c \u0628\u0627\u0628\u0627\u060c \u0645\u06cc\u0646\u0627\u060c ...",
                        size: "large",
                        type: "text",
                        value: generateStateValueProp($state, [
                          "antdInput2",
                          "value"
                        ])
                      };
                      initializeCodeComponentStates(
                        $state,
                        [
                          {
                            name: "value",
                            plasmicStateName: "antdInput2.value"
                          }
                        ],
                        [],
                        Input_Helpers ?? {},
                        child$Props
                      );

                      return (
                        <Input
                          data-plasmic-name={"antdInput2"}
                          data-plasmic-override={overrides.antdInput2}
                          {...child$Props}
                        />
                      );
                    })()}
                    className={classNames("__wab_instance", sty.textInput2)}
                    endIcon={null}
                    onChange={async (...eventArgs: any) => {
                      ((...eventArgs) => {
                        generateStateOnChangeProp($state, [
                          "textInput2",
                          "value"
                        ])((e => e.target?.value).apply(null, eventArgs));
                      }).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }

                      (async event => {
                        const $steps = {};
                      }).apply(null, eventArgs);
                    }}
                    placeholder={"09123456789"}
                    required={false}
                    type={
                      hasVariant(globalVariants, "screen", "mobile")
                        ? "tel"
                        : "text"
                    }
                    value={
                      generateStateValueProp($state, ["textInput2", "value"]) ??
                      ""
                    }
                  />
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ct3Gn)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kaEOk
                  )}
                >
                  {
                    "\u0686\u0647 \u0646\u0633\u0628\u062a\u06cc \u0628\u0627\u0647\u0645 \u062f\u0627\u0631\u06cc\u062f\u061f"
                  }
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gIp7X)}
                >
                  {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                    (() => {
                      try {
                        return [
                          {
                            type: "mother",
                            text: "مادر هستند"
                          },
                          {
                            type: "husband",
                            text: "همسر هستند"
                          }
                        ];
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  ).map((__plasmic_item_0, __plasmic_idx_0) => {
                    const currentItem = __plasmic_item_0;
                    const currentIndex = __plasmic_idx_0;
                    return (
                      <RadioGrop
                        data-plasmic-name={"radioGrop"}
                        data-plasmic-override={overrides.radioGrop}
                        className={classNames("__wab_instance", sty.radioGrop)}
                        disable={(() => {
                          try {
                            return (
                              $state.getSign.data.result.filter(
                                item => item.rel.relation == currentItem.type
                              ).length != 0
                            );
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return [];
                            }
                            throw e;
                          }
                        })()}
                        key={currentIndex}
                        onClick={async event => {
                          const $steps = {};

                          $steps["updateRelation"] =
                            $state.getSign.data.result.filter(
                              item => item.rel.relation == currentItem.type
                            ).length == 0
                              ? (() => {
                                  const actionArgs = {
                                    variable: {
                                      objRoot: $state,
                                      variablePath: ["relation"]
                                    },
                                    operation: 0,
                                    value: currentItem.type
                                  };
                                  return (({
                                    variable,
                                    value,
                                    startIndex,
                                    deleteCount
                                  }) => {
                                    if (!variable) {
                                      return;
                                    }
                                    const { objRoot, variablePath } = variable;

                                    $stateSet(objRoot, variablePath, value);
                                    return value;
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                          if (
                            $steps["updateRelation"] != null &&
                            typeof $steps["updateRelation"] === "object" &&
                            typeof $steps["updateRelation"].then === "function"
                          ) {
                            $steps["updateRelation"] = await $steps[
                              "updateRelation"
                            ];
                          }

                          $steps["invokeGlobalAction"] =
                            $state.getSign.data.result.filter(
                              item => item.rel.relation == currentItem.type
                            ).length != 0
                              ? (() => {
                                  const actionArgs = {
                                    args: [
                                      "error",
                                      (() => {
                                        try {
                                          return `فقط یک همیار با نسبت ${
                                            currentItem.text.split("هستند")[0]
                                          }میتونید اضافه کنید.`;
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return undefined;
                                          }
                                          throw e;
                                        }
                                      })(),
                                      "bottom-center"
                                    ]
                                  };
                                  return $globalActions[
                                    "Fragment.showToast"
                                  ]?.apply(null, [...actionArgs.args]);
                                })()
                              : undefined;
                          if (
                            $steps["invokeGlobalAction"] != null &&
                            typeof $steps["invokeGlobalAction"] === "object" &&
                            typeof $steps["invokeGlobalAction"].then ===
                              "function"
                          ) {
                            $steps["invokeGlobalAction"] = await $steps[
                              "invokeGlobalAction"
                            ];
                          }
                        }}
                        selectedLine={(() => {
                          try {
                            return currentItem.type == $state.relation;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return [];
                            }
                            throw e;
                          }
                        })()}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__f3O9G
                          )}
                        >
                          <React.Fragment>
                            {(() => {
                              try {
                                return currentItem.text;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return "\u0645\u0627\u062f\u0631 \u0647\u0633\u062a\u0646\u062f";
                                }
                                throw e;
                              }
                            })()}
                          </React.Fragment>
                        </div>
                      </RadioGrop>
                    );
                  })}
                </Stack__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.freeBox__o9Wqd)}>
                <Button
                  data-plasmic-name={"button3"}
                  data-plasmic-override={overrides.button3}
                  className={classNames("__wab_instance", sty.button3)}
                  color={generateStateValueProp($state, ["button3", "color"])}
                  isDisabled={(() => {
                    try {
                      return (
                        $state.name.length == 0 ||
                        $state.relation.length == 0 ||
                        $state.loadingBtn
                      );
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()}
                  loading={(() => {
                    try {
                      return $state.loadingBtn;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateLoadingBtn2"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["loadingBtn"]
                            },
                            operation: 0,
                            value: true
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateLoadingBtn2"] != null &&
                      typeof $steps["updateLoadingBtn2"] === "object" &&
                      typeof $steps["updateLoadingBtn2"].then === "function"
                    ) {
                      $steps["updateLoadingBtn2"] = await $steps[
                        "updateLoadingBtn2"
                      ];
                    }

                    $steps["invokeGlobalAction"] = true
                      ? (() => {
                          const actionArgs = {
                            args: [
                              "PUT",
                              "https://n8n.staas.ir/webhook/rest/user/hamyar/add",
                              undefined,
                              (() => {
                                try {
                                  return {
                                    authorization: $state.token,
                                    mobile: $state.number,
                                    name: $state.name,
                                    type: $state.type,
                                    relation: $state.relation
                                  };
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            ]
                          };
                          return $globalActions["Fragment.apiRequest"]?.apply(
                            null,
                            [...actionArgs.args]
                          );
                        })()
                      : undefined;
                    if (
                      $steps["invokeGlobalAction"] != null &&
                      typeof $steps["invokeGlobalAction"] === "object" &&
                      typeof $steps["invokeGlobalAction"].then === "function"
                    ) {
                      $steps["invokeGlobalAction"] = await $steps[
                        "invokeGlobalAction"
                      ];
                    }

                    $steps["invokeGlobalAction2"] =
                      $steps.invokeGlobalAction?.data?.success == true
                        ? (() => {
                            const actionArgs = {
                              args: [
                                "success",
                                "\u062f\u0631\u062e\u0648\u0627\u0633\u062a \u0634\u0645\u0627 \u0628\u0627 \u0645\u0648\u0641\u0642\u06cc\u062a \u062b\u0628\u062a \u0634\u062f.",
                                "bottom-center"
                              ]
                            };
                            return $globalActions["Fragment.showToast"]?.apply(
                              null,
                              [...actionArgs.args]
                            );
                          })()
                        : undefined;
                    if (
                      $steps["invokeGlobalAction2"] != null &&
                      typeof $steps["invokeGlobalAction2"] === "object" &&
                      typeof $steps["invokeGlobalAction2"].then === "function"
                    ) {
                      $steps["invokeGlobalAction2"] = await $steps[
                        "invokeGlobalAction2"
                      ];
                    }

                    $steps["updateMasseg"] =
                      $steps.invokeGlobalAction?.data?.success == true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["masseg"]
                              },
                              operation: 0,
                              value: $steps.invokeGlobalAction.data.result
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                    if (
                      $steps["updateMasseg"] != null &&
                      typeof $steps["updateMasseg"] === "object" &&
                      typeof $steps["updateMasseg"].then === "function"
                    ) {
                      $steps["updateMasseg"] = await $steps["updateMasseg"];
                    }

                    $steps["updateErrror"] =
                      $steps.invokeGlobalAction?.data?.success == false
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["errror"]
                              },
                              operation: 0,
                              value: $steps.invokeGlobalAction.data.error
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;

                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                    if (
                      $steps["updateErrror"] != null &&
                      typeof $steps["updateErrror"] === "object" &&
                      typeof $steps["updateErrror"].then === "function"
                    ) {
                      $steps["updateErrror"] = await $steps["updateErrror"];
                    }

                    $steps["invokeGlobalAction3"] =
                      $steps.invokeGlobalAction?.data?.success == false
                        ? (() => {
                            const actionArgs = {
                              args: [
                                "error",
                                (() => {
                                  try {
                                    return $state.errror.message;
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return undefined;
                                    }
                                    throw e;
                                  }
                                })(),
                                "bottom-center",
                                10000
                              ]
                            };
                            return $globalActions["Fragment.showToast"]?.apply(
                              null,
                              [...actionArgs.args]
                            );
                          })()
                        : undefined;
                    if (
                      $steps["invokeGlobalAction3"] != null &&
                      typeof $steps["invokeGlobalAction3"] === "object" &&
                      typeof $steps["invokeGlobalAction3"].then === "function"
                    ) {
                      $steps["invokeGlobalAction3"] = await $steps[
                        "invokeGlobalAction3"
                      ];
                    }

                    $steps["updateSmsOpen"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["sms", "open"]
                            },
                            operation: 0,
                            value: true
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateSmsOpen"] != null &&
                      typeof $steps["updateSmsOpen"] === "object" &&
                      typeof $steps["updateSmsOpen"].then === "function"
                    ) {
                      $steps["updateSmsOpen"] = await $steps["updateSmsOpen"];
                    }

                    $steps["updateName2Open"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["name2", "open"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateName2Open"] != null &&
                      typeof $steps["updateName2Open"] === "object" &&
                      typeof $steps["updateName2Open"].then === "function"
                    ) {
                      $steps["updateName2Open"] = await $steps[
                        "updateName2Open"
                      ];
                    }

                    $steps["updateV"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["v"]
                            },
                            operation: 0,
                            value: $state.v + "s"
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateV"] != null &&
                      typeof $steps["updateV"] === "object" &&
                      typeof $steps["updateV"].then === "function"
                    ) {
                      $steps["updateV"] = await $steps["updateV"];
                    }

                    $steps["updateLoadingBtn"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["loadingBtn"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateLoadingBtn"] != null &&
                      typeof $steps["updateLoadingBtn"] === "object" &&
                      typeof $steps["updateLoadingBtn"].then === "function"
                    ) {
                      $steps["updateLoadingBtn"] = await $steps[
                        "updateLoadingBtn"
                      ];
                    }
                  }}
                  onColorChange={async (...eventArgs: any) => {
                    ((...eventArgs) => {
                      generateStateOnChangeProp($state, ["button3", "color"])(
                        eventArgs[0]
                      );
                    }).apply(null, eventArgs);

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__yBh7N
                    )}
                  >
                    {"\u062a\u0627\u06cc\u06cc\u062f"}
                  </div>
                </Button>
              </div>
            </Stack__>
          </AntdModal>
          <AntdModal
            data-plasmic-name={"sms"}
            data-plasmic-override={overrides.sms}
            className={classNames("__wab_instance", sty.sms)}
            defaultStylesClassName={classNames(
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              plasmic_antd_5_hostless_css.plasmic_tokens,
              plasmic_plasmic_rich_components_css.plasmic_tokens
            )}
            hideFooter={true}
            modalContentClassName={classNames({
              [sty["pcls_nbNuFHCVb1nD"]]: true
            })}
            modalScopeClassName={sty["sms__modal"]}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["sms", "open"]).apply(
                null,
                eventArgs
              );
            }}
            open={generateStateValueProp($state, ["sms", "open"])}
            title={
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__m5Ama
                )}
              >
                <React.Fragment>
                  {(() => {
                    try {
                      return $state.masseg.title;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return "\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0647\u0645\u06cc\u0627\u0631\u062a \u0631\u0648 \u0648\u0627\u0631\u062f \u06a9\u0646";
                      }
                      throw e;
                    }
                  })()}
                </React.Fragment>
              </div>
            }
            trigger={null}
            wrapClassName={classNames({ [sty["pcls_t1MKwQ2yalEK"]]: true })}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___2JAat)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___3Zed0)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__npSf3
                  )}
                >
                  <React.Fragment>
                    {(() => {
                      try {
                        return $state.masseg.message;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return "";
                        }
                        throw e;
                      }
                    })()}
                  </React.Fragment>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hr2Zb)}
              >
                <Button
                  data-plasmic-name={"button4"}
                  data-plasmic-override={overrides.button4}
                  className={classNames("__wab_instance", sty.button4)}
                  color={generateStateValueProp($state, ["button4", "color"])}
                  onClick={async event => {
                    const $steps = {};

                    $steps["runCode"] = true
                      ? (() => {
                          const actionArgs = {
                            customFunction: async () => {
                              return (() => {
                                let shareText = $state.masseg.message;
                                if (navigator.share) {
                                  return navigator.share({
                                    title: "لیوم | تقویم قاعدگی",
                                    text: shareText
                                  });
                                } else {
                                  $$.copyToClipboard(shareText);
                                  return alert(
                                    "مرورگر شما از قابلیت اشتراک‌گذاری پشتیبانی نمی‌کند.\nمتن در کلیپ‌بورد کپی شد. حالا می‌توانید آن را در برنامه‌های دیگر به اشتراک بگذارید."
                                  );
                                }
                              })();
                            }
                          };
                          return (({ customFunction }) => {
                            return customFunction();
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["runCode"] != null &&
                      typeof $steps["runCode"] === "object" &&
                      typeof $steps["runCode"].then === "function"
                    ) {
                      $steps["runCode"] = await $steps["runCode"];
                    }
                  }}
                  onColorChange={async (...eventArgs: any) => {
                    ((...eventArgs) => {
                      generateStateOnChangeProp($state, ["button4", "color"])(
                        eventArgs[0]
                      );
                    }).apply(null, eventArgs);

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qhHG
                    )}
                  >
                    {
                      "\u0627\u0634\u062a\u0631\u0627\u06a9 \u06af\u0630\u0627\u0631\u06cc"
                    }
                  </div>
                </Button>
                <Button
                  data-plasmic-name={"button5"}
                  data-plasmic-override={overrides.button5}
                  className={classNames("__wab_instance", sty.button5)}
                  color={generateStateValueProp($state, ["button5", "color"])}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateName2Open"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["sms", "open"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateName2Open"] != null &&
                      typeof $steps["updateName2Open"] === "object" &&
                      typeof $steps["updateName2Open"].then === "function"
                    ) {
                      $steps["updateName2Open"] = await $steps[
                        "updateName2Open"
                      ];
                    }

                    $steps["invokeGlobalAction"] = true
                      ? (() => {
                          const actionArgs = {
                            args: [
                              "POST",
                              "https://n8n.staas.ir/webhook/rest/user/hamyar/add",
                              undefined,
                              (() => {
                                try {
                                  return {
                                    authorization: $state.token,
                                    id: $state.masseg.id
                                  };
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            ]
                          };
                          return $globalActions["Fragment.apiRequest"]?.apply(
                            null,
                            [...actionArgs.args]
                          );
                        })()
                      : undefined;
                    if (
                      $steps["invokeGlobalAction"] != null &&
                      typeof $steps["invokeGlobalAction"] === "object" &&
                      typeof $steps["invokeGlobalAction"].then === "function"
                    ) {
                      $steps["invokeGlobalAction"] = await $steps[
                        "invokeGlobalAction"
                      ];
                    }

                    $steps["invokeGlobalAction2"] =
                      $steps.invokeGlobalAction?.data?.success == true
                        ? (() => {
                            const actionArgs = {
                              args: [
                                "success",
                                "\u067e\u06cc\u0627\u0645\u06a9 \u0628\u0627 \u0645\u0648\u0641\u0642\u06cc\u062a \u0628\u0647 \u0647\u0645\u06cc\u0627\u0631\u062a \u0627\u0631\u0633\u0627\u0644 \u0634\u062f.",
                                "bottom-center"
                              ]
                            };
                            return $globalActions["Fragment.showToast"]?.apply(
                              null,
                              [...actionArgs.args]
                            );
                          })()
                        : undefined;
                    if (
                      $steps["invokeGlobalAction2"] != null &&
                      typeof $steps["invokeGlobalAction2"] === "object" &&
                      typeof $steps["invokeGlobalAction2"].then === "function"
                    ) {
                      $steps["invokeGlobalAction2"] = await $steps[
                        "invokeGlobalAction2"
                      ];
                    }
                  }}
                  onColorChange={async (...eventArgs: any) => {
                    ((...eventArgs) => {
                      generateStateOnChangeProp($state, ["button5", "color"])(
                        eventArgs[0]
                      );
                    }).apply(null, eventArgs);

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  size={"compact"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v1Ufe
                    )}
                  >
                    {
                      "\u0644\u06cc\u0646\u06a9 \u062f\u0639\u0648\u062a \u062a\u0648\u0633\u0637 \u0644\u06cc\u0648\u0645 \u0628\u0631\u0627\u06cc \u0647\u0645\u06cc\u0627\u0631\u0645 \u0627\u0631\u0633\u0627\u0644 \u0634\u0648\u062f  >"
                    }
                  </div>
                </Button>
              </Stack__>
            </Stack__>
          </AntdModal>
          <AntdModal
            data-plasmic-name={"remove"}
            data-plasmic-override={overrides.remove}
            className={classNames("__wab_instance", sty.remove)}
            defaultStylesClassName={classNames(
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              projectcss.plasmic_tokens,
              plasmic_antd_5_hostless_css.plasmic_tokens,
              plasmic_plasmic_rich_components_css.plasmic_tokens
            )}
            hideFooter={true}
            modalContentClassName={classNames({
              [sty["pcls_kqv2vR_fwH0t"]]: true,
              [sty["pcls_u5d5-MTXLWUJ"]]: hasVariant(
                globalVariants,
                "screen",
                "mobile"
              )
            })}
            modalScopeClassName={sty["remove__modal"]}
            onOpenChange={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["remove", "open"]).apply(
                null,
                eventArgs
              );
            }}
            open={generateStateValueProp($state, ["remove", "open"])}
            title={
              <div className={classNames(projectcss.all, sty.freeBox__xdV6W)}>
                <Icon157Icon
                  className={classNames(projectcss.all, sty.svg__njG8A)}
                  role={"img"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zNKb
                  )}
                >
                  {"\u062d\u0630\u0641 \u0647\u0645\u06cc\u0627\u0631"}
                </div>
              </div>
            }
            trigger={null}
            wrapClassName={classNames({ [sty["pcls_NidDut_xRTGH"]]: true })}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__nKVlH)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xFlfv
                )}
              >
                {
                  "\u0628\u0627 \u062d\u0630\u0641 \u0647\u0645\u06cc\u0627\u0631\u060c \u062f\u06cc\u06af\u0647 \u067e\u06cc\u0627\u0645\u06a9\u06cc \u0628\u0631\u0627\u0634 \u0627\u0631\u0633\u0627\u0644 \u0646\u0645\u06cc\u0634\u0647. \u0627\u0632 \u0627\u0646\u062c\u0627\u0645 \u0627\u06cc\u0646\u06a9\u0627\u0631 \u0645\u0637\u0645\u0626\u0646\u06cc \u061f"
                }
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__nx3Qz)}
              >
                <Button
                  data-plasmic-name={"removeBtn"}
                  data-plasmic-override={overrides.removeBtn}
                  className={classNames("__wab_instance", sty.removeBtn)}
                  color={generateStateValueProp($state, ["removeBtn", "color"])}
                  isDisabled={(() => {
                    try {
                      return $state.loadingBtn;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()}
                  loading={(() => {
                    try {
                      return $state.loadingBtn;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateLoadingBtn"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["loadingBtn"]
                            },
                            operation: 0,
                            value: true
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateLoadingBtn"] != null &&
                      typeof $steps["updateLoadingBtn"] === "object" &&
                      typeof $steps["updateLoadingBtn"].then === "function"
                    ) {
                      $steps["updateLoadingBtn"] = await $steps[
                        "updateLoadingBtn"
                      ];
                    }

                    $steps["invokeGlobalAction"] = true
                      ? (() => {
                          const actionArgs = {
                            args: [
                              "PATCH",
                              "https://n8n.staas.ir/webhook/rest/user/hamyar/add",
                              undefined,
                              (() => {
                                try {
                                  return {
                                    id: $state.removeItem.hamyar.id,
                                    type: $state.type,
                                    hamyarType: "myHamyar",
                                    authorization: $state.token
                                  };
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()
                            ]
                          };
                          return $globalActions["Fragment.apiRequest"]?.apply(
                            null,
                            [...actionArgs.args]
                          );
                        })()
                      : undefined;
                    if (
                      $steps["invokeGlobalAction"] != null &&
                      typeof $steps["invokeGlobalAction"] === "object" &&
                      typeof $steps["invokeGlobalAction"].then === "function"
                    ) {
                      $steps["invokeGlobalAction"] = await $steps[
                        "invokeGlobalAction"
                      ];
                    }

                    $steps["updateV"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["v"]
                            },
                            operation: 0,
                            value: $state.v + "s"
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateV"] != null &&
                      typeof $steps["updateV"] === "object" &&
                      typeof $steps["updateV"].then === "function"
                    ) {
                      $steps["updateV"] = await $steps["updateV"];
                    }

                    $steps["updateRemoveOpen"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["remove", "open"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateRemoveOpen"] != null &&
                      typeof $steps["updateRemoveOpen"] === "object" &&
                      typeof $steps["updateRemoveOpen"].then === "function"
                    ) {
                      $steps["updateRemoveOpen"] = await $steps[
                        "updateRemoveOpen"
                      ];
                    }

                    $steps["updateLoadingBtn2"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["loadingBtn"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateLoadingBtn2"] != null &&
                      typeof $steps["updateLoadingBtn2"] === "object" &&
                      typeof $steps["updateLoadingBtn2"].then === "function"
                    ) {
                      $steps["updateLoadingBtn2"] = await $steps[
                        "updateLoadingBtn2"
                      ];
                    }
                  }}
                  onColorChange={async (...eventArgs: any) => {
                    ((...eventArgs) => {
                      generateStateOnChangeProp($state, ["removeBtn", "color"])(
                        eventArgs[0]
                      );
                    }).apply(null, eventArgs);

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  size={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "minimal"
                      : undefined
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cUvxz
                    )}
                  >
                    {"\u062d\u0630\u0641"}
                  </div>
                </Button>
                <Button
                  data-plasmic-name={"button9"}
                  data-plasmic-override={overrides.button9}
                  className={classNames("__wab_instance", sty.button9)}
                  color={generateStateValueProp($state, ["button9", "color"])}
                  onClick={async event => {
                    const $steps = {};

                    $steps["updateName2Open"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["remove", "open"]
                            },
                            operation: 0,
                            value: false
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;

                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateName2Open"] != null &&
                      typeof $steps["updateName2Open"] === "object" &&
                      typeof $steps["updateName2Open"].then === "function"
                    ) {
                      $steps["updateName2Open"] = await $steps[
                        "updateName2Open"
                      ];
                    }
                  }}
                  onColorChange={async (...eventArgs: any) => {
                    ((...eventArgs) => {
                      generateStateOnChangeProp($state, ["button9", "color"])(
                        eventArgs[0]
                      );
                    }).apply(null, eventArgs);

                    if (
                      eventArgs.length > 1 &&
                      eventArgs[1] &&
                      eventArgs[1]._plasmic_state_init_
                    ) {
                      return;
                    }
                  }}
                  size={
                    hasVariant(globalVariants, "screen", "mobile")
                      ? "compact"
                      : "compact"
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uiNoe
                    )}
                  >
                    {"\u0641\u0639\u0644\u0627 \u0646\u0647"}
                  </div>
                </Button>
              </Stack__>
            </Stack__>
          </AntdModal>
          <ApiRequest
            data-plasmic-name={"getSign"}
            data-plasmic-override={overrides.getSign}
            className={classNames("__wab_instance", sty.getSign)}
            errorDisplay={null}
            loadingDisplay={
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__uepml)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jmVgt)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      sty.freeBox__yirzt,
                      "shimmer"
                    )}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      sty.freeBox__pb0Hk,
                      "shimmer"
                    )}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jPm69)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__qbDUl,
                        "shimmer"
                      )}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__fee2D)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__bkrbL,
                          "shimmer"
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gMDxb,
                          "shimmer"
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jUKk,
                          "shimmer"
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__xBgUl,
                          "shimmer"
                        )}
                      />
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__feKFp)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___03Cgv,
                        "shimmer"
                      )}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__r8FCs)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___99Ida,
                          "shimmer"
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__i8Tu4,
                          "shimmer"
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__fzlVn,
                          "shimmer"
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__jkXv,
                          "shimmer"
                        )}
                      />
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___1Vm2J)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox__pDfyk,
                        "shimmer"
                      )}
                    />

                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__skeav)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__iP7Yc,
                          "shimmer"
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2CZmn,
                          "shimmer"
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ml7Rg,
                          "shimmer"
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aQrIj,
                          "shimmer"
                        )}
                      />
                    </Stack__>
                  </Stack__>
                </Stack__>
              </Stack__>
            }
            method={"GET"}
            onError={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["getSign", "error"]).apply(
                null,
                eventArgs
              );
            }}
            onLoading={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["getSign", "loading"]).apply(
                null,
                eventArgs
              );
            }}
            onSuccess={async (...eventArgs: any) => {
              generateStateOnChangeProp($state, ["getSign", "data"]).apply(
                null,
                eventArgs
              );
            }}
            params={(() => {
              try {
                return {
                  authorization: $state.token
                };
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return undefined;
                }
                throw e;
              }
            })()}
            url={"https://n8n.staas.ir/webhook/calendar/getSign"}
          >
            {(() => {
              try {
                return $state.getSign.data?.success == true;
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return true;
                }
                throw e;
              }
            })() ? (
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__pomKc)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__zU9PX)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__eb4Iq
                    )}
                  >
                    {
                      "\u062a\u0648\u06cc \u062f\u0648\u0631\u0647 \u0642\u0627\u0639\u062f\u06af\u06cc \u0686\u0647 \u0639\u0644\u0627\u0626\u0645\u06cc \u062f\u0627\u0631\u06cc\u061f"
                    }
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__drBiI
                    )}
                  >
                    {
                      "\u0639\u0644\u0627\u0626\u0645\u062a \u0631\u0648 \u0628\u0627 \u0645\u0627 \u062f\u0631 \u0645\u06cc\u0648\u0646 \u0628\u0630\u0627\u0631 \u062a\u0627 \u062a\u0648\u06cc \u062f\u0648\u0631\u0647 \u0627\u062a \u0628\u0647\u062a \u062a\u0648\u0635\u06cc\u0647 \u06a9\u0646\u06cc\u0645 \u06a9\u0647 \u0628\u0627 \u0634\u0627\u062f\u06cc \u0648 \u062d\u0627\u0644 \u062e\u0648\u0628 \u0642\u0627\u0639\u062f\u06af\u06cc\u062a \u0631\u0648 \u0628\u06af\u0630\u0631\u0648\u0646\u06cc"
                    }
                  </div>
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"selectionBox"}
                  data-plasmic-override={overrides.selectionBox}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.selectionBox)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bk4X
                    )}
                  >
                    {
                      "\u0642\u0628\u0644 \u067e\u0631\u06cc\u0648\u062f \u0686\u0647 \u0639\u0644\u0627\u0626\u0645\u06cc \u062f\u0627\u0631\u06cc\u061f"
                    }
                  </div>
                  <Choices
                    data-plasmic-name={"choices"}
                    data-plasmic-override={overrides.choices}
                    beforList={(() => {
                      try {
                        return $state.signs.before;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [
                            {
                              title: "\u0633\u0631\u062f\u0631\u062f",
                              selected: false
                            },
                            { title: "\u062f\u0644 \u062f\u0631\u062f" },
                            {
                              title:
                                "\u062f\u0631\u062f \u0633\u06cc\u0646\u0647"
                            },
                            { title: "\u06a9\u0648\u0641\u062a\u06af\u06cc" },
                            { title: "\u06a9\u0645\u0631\u062f\u0631\u062f" },
                            { title: "\u062f\u0631\u062f \u067e\u0627" },
                            {
                              title:
                                "\u062d\u0627\u0644\u062a \u062a\u0647\u0648\u0639"
                            }
                          ];
                        }
                        throw e;
                      }
                    })()}
                    className={classNames("__wab_instance", sty.choices)}
                    list={generateStateValueProp($state, ["choices", "list"])}
                    onListChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "choices",
                        "list"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    onSelectOneChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "choices",
                        "selectOne"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    selectOne={generateStateValueProp($state, [
                      "choices",
                      "selectOne"
                    ])}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"selectionBox2"}
                  data-plasmic-override={overrides.selectionBox2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.selectionBox2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___8I9Td
                    )}
                  >
                    {
                      "\u0648\u0642\u062a\u06cc \u067e\u0631\u06cc\u0648\u062f\u06cc \u0686\u0647 \u0639\u0644\u0627\u0626\u0645\u06cc \u062f\u0627\u0631\u06cc\u061f"
                    }
                  </div>
                  <Choices
                    data-plasmic-name={"befur"}
                    data-plasmic-override={overrides.befur}
                    beforList={(() => {
                      try {
                        return $state.signs.current;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [
                            {
                              title: "\u0633\u0631\u062f\u0631\u062f",
                              selected: false
                            },
                            { title: "\u062f\u0644 \u062f\u0631\u062f" },
                            {
                              title:
                                "\u062f\u0631\u062f \u0633\u06cc\u0646\u0647"
                            },
                            { title: "\u06a9\u0648\u0641\u062a\u06af\u06cc" },
                            { title: "\u06a9\u0645\u0631\u062f\u0631\u062f" },
                            { title: "\u062f\u0631\u062f \u067e\u0627" },
                            {
                              title:
                                "\u062d\u0627\u0644\u062a \u062a\u0647\u0648\u0639"
                            }
                          ];
                        }
                        throw e;
                      }
                    })()}
                    className={classNames("__wab_instance", sty.befur)}
                    list={generateStateValueProp($state, ["befur", "list"])}
                    onListChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "befur",
                        "list"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    onSelectOneChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "befur",
                        "selectOne"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    selectOne={generateStateValueProp($state, [
                      "befur",
                      "selectOne"
                    ])}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"selectionBox3"}
                  data-plasmic-override={overrides.selectionBox3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.selectionBox3)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__behMa
                    )}
                  >
                    {
                      "\u0686\u0647 \u0646\u0634\u0627\u0646\u0647 \u0647\u0627\u06cc \u0631\u0648\u0627\u0646\u06cc \u062f\u0627\u0631\u06cc\u061f"
                    }
                  </div>
                  <Choices
                    data-plasmic-name={"psychological"}
                    data-plasmic-override={overrides.psychological}
                    beforList={(() => {
                      try {
                        return $state.signs.psychological;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [
                            {
                              value: "headache",
                              meaning: "\u0633\u0631\u062f\u0631\u062f",
                              icon: "<svg width='35' height='35' viewBox='0 0 35 35' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_16159_32828)'>\r\n<path d='M4.98039 9.10027H4.91003C4.82972 9.08719 4.75405 9.0539 4.69015 9.00352L1.17217 6.2435C1.11967 6.20828 1.07462 6.16306 1.0396 6.11042C1.00458 6.05778 0.980266 5.99876 0.968053 5.93673C0.95584 5.8747 0.955964 5.81087 0.968419 5.74889C0.980874 5.68691 1.00542 5.62799 1.04064 5.57549C1.07587 5.52299 1.12109 5.47794 1.17373 5.44292C1.22636 5.4079 1.28538 5.38359 1.34741 5.37137C1.40944 5.35916 1.47327 5.35928 1.53526 5.37174C1.59724 5.38419 1.65616 5.40874 1.70866 5.44396H1.76143L4.61979 7.68508L4.84846 6.05001C4.86447 5.93542 4.92135 5.83048 5.00862 5.75452C5.0959 5.67856 5.20769 5.6367 5.3234 5.63665H5.39375C5.47324 5.64713 5.54883 5.67737 5.61362 5.7246L8.83978 8.22077C8.89784 8.25377 8.9483 8.29864 8.98785 8.35246C9.0274 8.40628 9.05514 8.46783 9.06929 8.5331C9.08343 8.59838 9.08365 8.6659 9.06993 8.73126C9.05621 8.79662 9.02885 8.85835 8.98966 8.91243C8.95046 8.9665 8.9003 9.0117 8.84245 9.04507C8.7846 9.07845 8.72036 9.09924 8.65392 9.1061C8.58749 9.11297 8.52035 9.10574 8.4569 9.08489C8.39345 9.06405 8.33512 9.03006 8.2857 8.98513L5.64721 7.05104L5.40734 8.71249C5.3875 8.81514 5.33465 8.9085 5.25686 8.97836C5.17906 9.04821 5.08058 9.09074 4.97639 9.09947L4.98039 9.10027Z' fill='#8254C6'/>\r\n<path d='M11.0898 6.07609C11.0094 6.07631 10.9301 6.05629 10.8594 6.01787C10.7887 5.97945 10.7288 5.92386 10.6853 5.85622L9.75378 4.39706L9.39318 5.03669C9.3525 5.11344 9.29174 5.1777 9.21739 5.22262C9.14304 5.26754 9.05789 5.29144 8.97102 5.29174C8.88699 5.29281 8.80409 5.27236 8.7302 5.23233C8.6563 5.19231 8.59388 5.13404 8.54887 5.06308L7.13368 2.68124C7.08823 2.62737 7.05486 2.56437 7.03584 2.4965C7.01682 2.42863 7.0126 2.35747 7.02345 2.28783C7.03429 2.21819 7.05995 2.15168 7.09871 2.09281C7.13746 2.03394 7.1884 1.98407 7.24808 1.94657C7.30777 1.90907 7.37479 1.88482 7.44465 1.87546C7.51451 1.86609 7.58557 1.87184 7.65302 1.89229C7.72047 1.91274 7.78275 1.94744 7.83564 1.99402C7.88853 2.04061 7.9308 2.09801 7.9596 2.16233L8.97023 3.82378L9.32203 3.19934C9.36446 3.12757 9.42486 3.0681 9.49727 3.02678C9.56969 2.98547 9.65162 2.96374 9.73499 2.96374C9.81836 2.96374 9.90029 2.98547 9.97271 3.02678C10.0451 3.0681 10.1055 3.12757 10.148 3.19934L11.528 5.34371C11.5626 5.39723 11.5863 5.45713 11.5976 5.51991C11.6088 5.58268 11.6075 5.64707 11.5935 5.70931C11.5796 5.77155 11.5534 5.83039 11.5165 5.88238C11.4796 5.93438 11.4326 5.97849 11.3784 6.01213L11.2817 6.0649C11.2185 6.08096 11.1526 6.08395 11.0882 6.0737L11.0898 6.07609Z' fill='#8254C6'/>\r\n<path d='M7.54056 1.9894C7.61081 1.9891 7.67998 2.00671 7.74153 2.04057C7.80309 2.07442 7.855 2.12341 7.89236 2.18289L8.83262 3.7388L8.95575 3.94109L9.07009 3.73001L9.34273 3.2111C9.37929 3.14928 9.43134 3.09805 9.49373 3.06247C9.55612 3.02688 9.6267 3.00816 9.69853 3.00816C9.77035 3.00816 9.84094 3.02688 9.90333 3.06247C9.96572 3.09805 10.0178 3.14928 10.0543 3.2111L11.4343 5.35548C11.4638 5.40109 11.484 5.45207 11.4938 5.50549C11.5035 5.55891 11.5027 5.61374 11.4912 5.66683C11.4798 5.71992 11.458 5.77023 11.4271 5.8149C11.3962 5.85957 11.3568 5.89771 11.3112 5.92715H11.2233V6.03269V5.93594C11.1344 5.9687 11.0371 5.96997 10.9474 5.93956C10.8578 5.90914 10.7813 5.84888 10.7307 5.76884L9.85124 4.40962L9.72811 4.21613L9.61378 4.41841L9.30596 4.97249C9.26877 5.0362 9.21553 5.08905 9.15156 5.12578C9.0876 5.16251 9.01512 5.18184 8.94136 5.18184C8.86759 5.18184 8.79512 5.16251 8.73115 5.12578C8.66718 5.08905 8.61396 5.0362 8.57677 4.97249L7.16158 2.58186C7.12221 2.51919 7.10038 2.44709 7.09839 2.3731C7.0964 2.29911 7.11432 2.22594 7.15027 2.16124C7.18621 2.09654 7.23887 2.04267 7.30275 2.00527C7.36662 1.96787 7.43936 1.94831 7.51338 1.94863M7.51338 1.80791C7.40973 1.80456 7.30721 1.83037 7.2175 1.8824C7.12779 1.93443 7.05448 2.0106 7.00592 2.10223C6.95735 2.19386 6.93548 2.29728 6.94278 2.40073C6.95009 2.50418 6.98628 2.60351 7.04724 2.6874L8.49762 5.08603C8.54638 5.16873 8.61578 5.23733 8.69904 5.28513C8.7823 5.33292 8.87654 5.35827 8.97254 5.35867C9.06935 5.3591 9.16459 5.33415 9.24876 5.28632C9.33293 5.23848 9.4031 5.16943 9.45227 5.08603L9.76009 4.53195L10.6396 5.89117C10.7083 5.99956 10.8125 6.08073 10.9344 6.12083C11.0563 6.16093 11.1884 6.15747 11.308 6.11104C11.3866 6.08238 11.4578 6.03629 11.516 5.9762C11.5743 5.91612 11.6182 5.84362 11.6444 5.76414C11.6707 5.68466 11.6786 5.60027 11.6675 5.51731C11.6565 5.43434 11.6268 5.35496 11.5807 5.28512L10.2006 3.14074C10.1513 3.05897 10.0817 2.99132 9.9986 2.94436C9.91546 2.8974 9.8216 2.87272 9.72611 2.87272C9.63063 2.87272 9.53675 2.8974 9.45361 2.94436C9.37047 2.99132 9.30088 3.05897 9.25158 3.14074L8.97893 3.65965L8.03788 2.10374C7.98778 2.02558 7.91882 1.96126 7.83738 1.91669C7.75593 1.87212 7.66459 1.84874 7.57174 1.84868L7.51338 1.80791Z' fill='#8254C6'/>\r\n<path d='M16.0555 15.9995C15.6679 15.999 15.2836 15.9275 14.9218 15.7885C14.8861 15.7816 14.8523 15.7672 14.8226 15.7462C14.793 15.7253 14.7681 15.6982 14.7498 15.6668C14.7314 15.6355 14.72 15.6006 14.7162 15.5644C14.7125 15.5283 14.7164 15.4918 14.7279 15.4573C14.7394 15.4229 14.7581 15.3912 14.7828 15.3646C14.8075 15.338 14.8376 15.3169 14.8711 15.3028C14.9046 15.2888 14.9407 15.282 14.977 15.283C15.0134 15.284 15.049 15.2928 15.0817 15.3087C15.4086 15.4381 15.758 15.5009 16.1095 15.4934C16.461 15.4858 16.8074 15.4081 17.1285 15.2648C17.4495 15.1215 17.7386 14.9155 17.9789 14.6589C18.2192 14.4022 18.4058 14.1002 18.5277 13.7704C18.5346 13.7347 18.549 13.7009 18.5699 13.6713C18.5909 13.6416 18.618 13.6168 18.6493 13.5984C18.6807 13.5801 18.7156 13.5686 18.7517 13.5649C18.7879 13.5611 18.8244 13.5651 18.8588 13.5766C18.8933 13.5881 18.9249 13.6068 18.9516 13.6315C18.9782 13.6562 18.9993 13.6863 19.0133 13.7198C19.0274 13.7532 19.0342 13.7894 19.0331 13.8257C19.0321 13.862 19.0234 13.8977 19.0074 13.9303C18.7832 14.5346 18.3807 15.0565 17.8533 15.427C17.3259 15.7975 16.6984 15.9991 16.0539 16.0051L16.0555 15.9995Z' fill='#8254C6'/>\r\n<path d='M13.3309 12.0362H13.2429C13.1802 12.0125 13.1294 11.965 13.1014 11.9041C13.0734 11.8433 13.0706 11.7738 13.0934 11.7108C13.2414 11.321 13.4648 10.9642 13.7509 10.6607C14.0369 10.3573 14.3799 10.1132 14.7603 9.94244C15.1407 9.77165 15.551 9.67752 15.9678 9.6654C16.3846 9.65329 16.7998 9.72344 17.1894 9.87184C17.245 9.89894 17.2889 9.94531 17.3128 10.0023C17.3367 10.0593 17.3392 10.1231 17.3196 10.1817C17.3001 10.2404 17.2599 10.29 17.2065 10.3212C17.1531 10.3524 17.0902 10.3632 17.0295 10.3516C16.7021 10.2224 16.3521 10.16 16.0002 10.1681C15.6483 10.1762 15.3016 10.2547 14.9805 10.3989C14.6593 10.543 14.3703 10.75 14.1304 11.0076C13.8905 11.2652 13.7045 11.5681 13.5835 11.8987C13.5591 11.9437 13.5218 11.9804 13.4763 12.0039C13.4308 12.0275 13.3793 12.0368 13.3284 12.0306L13.3309 12.0362Z' fill='#8254C6'/>\r\n<path d='M16.0578 14.9099H15.9699C15.9023 14.9099 15.8374 14.883 15.7895 14.8352C15.7417 14.7874 15.7148 14.7225 15.7148 14.6549C15.7148 14.5872 15.7417 14.5223 15.7895 14.4745C15.8374 14.4267 15.9023 14.3998 15.9699 14.3998C16.1773 14.4092 16.3845 14.3775 16.5796 14.3065C16.7747 14.2355 16.9538 14.1266 17.1066 13.9861C17.2594 13.8455 17.3829 13.6761 17.4699 13.4876C17.557 13.2992 17.6058 13.0953 17.6138 12.8879C17.6138 12.8202 17.6406 12.7553 17.6885 12.7075C17.7363 12.6597 17.8012 12.6328 17.8688 12.6328C17.9365 12.6328 18.0013 12.6597 18.0492 12.7075C18.097 12.7553 18.1239 12.8202 18.1239 12.8879C18.106 13.4261 17.8812 13.9366 17.4964 14.3133C17.1116 14.6899 16.5963 14.9036 16.0578 14.9099Z' fill='#8254C6'/>\r\n<path d='M14.2288 13.0058C14.1953 13.0047 14.1624 12.9969 14.1319 12.9831C14.1014 12.9692 14.0739 12.9494 14.051 12.9249C14.0281 12.9004 14.0103 12.8717 13.9986 12.8403C13.9868 12.8089 13.9814 12.7755 13.9826 12.742C13.9935 12.4681 14.0583 12.199 14.1734 11.9502C14.2885 11.7014 14.4515 11.4777 14.6531 11.292C14.8548 11.1064 15.0911 10.9623 15.3485 10.8681C15.606 10.7739 15.8795 10.7314 16.1533 10.7431C16.221 10.7431 16.2859 10.77 16.3337 10.8178C16.3815 10.8656 16.4084 10.9305 16.4084 10.9982C16.4084 11.0658 16.3815 11.1307 16.3337 11.1785C16.2859 11.2263 16.221 11.2532 16.1533 11.2532C15.7351 11.2367 15.3273 11.3867 15.0194 11.6702C14.7114 11.9537 14.5283 12.3477 14.5103 12.7659C14.5103 12.8336 14.4834 12.8985 14.4356 12.9463C14.3877 12.9941 14.3229 13.021 14.2552 13.021L14.2288 13.0058Z' fill='#8254C6'/>\r\n<path d='M16.056 13.8471H16.0121C15.7507 13.8414 15.5021 13.7327 15.3203 13.5448C15.1385 13.3569 15.0382 13.1048 15.0411 12.8434C15.044 12.5819 15.1499 12.3322 15.3358 12.1483C15.5217 11.9644 15.7726 11.8613 16.0341 11.8613C16.2955 11.8613 16.5464 11.9644 16.7323 12.1483C16.9182 12.3322 17.0241 12.5819 17.027 12.8434C17.0299 13.1048 16.9296 13.3569 16.7478 13.5448C16.566 13.7327 16.3174 13.8414 16.056 13.8471ZM16.056 12.3176C15.9615 12.3202 15.8699 12.3505 15.7926 12.405C15.7153 12.4594 15.6558 12.5355 15.6216 12.6236C15.5874 12.7117 15.58 12.808 15.6003 12.9003C15.6207 12.9926 15.6678 13.0769 15.7359 13.1425C15.8039 13.2081 15.8898 13.2522 15.9828 13.2691C16.0758 13.2861 16.1718 13.2752 16.2586 13.2378C16.3454 13.2004 16.4192 13.1382 16.4708 13.059C16.5224 12.9798 16.5495 12.8871 16.5486 12.7926C16.5479 12.7289 16.5347 12.6659 16.5095 12.6074C16.4843 12.549 16.4477 12.4961 16.4018 12.4518C16.356 12.4076 16.3018 12.373 16.2424 12.35C16.1831 12.3269 16.1197 12.3159 16.056 12.3176Z' fill='#8254C6'/>\r\n<path d='M32.5997 22.8655C32.5006 19.0538 31.5441 15.3135 29.8013 11.9221C28.8198 10.0677 27.3524 8.51515 25.5563 7.43068C23.7601 6.3462 21.7029 5.77066 19.6047 5.76567C17.9819 5.7609 16.3786 6.11915 14.9122 6.81418C13.4458 7.50922 12.1533 8.52344 11.1296 9.78257C10.8745 10.1024 10.6499 10.3982 10.6722 10.6621C10.6879 10.7456 10.7201 10.8252 10.7669 10.8962C10.8138 10.9672 10.8743 11.0281 10.9449 11.0754C11.0567 11.177 11.1989 11.2388 11.3495 11.2513C11.6485 11.2513 11.9563 10.9315 12.229 10.6621L12.4576 10.4334C13.1113 9.71802 13.8456 9.0808 14.646 8.53448C16.1275 7.60952 17.839 7.11917 19.5855 7.11929C21.423 7.13786 23.2219 7.64925 24.7943 8.6001C26.3668 9.55094 27.6552 10.9064 28.5252 12.525C30.6176 16.322 31.1005 20.5204 31.3116 24.4965C31.3732 25.6567 31.3556 26.8152 31.3116 27.925V29.5952L23.7959 28.2152L24.0686 27.9426C26.9165 24.9843 28.0415 21.3416 27.4882 16.8289C27.3739 15.9494 27.0085 15.7216 26.4864 15.7216H26.1434C25.9104 15.7554 25.6753 15.773 25.4398 15.7743C24.1453 15.7546 22.8994 15.2783 21.9218 14.4295C21.315 13.9498 20.9623 13.6564 20.7177 13.6564C20.473 13.6564 20.19 14.0345 19.6783 14.7197C18.3247 16.5395 16.8127 17.4182 15.0457 17.4182C14.1985 17.3983 13.3618 17.2255 12.576 16.9081C12.3858 16.8295 12.1834 16.7848 11.9779 16.7762C11.818 16.7762 11.3447 16.7762 11.2743 17.6557C10.9545 21.6374 11.9339 24.8196 14.2454 27.3949C14.3637 27.527 14.4752 27.6649 14.5796 27.8082L14.7395 28.0017L14.9594 28.2744L8.05054 29.5313H7.9642C7.77071 29.5313 7.74433 29.3554 7.72434 29.1267C7.35617 25.2129 7.67739 21.2649 8.67339 17.4622C8.84929 16.7154 8.67339 16.4779 8.25123 16.3548C8.16604 16.3268 8.07706 16.312 7.98738 16.3108C7.87305 16.3108 7.53005 16.3108 7.33656 17.0488C6.15978 21.3244 5.84024 25.7905 6.3963 30.1901C6.40152 30.2721 6.40152 30.3543 6.3963 30.4363C7.89065 30.1165 9.40257 29.8383 10.9233 29.6456C11.2412 29.5567 11.5639 29.4862 11.8899 29.4345C12.1879 29.4031 12.4823 29.3442 12.7694 29.2586C13.259 29.1113 13.7629 29.017 14.2726 28.9772C14.3186 28.964 14.3673 28.964 14.4133 28.9772C14.9456 28.7718 15.5269 28.7289 16.0836 28.854H16.3826C16.4398 28.8698 16.49 28.9045 16.5252 28.9524C16.5603 29.0002 16.5782 29.0586 16.5761 29.1179C17.582 29.3461 18.6131 29.4437 19.6439 29.4081C20.7854 29.2624 21.9027 28.9667 22.9668 28.5286C23.0234 28.507 23.0861 28.507 23.1427 28.5286C23.6433 28.5101 24.1417 28.6033 24.6019 28.8013C24.761 28.7973 24.9193 28.8245 25.068 28.8812C27.4762 29.7607 30.0691 29.8743 32.487 30.6402C32.4769 30.532 32.4769 30.4231 32.487 30.3148C32.487 29.4353 32.5397 28.4951 32.5749 27.6076C32.5997 26.1004 32.6788 24.4654 32.5997 22.8655ZM22.667 27.263C21.7355 27.9973 20.5914 28.4105 19.4056 28.4407C18.4159 28.436 17.447 28.1561 16.6073 27.6323C14.0407 26.0764 12.1506 21.9012 12.6431 18.8422V18.6023L12.863 18.6639C13.5112 18.8379 14.1787 18.9296 14.8499 18.9365C15.963 18.9098 17.0549 18.627 18.0412 18.1103C19.0274 17.5935 19.8814 16.8566 20.537 15.9566L20.6249 15.8423L26.0746 17.6812V17.7868C26.9006 20.7139 25.1951 25.4344 22.6638 27.3013L22.667 27.263Z' fill='#8254C6'/>\r\n<path d='M6.60938 30.3646L16.1287 28.6057C16.1287 28.6057 18.6873 30.3023 23.0048 28.3242C32.0676 30.3726 32.0788 30.4686 32.0788 30.4686' stroke='#8254C6' stroke-width='0.262956' stroke-miterlimit='10'/>\r\n<path d='M8.91211 14.4964L9.59812 12.8877' stroke='#8254C6' stroke-width='0.797349' stroke-miterlimit='10' stroke-linecap='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_16159_32828'>\r\n<rect width='34.778' height='34.778' fill='white' transform='translate(0.113281 0.111328)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
                            },
                            {
                              value: "stomach_ache",
                              meaning: "\u062f\u0644\u200c\u062f\u0631\u062f",
                              icon: "\ud83e\udd22"
                            },
                            {
                              value: "chest_pain",
                              meaning:
                                "\u062f\u0631\u062f \u0642\u0641\u0633\u0647 \u0633\u06cc\u0646\u0647",
                              icon: "\ud83d\udc94"
                            },
                            {
                              value: "contusion",
                              meaning: "\u06a9\u0628\u0648\u062f\u06cc",
                              icon: "\ud83e\ude79"
                            },
                            {
                              value: "back_ache",
                              meaning: "\u06a9\u0645\u0631\u062f\u0631\u062f",
                              icon: "\ud83d\udeb6\u200d\u2642\ufe0f\ud83d\udca2"
                            },
                            {
                              value: "foot_ache",
                              meaning: "\u062f\u0631\u062f \u067e\u0627",
                              icon: "\ud83e\uddb6\ud83d\udca5"
                            },
                            {
                              value: "nausea",
                              meaning:
                                "\u062d\u0627\u0644\u062a \u062a\u0647\u0648\u0639",
                              icon: "\ud83e\udd2e"
                            }
                          ];
                        }
                        throw e;
                      }
                    })()}
                    className={classNames("__wab_instance", sty.psychological)}
                    list={generateStateValueProp($state, [
                      "psychological",
                      "list"
                    ])}
                    onListChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "psychological",
                        "list"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    onSelectOneChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "psychological",
                        "selectOne"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    selectOne={generateStateValueProp($state, [
                      "psychological",
                      "selectOne"
                    ])}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"selectionBox4"}
                  data-plasmic-override={overrides.selectionBox4}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.selectionBox4)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___3IJiT
                    )}
                  >
                    {
                      "\u062a\u0631\u0634\u062d\u0627\u062a \u0648\u0627\u0698\u0646\u062a \u0628\u0647 \u0686\u0647 \u0635\u0648\u0631\u062a\u0647\u061f"
                    }
                  </div>
                  <Choices
                    data-plasmic-name={"vaginal"}
                    data-plasmic-override={overrides.vaginal}
                    beforList={(() => {
                      try {
                        return $state.signs.vaginal;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [
                            {
                              value: "headache",
                              meaning: "\u0633\u0631\u062f\u0631\u062f",
                              icon: "<svg width='35' height='35' viewBox='0 0 35 35' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_16159_32828)'>\r\n<path d='M4.98039 9.10027H4.91003C4.82972 9.08719 4.75405 9.0539 4.69015 9.00352L1.17217 6.2435C1.11967 6.20828 1.07462 6.16306 1.0396 6.11042C1.00458 6.05778 0.980266 5.99876 0.968053 5.93673C0.95584 5.8747 0.955964 5.81087 0.968419 5.74889C0.980874 5.68691 1.00542 5.62799 1.04064 5.57549C1.07587 5.52299 1.12109 5.47794 1.17373 5.44292C1.22636 5.4079 1.28538 5.38359 1.34741 5.37137C1.40944 5.35916 1.47327 5.35928 1.53526 5.37174C1.59724 5.38419 1.65616 5.40874 1.70866 5.44396H1.76143L4.61979 7.68508L4.84846 6.05001C4.86447 5.93542 4.92135 5.83048 5.00862 5.75452C5.0959 5.67856 5.20769 5.6367 5.3234 5.63665H5.39375C5.47324 5.64713 5.54883 5.67737 5.61362 5.7246L8.83978 8.22077C8.89784 8.25377 8.9483 8.29864 8.98785 8.35246C9.0274 8.40628 9.05514 8.46783 9.06929 8.5331C9.08343 8.59838 9.08365 8.6659 9.06993 8.73126C9.05621 8.79662 9.02885 8.85835 8.98966 8.91243C8.95046 8.9665 8.9003 9.0117 8.84245 9.04507C8.7846 9.07845 8.72036 9.09924 8.65392 9.1061C8.58749 9.11297 8.52035 9.10574 8.4569 9.08489C8.39345 9.06405 8.33512 9.03006 8.2857 8.98513L5.64721 7.05104L5.40734 8.71249C5.3875 8.81514 5.33465 8.9085 5.25686 8.97836C5.17906 9.04821 5.08058 9.09074 4.97639 9.09947L4.98039 9.10027Z' fill='#8254C6'/>\r\n<path d='M11.0898 6.07609C11.0094 6.07631 10.9301 6.05629 10.8594 6.01787C10.7887 5.97945 10.7288 5.92386 10.6853 5.85622L9.75378 4.39706L9.39318 5.03669C9.3525 5.11344 9.29174 5.1777 9.21739 5.22262C9.14304 5.26754 9.05789 5.29144 8.97102 5.29174C8.88699 5.29281 8.80409 5.27236 8.7302 5.23233C8.6563 5.19231 8.59388 5.13404 8.54887 5.06308L7.13368 2.68124C7.08823 2.62737 7.05486 2.56437 7.03584 2.4965C7.01682 2.42863 7.0126 2.35747 7.02345 2.28783C7.03429 2.21819 7.05995 2.15168 7.09871 2.09281C7.13746 2.03394 7.1884 1.98407 7.24808 1.94657C7.30777 1.90907 7.37479 1.88482 7.44465 1.87546C7.51451 1.86609 7.58557 1.87184 7.65302 1.89229C7.72047 1.91274 7.78275 1.94744 7.83564 1.99402C7.88853 2.04061 7.9308 2.09801 7.9596 2.16233L8.97023 3.82378L9.32203 3.19934C9.36446 3.12757 9.42486 3.0681 9.49727 3.02678C9.56969 2.98547 9.65162 2.96374 9.73499 2.96374C9.81836 2.96374 9.90029 2.98547 9.97271 3.02678C10.0451 3.0681 10.1055 3.12757 10.148 3.19934L11.528 5.34371C11.5626 5.39723 11.5863 5.45713 11.5976 5.51991C11.6088 5.58268 11.6075 5.64707 11.5935 5.70931C11.5796 5.77155 11.5534 5.83039 11.5165 5.88238C11.4796 5.93438 11.4326 5.97849 11.3784 6.01213L11.2817 6.0649C11.2185 6.08096 11.1526 6.08395 11.0882 6.0737L11.0898 6.07609Z' fill='#8254C6'/>\r\n<path d='M7.54056 1.9894C7.61081 1.9891 7.67998 2.00671 7.74153 2.04057C7.80309 2.07442 7.855 2.12341 7.89236 2.18289L8.83262 3.7388L8.95575 3.94109L9.07009 3.73001L9.34273 3.2111C9.37929 3.14928 9.43134 3.09805 9.49373 3.06247C9.55612 3.02688 9.6267 3.00816 9.69853 3.00816C9.77035 3.00816 9.84094 3.02688 9.90333 3.06247C9.96572 3.09805 10.0178 3.14928 10.0543 3.2111L11.4343 5.35548C11.4638 5.40109 11.484 5.45207 11.4938 5.50549C11.5035 5.55891 11.5027 5.61374 11.4912 5.66683C11.4798 5.71992 11.458 5.77023 11.4271 5.8149C11.3962 5.85957 11.3568 5.89771 11.3112 5.92715H11.2233V6.03269V5.93594C11.1344 5.9687 11.0371 5.96997 10.9474 5.93956C10.8578 5.90914 10.7813 5.84888 10.7307 5.76884L9.85124 4.40962L9.72811 4.21613L9.61378 4.41841L9.30596 4.97249C9.26877 5.0362 9.21553 5.08905 9.15156 5.12578C9.0876 5.16251 9.01512 5.18184 8.94136 5.18184C8.86759 5.18184 8.79512 5.16251 8.73115 5.12578C8.66718 5.08905 8.61396 5.0362 8.57677 4.97249L7.16158 2.58186C7.12221 2.51919 7.10038 2.44709 7.09839 2.3731C7.0964 2.29911 7.11432 2.22594 7.15027 2.16124C7.18621 2.09654 7.23887 2.04267 7.30275 2.00527C7.36662 1.96787 7.43936 1.94831 7.51338 1.94863M7.51338 1.80791C7.40973 1.80456 7.30721 1.83037 7.2175 1.8824C7.12779 1.93443 7.05448 2.0106 7.00592 2.10223C6.95735 2.19386 6.93548 2.29728 6.94278 2.40073C6.95009 2.50418 6.98628 2.60351 7.04724 2.6874L8.49762 5.08603C8.54638 5.16873 8.61578 5.23733 8.69904 5.28513C8.7823 5.33292 8.87654 5.35827 8.97254 5.35867C9.06935 5.3591 9.16459 5.33415 9.24876 5.28632C9.33293 5.23848 9.4031 5.16943 9.45227 5.08603L9.76009 4.53195L10.6396 5.89117C10.7083 5.99956 10.8125 6.08073 10.9344 6.12083C11.0563 6.16093 11.1884 6.15747 11.308 6.11104C11.3866 6.08238 11.4578 6.03629 11.516 5.9762C11.5743 5.91612 11.6182 5.84362 11.6444 5.76414C11.6707 5.68466 11.6786 5.60027 11.6675 5.51731C11.6565 5.43434 11.6268 5.35496 11.5807 5.28512L10.2006 3.14074C10.1513 3.05897 10.0817 2.99132 9.9986 2.94436C9.91546 2.8974 9.8216 2.87272 9.72611 2.87272C9.63063 2.87272 9.53675 2.8974 9.45361 2.94436C9.37047 2.99132 9.30088 3.05897 9.25158 3.14074L8.97893 3.65965L8.03788 2.10374C7.98778 2.02558 7.91882 1.96126 7.83738 1.91669C7.75593 1.87212 7.66459 1.84874 7.57174 1.84868L7.51338 1.80791Z' fill='#8254C6'/>\r\n<path d='M16.0555 15.9995C15.6679 15.999 15.2836 15.9275 14.9218 15.7885C14.8861 15.7816 14.8523 15.7672 14.8226 15.7462C14.793 15.7253 14.7681 15.6982 14.7498 15.6668C14.7314 15.6355 14.72 15.6006 14.7162 15.5644C14.7125 15.5283 14.7164 15.4918 14.7279 15.4573C14.7394 15.4229 14.7581 15.3912 14.7828 15.3646C14.8075 15.338 14.8376 15.3169 14.8711 15.3028C14.9046 15.2888 14.9407 15.282 14.977 15.283C15.0134 15.284 15.049 15.2928 15.0817 15.3087C15.4086 15.4381 15.758 15.5009 16.1095 15.4934C16.461 15.4858 16.8074 15.4081 17.1285 15.2648C17.4495 15.1215 17.7386 14.9155 17.9789 14.6589C18.2192 14.4022 18.4058 14.1002 18.5277 13.7704C18.5346 13.7347 18.549 13.7009 18.5699 13.6713C18.5909 13.6416 18.618 13.6168 18.6493 13.5984C18.6807 13.5801 18.7156 13.5686 18.7517 13.5649C18.7879 13.5611 18.8244 13.5651 18.8588 13.5766C18.8933 13.5881 18.9249 13.6068 18.9516 13.6315C18.9782 13.6562 18.9993 13.6863 19.0133 13.7198C19.0274 13.7532 19.0342 13.7894 19.0331 13.8257C19.0321 13.862 19.0234 13.8977 19.0074 13.9303C18.7832 14.5346 18.3807 15.0565 17.8533 15.427C17.3259 15.7975 16.6984 15.9991 16.0539 16.0051L16.0555 15.9995Z' fill='#8254C6'/>\r\n<path d='M13.3309 12.0362H13.2429C13.1802 12.0125 13.1294 11.965 13.1014 11.9041C13.0734 11.8433 13.0706 11.7738 13.0934 11.7108C13.2414 11.321 13.4648 10.9642 13.7509 10.6607C14.0369 10.3573 14.3799 10.1132 14.7603 9.94244C15.1407 9.77165 15.551 9.67752 15.9678 9.6654C16.3846 9.65329 16.7998 9.72344 17.1894 9.87184C17.245 9.89894 17.2889 9.94531 17.3128 10.0023C17.3367 10.0593 17.3392 10.1231 17.3196 10.1817C17.3001 10.2404 17.2599 10.29 17.2065 10.3212C17.1531 10.3524 17.0902 10.3632 17.0295 10.3516C16.7021 10.2224 16.3521 10.16 16.0002 10.1681C15.6483 10.1762 15.3016 10.2547 14.9805 10.3989C14.6593 10.543 14.3703 10.75 14.1304 11.0076C13.8905 11.2652 13.7045 11.5681 13.5835 11.8987C13.5591 11.9437 13.5218 11.9804 13.4763 12.0039C13.4308 12.0275 13.3793 12.0368 13.3284 12.0306L13.3309 12.0362Z' fill='#8254C6'/>\r\n<path d='M16.0578 14.9099H15.9699C15.9023 14.9099 15.8374 14.883 15.7895 14.8352C15.7417 14.7874 15.7148 14.7225 15.7148 14.6549C15.7148 14.5872 15.7417 14.5223 15.7895 14.4745C15.8374 14.4267 15.9023 14.3998 15.9699 14.3998C16.1773 14.4092 16.3845 14.3775 16.5796 14.3065C16.7747 14.2355 16.9538 14.1266 17.1066 13.9861C17.2594 13.8455 17.3829 13.6761 17.4699 13.4876C17.557 13.2992 17.6058 13.0953 17.6138 12.8879C17.6138 12.8202 17.6406 12.7553 17.6885 12.7075C17.7363 12.6597 17.8012 12.6328 17.8688 12.6328C17.9365 12.6328 18.0013 12.6597 18.0492 12.7075C18.097 12.7553 18.1239 12.8202 18.1239 12.8879C18.106 13.4261 17.8812 13.9366 17.4964 14.3133C17.1116 14.6899 16.5963 14.9036 16.0578 14.9099Z' fill='#8254C6'/>\r\n<path d='M14.2288 13.0058C14.1953 13.0047 14.1624 12.9969 14.1319 12.9831C14.1014 12.9692 14.0739 12.9494 14.051 12.9249C14.0281 12.9004 14.0103 12.8717 13.9986 12.8403C13.9868 12.8089 13.9814 12.7755 13.9826 12.742C13.9935 12.4681 14.0583 12.199 14.1734 11.9502C14.2885 11.7014 14.4515 11.4777 14.6531 11.292C14.8548 11.1064 15.0911 10.9623 15.3485 10.8681C15.606 10.7739 15.8795 10.7314 16.1533 10.7431C16.221 10.7431 16.2859 10.77 16.3337 10.8178C16.3815 10.8656 16.4084 10.9305 16.4084 10.9982C16.4084 11.0658 16.3815 11.1307 16.3337 11.1785C16.2859 11.2263 16.221 11.2532 16.1533 11.2532C15.7351 11.2367 15.3273 11.3867 15.0194 11.6702C14.7114 11.9537 14.5283 12.3477 14.5103 12.7659C14.5103 12.8336 14.4834 12.8985 14.4356 12.9463C14.3877 12.9941 14.3229 13.021 14.2552 13.021L14.2288 13.0058Z' fill='#8254C6'/>\r\n<path d='M16.056 13.8471H16.0121C15.7507 13.8414 15.5021 13.7327 15.3203 13.5448C15.1385 13.3569 15.0382 13.1048 15.0411 12.8434C15.044 12.5819 15.1499 12.3322 15.3358 12.1483C15.5217 11.9644 15.7726 11.8613 16.0341 11.8613C16.2955 11.8613 16.5464 11.9644 16.7323 12.1483C16.9182 12.3322 17.0241 12.5819 17.027 12.8434C17.0299 13.1048 16.9296 13.3569 16.7478 13.5448C16.566 13.7327 16.3174 13.8414 16.056 13.8471ZM16.056 12.3176C15.9615 12.3202 15.8699 12.3505 15.7926 12.405C15.7153 12.4594 15.6558 12.5355 15.6216 12.6236C15.5874 12.7117 15.58 12.808 15.6003 12.9003C15.6207 12.9926 15.6678 13.0769 15.7359 13.1425C15.8039 13.2081 15.8898 13.2522 15.9828 13.2691C16.0758 13.2861 16.1718 13.2752 16.2586 13.2378C16.3454 13.2004 16.4192 13.1382 16.4708 13.059C16.5224 12.9798 16.5495 12.8871 16.5486 12.7926C16.5479 12.7289 16.5347 12.6659 16.5095 12.6074C16.4843 12.549 16.4477 12.4961 16.4018 12.4518C16.356 12.4076 16.3018 12.373 16.2424 12.35C16.1831 12.3269 16.1197 12.3159 16.056 12.3176Z' fill='#8254C6'/>\r\n<path d='M32.5997 22.8655C32.5006 19.0538 31.5441 15.3135 29.8013 11.9221C28.8198 10.0677 27.3524 8.51515 25.5563 7.43068C23.7601 6.3462 21.7029 5.77066 19.6047 5.76567C17.9819 5.7609 16.3786 6.11915 14.9122 6.81418C13.4458 7.50922 12.1533 8.52344 11.1296 9.78257C10.8745 10.1024 10.6499 10.3982 10.6722 10.6621C10.6879 10.7456 10.7201 10.8252 10.7669 10.8962C10.8138 10.9672 10.8743 11.0281 10.9449 11.0754C11.0567 11.177 11.1989 11.2388 11.3495 11.2513C11.6485 11.2513 11.9563 10.9315 12.229 10.6621L12.4576 10.4334C13.1113 9.71802 13.8456 9.0808 14.646 8.53448C16.1275 7.60952 17.839 7.11917 19.5855 7.11929C21.423 7.13786 23.2219 7.64925 24.7943 8.6001C26.3668 9.55094 27.6552 10.9064 28.5252 12.525C30.6176 16.322 31.1005 20.5204 31.3116 24.4965C31.3732 25.6567 31.3556 26.8152 31.3116 27.925V29.5952L23.7959 28.2152L24.0686 27.9426C26.9165 24.9843 28.0415 21.3416 27.4882 16.8289C27.3739 15.9494 27.0085 15.7216 26.4864 15.7216H26.1434C25.9104 15.7554 25.6753 15.773 25.4398 15.7743C24.1453 15.7546 22.8994 15.2783 21.9218 14.4295C21.315 13.9498 20.9623 13.6564 20.7177 13.6564C20.473 13.6564 20.19 14.0345 19.6783 14.7197C18.3247 16.5395 16.8127 17.4182 15.0457 17.4182C14.1985 17.3983 13.3618 17.2255 12.576 16.9081C12.3858 16.8295 12.1834 16.7848 11.9779 16.7762C11.818 16.7762 11.3447 16.7762 11.2743 17.6557C10.9545 21.6374 11.9339 24.8196 14.2454 27.3949C14.3637 27.527 14.4752 27.6649 14.5796 27.8082L14.7395 28.0017L14.9594 28.2744L8.05054 29.5313H7.9642C7.77071 29.5313 7.74433 29.3554 7.72434 29.1267C7.35617 25.2129 7.67739 21.2649 8.67339 17.4622C8.84929 16.7154 8.67339 16.4779 8.25123 16.3548C8.16604 16.3268 8.07706 16.312 7.98738 16.3108C7.87305 16.3108 7.53005 16.3108 7.33656 17.0488C6.15978 21.3244 5.84024 25.7905 6.3963 30.1901C6.40152 30.2721 6.40152 30.3543 6.3963 30.4363C7.89065 30.1165 9.40257 29.8383 10.9233 29.6456C11.2412 29.5567 11.5639 29.4862 11.8899 29.4345C12.1879 29.4031 12.4823 29.3442 12.7694 29.2586C13.259 29.1113 13.7629 29.017 14.2726 28.9772C14.3186 28.964 14.3673 28.964 14.4133 28.9772C14.9456 28.7718 15.5269 28.7289 16.0836 28.854H16.3826C16.4398 28.8698 16.49 28.9045 16.5252 28.9524C16.5603 29.0002 16.5782 29.0586 16.5761 29.1179C17.582 29.3461 18.6131 29.4437 19.6439 29.4081C20.7854 29.2624 21.9027 28.9667 22.9668 28.5286C23.0234 28.507 23.0861 28.507 23.1427 28.5286C23.6433 28.5101 24.1417 28.6033 24.6019 28.8013C24.761 28.7973 24.9193 28.8245 25.068 28.8812C27.4762 29.7607 30.0691 29.8743 32.487 30.6402C32.4769 30.532 32.4769 30.4231 32.487 30.3148C32.487 29.4353 32.5397 28.4951 32.5749 27.6076C32.5997 26.1004 32.6788 24.4654 32.5997 22.8655ZM22.667 27.263C21.7355 27.9973 20.5914 28.4105 19.4056 28.4407C18.4159 28.436 17.447 28.1561 16.6073 27.6323C14.0407 26.0764 12.1506 21.9012 12.6431 18.8422V18.6023L12.863 18.6639C13.5112 18.8379 14.1787 18.9296 14.8499 18.9365C15.963 18.9098 17.0549 18.627 18.0412 18.1103C19.0274 17.5935 19.8814 16.8566 20.537 15.9566L20.6249 15.8423L26.0746 17.6812V17.7868C26.9006 20.7139 25.1951 25.4344 22.6638 27.3013L22.667 27.263Z' fill='#8254C6'/>\r\n<path d='M6.60938 30.3646L16.1287 28.6057C16.1287 28.6057 18.6873 30.3023 23.0048 28.3242C32.0676 30.3726 32.0788 30.4686 32.0788 30.4686' stroke='#8254C6' stroke-width='0.262956' stroke-miterlimit='10'/>\r\n<path d='M8.91211 14.4964L9.59812 12.8877' stroke='#8254C6' stroke-width='0.797349' stroke-miterlimit='10' stroke-linecap='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_16159_32828'>\r\n<rect width='34.778' height='34.778' fill='white' transform='translate(0.113281 0.111328)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
                            },
                            {
                              value: "stomach_ache",
                              meaning: "\u062f\u0644\u200c\u062f\u0631\u062f",
                              icon: "\ud83e\udd22"
                            },
                            {
                              value: "chest_pain",
                              meaning:
                                "\u062f\u0631\u062f \u0642\u0641\u0633\u0647 \u0633\u06cc\u0646\u0647",
                              icon: "\ud83d\udc94"
                            },
                            {
                              value: "contusion",
                              meaning: "\u06a9\u0628\u0648\u062f\u06cc",
                              icon: "\ud83e\ude79"
                            },
                            {
                              value: "back_ache",
                              meaning: "\u06a9\u0645\u0631\u062f\u0631\u062f",
                              icon: "\ud83d\udeb6\u200d\u2642\ufe0f\ud83d\udca2"
                            },
                            {
                              value: "foot_ache",
                              meaning: "\u062f\u0631\u062f \u067e\u0627",
                              icon: "\ud83e\uddb6\ud83d\udca5"
                            },
                            {
                              value: "nausea",
                              meaning:
                                "\u062d\u0627\u0644\u062a \u062a\u0647\u0648\u0639",
                              icon: "\ud83e\udd2e"
                            }
                          ];
                        }
                        throw e;
                      }
                    })()}
                    className={classNames("__wab_instance", sty.vaginal)}
                    list={generateStateValueProp($state, ["vaginal", "list"])}
                    onListChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "vaginal",
                        "list"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    onSelectOneChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "vaginal",
                        "selectOne"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    selectOne={generateStateValueProp($state, [
                      "vaginal",
                      "selectOne"
                    ])}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"selectionBox5"}
                  data-plasmic-override={overrides.selectionBox5}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.selectionBox5)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jDiy
                    )}
                  >
                    {
                      "\u0628\u06cc\u0645\u0627\u0631\u06cc \u0632\u0646\u0627\u0646"
                    }
                  </div>
                  <Choices
                    data-plasmic-name={"womans"}
                    data-plasmic-override={overrides.womans}
                    beforList={(() => {
                      try {
                        return $state.signs.womens;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [
                            {
                              value: "headache",
                              meaning: "\u0633\u0631\u062f\u0631\u062f",
                              icon: "<svg width='35' height='35' viewBox='0 0 35 35' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_16159_32828)'>\r\n<path d='M4.98039 9.10027H4.91003C4.82972 9.08719 4.75405 9.0539 4.69015 9.00352L1.17217 6.2435C1.11967 6.20828 1.07462 6.16306 1.0396 6.11042C1.00458 6.05778 0.980266 5.99876 0.968053 5.93673C0.95584 5.8747 0.955964 5.81087 0.968419 5.74889C0.980874 5.68691 1.00542 5.62799 1.04064 5.57549C1.07587 5.52299 1.12109 5.47794 1.17373 5.44292C1.22636 5.4079 1.28538 5.38359 1.34741 5.37137C1.40944 5.35916 1.47327 5.35928 1.53526 5.37174C1.59724 5.38419 1.65616 5.40874 1.70866 5.44396H1.76143L4.61979 7.68508L4.84846 6.05001C4.86447 5.93542 4.92135 5.83048 5.00862 5.75452C5.0959 5.67856 5.20769 5.6367 5.3234 5.63665H5.39375C5.47324 5.64713 5.54883 5.67737 5.61362 5.7246L8.83978 8.22077C8.89784 8.25377 8.9483 8.29864 8.98785 8.35246C9.0274 8.40628 9.05514 8.46783 9.06929 8.5331C9.08343 8.59838 9.08365 8.6659 9.06993 8.73126C9.05621 8.79662 9.02885 8.85835 8.98966 8.91243C8.95046 8.9665 8.9003 9.0117 8.84245 9.04507C8.7846 9.07845 8.72036 9.09924 8.65392 9.1061C8.58749 9.11297 8.52035 9.10574 8.4569 9.08489C8.39345 9.06405 8.33512 9.03006 8.2857 8.98513L5.64721 7.05104L5.40734 8.71249C5.3875 8.81514 5.33465 8.9085 5.25686 8.97836C5.17906 9.04821 5.08058 9.09074 4.97639 9.09947L4.98039 9.10027Z' fill='#8254C6'/>\r\n<path d='M11.0898 6.07609C11.0094 6.07631 10.9301 6.05629 10.8594 6.01787C10.7887 5.97945 10.7288 5.92386 10.6853 5.85622L9.75378 4.39706L9.39318 5.03669C9.3525 5.11344 9.29174 5.1777 9.21739 5.22262C9.14304 5.26754 9.05789 5.29144 8.97102 5.29174C8.88699 5.29281 8.80409 5.27236 8.7302 5.23233C8.6563 5.19231 8.59388 5.13404 8.54887 5.06308L7.13368 2.68124C7.08823 2.62737 7.05486 2.56437 7.03584 2.4965C7.01682 2.42863 7.0126 2.35747 7.02345 2.28783C7.03429 2.21819 7.05995 2.15168 7.09871 2.09281C7.13746 2.03394 7.1884 1.98407 7.24808 1.94657C7.30777 1.90907 7.37479 1.88482 7.44465 1.87546C7.51451 1.86609 7.58557 1.87184 7.65302 1.89229C7.72047 1.91274 7.78275 1.94744 7.83564 1.99402C7.88853 2.04061 7.9308 2.09801 7.9596 2.16233L8.97023 3.82378L9.32203 3.19934C9.36446 3.12757 9.42486 3.0681 9.49727 3.02678C9.56969 2.98547 9.65162 2.96374 9.73499 2.96374C9.81836 2.96374 9.90029 2.98547 9.97271 3.02678C10.0451 3.0681 10.1055 3.12757 10.148 3.19934L11.528 5.34371C11.5626 5.39723 11.5863 5.45713 11.5976 5.51991C11.6088 5.58268 11.6075 5.64707 11.5935 5.70931C11.5796 5.77155 11.5534 5.83039 11.5165 5.88238C11.4796 5.93438 11.4326 5.97849 11.3784 6.01213L11.2817 6.0649C11.2185 6.08096 11.1526 6.08395 11.0882 6.0737L11.0898 6.07609Z' fill='#8254C6'/>\r\n<path d='M7.54056 1.9894C7.61081 1.9891 7.67998 2.00671 7.74153 2.04057C7.80309 2.07442 7.855 2.12341 7.89236 2.18289L8.83262 3.7388L8.95575 3.94109L9.07009 3.73001L9.34273 3.2111C9.37929 3.14928 9.43134 3.09805 9.49373 3.06247C9.55612 3.02688 9.6267 3.00816 9.69853 3.00816C9.77035 3.00816 9.84094 3.02688 9.90333 3.06247C9.96572 3.09805 10.0178 3.14928 10.0543 3.2111L11.4343 5.35548C11.4638 5.40109 11.484 5.45207 11.4938 5.50549C11.5035 5.55891 11.5027 5.61374 11.4912 5.66683C11.4798 5.71992 11.458 5.77023 11.4271 5.8149C11.3962 5.85957 11.3568 5.89771 11.3112 5.92715H11.2233V6.03269V5.93594C11.1344 5.9687 11.0371 5.96997 10.9474 5.93956C10.8578 5.90914 10.7813 5.84888 10.7307 5.76884L9.85124 4.40962L9.72811 4.21613L9.61378 4.41841L9.30596 4.97249C9.26877 5.0362 9.21553 5.08905 9.15156 5.12578C9.0876 5.16251 9.01512 5.18184 8.94136 5.18184C8.86759 5.18184 8.79512 5.16251 8.73115 5.12578C8.66718 5.08905 8.61396 5.0362 8.57677 4.97249L7.16158 2.58186C7.12221 2.51919 7.10038 2.44709 7.09839 2.3731C7.0964 2.29911 7.11432 2.22594 7.15027 2.16124C7.18621 2.09654 7.23887 2.04267 7.30275 2.00527C7.36662 1.96787 7.43936 1.94831 7.51338 1.94863M7.51338 1.80791C7.40973 1.80456 7.30721 1.83037 7.2175 1.8824C7.12779 1.93443 7.05448 2.0106 7.00592 2.10223C6.95735 2.19386 6.93548 2.29728 6.94278 2.40073C6.95009 2.50418 6.98628 2.60351 7.04724 2.6874L8.49762 5.08603C8.54638 5.16873 8.61578 5.23733 8.69904 5.28513C8.7823 5.33292 8.87654 5.35827 8.97254 5.35867C9.06935 5.3591 9.16459 5.33415 9.24876 5.28632C9.33293 5.23848 9.4031 5.16943 9.45227 5.08603L9.76009 4.53195L10.6396 5.89117C10.7083 5.99956 10.8125 6.08073 10.9344 6.12083C11.0563 6.16093 11.1884 6.15747 11.308 6.11104C11.3866 6.08238 11.4578 6.03629 11.516 5.9762C11.5743 5.91612 11.6182 5.84362 11.6444 5.76414C11.6707 5.68466 11.6786 5.60027 11.6675 5.51731C11.6565 5.43434 11.6268 5.35496 11.5807 5.28512L10.2006 3.14074C10.1513 3.05897 10.0817 2.99132 9.9986 2.94436C9.91546 2.8974 9.8216 2.87272 9.72611 2.87272C9.63063 2.87272 9.53675 2.8974 9.45361 2.94436C9.37047 2.99132 9.30088 3.05897 9.25158 3.14074L8.97893 3.65965L8.03788 2.10374C7.98778 2.02558 7.91882 1.96126 7.83738 1.91669C7.75593 1.87212 7.66459 1.84874 7.57174 1.84868L7.51338 1.80791Z' fill='#8254C6'/>\r\n<path d='M16.0555 15.9995C15.6679 15.999 15.2836 15.9275 14.9218 15.7885C14.8861 15.7816 14.8523 15.7672 14.8226 15.7462C14.793 15.7253 14.7681 15.6982 14.7498 15.6668C14.7314 15.6355 14.72 15.6006 14.7162 15.5644C14.7125 15.5283 14.7164 15.4918 14.7279 15.4573C14.7394 15.4229 14.7581 15.3912 14.7828 15.3646C14.8075 15.338 14.8376 15.3169 14.8711 15.3028C14.9046 15.2888 14.9407 15.282 14.977 15.283C15.0134 15.284 15.049 15.2928 15.0817 15.3087C15.4086 15.4381 15.758 15.5009 16.1095 15.4934C16.461 15.4858 16.8074 15.4081 17.1285 15.2648C17.4495 15.1215 17.7386 14.9155 17.9789 14.6589C18.2192 14.4022 18.4058 14.1002 18.5277 13.7704C18.5346 13.7347 18.549 13.7009 18.5699 13.6713C18.5909 13.6416 18.618 13.6168 18.6493 13.5984C18.6807 13.5801 18.7156 13.5686 18.7517 13.5649C18.7879 13.5611 18.8244 13.5651 18.8588 13.5766C18.8933 13.5881 18.9249 13.6068 18.9516 13.6315C18.9782 13.6562 18.9993 13.6863 19.0133 13.7198C19.0274 13.7532 19.0342 13.7894 19.0331 13.8257C19.0321 13.862 19.0234 13.8977 19.0074 13.9303C18.7832 14.5346 18.3807 15.0565 17.8533 15.427C17.3259 15.7975 16.6984 15.9991 16.0539 16.0051L16.0555 15.9995Z' fill='#8254C6'/>\r\n<path d='M13.3309 12.0362H13.2429C13.1802 12.0125 13.1294 11.965 13.1014 11.9041C13.0734 11.8433 13.0706 11.7738 13.0934 11.7108C13.2414 11.321 13.4648 10.9642 13.7509 10.6607C14.0369 10.3573 14.3799 10.1132 14.7603 9.94244C15.1407 9.77165 15.551 9.67752 15.9678 9.6654C16.3846 9.65329 16.7998 9.72344 17.1894 9.87184C17.245 9.89894 17.2889 9.94531 17.3128 10.0023C17.3367 10.0593 17.3392 10.1231 17.3196 10.1817C17.3001 10.2404 17.2599 10.29 17.2065 10.3212C17.1531 10.3524 17.0902 10.3632 17.0295 10.3516C16.7021 10.2224 16.3521 10.16 16.0002 10.1681C15.6483 10.1762 15.3016 10.2547 14.9805 10.3989C14.6593 10.543 14.3703 10.75 14.1304 11.0076C13.8905 11.2652 13.7045 11.5681 13.5835 11.8987C13.5591 11.9437 13.5218 11.9804 13.4763 12.0039C13.4308 12.0275 13.3793 12.0368 13.3284 12.0306L13.3309 12.0362Z' fill='#8254C6'/>\r\n<path d='M16.0578 14.9099H15.9699C15.9023 14.9099 15.8374 14.883 15.7895 14.8352C15.7417 14.7874 15.7148 14.7225 15.7148 14.6549C15.7148 14.5872 15.7417 14.5223 15.7895 14.4745C15.8374 14.4267 15.9023 14.3998 15.9699 14.3998C16.1773 14.4092 16.3845 14.3775 16.5796 14.3065C16.7747 14.2355 16.9538 14.1266 17.1066 13.9861C17.2594 13.8455 17.3829 13.6761 17.4699 13.4876C17.557 13.2992 17.6058 13.0953 17.6138 12.8879C17.6138 12.8202 17.6406 12.7553 17.6885 12.7075C17.7363 12.6597 17.8012 12.6328 17.8688 12.6328C17.9365 12.6328 18.0013 12.6597 18.0492 12.7075C18.097 12.7553 18.1239 12.8202 18.1239 12.8879C18.106 13.4261 17.8812 13.9366 17.4964 14.3133C17.1116 14.6899 16.5963 14.9036 16.0578 14.9099Z' fill='#8254C6'/>\r\n<path d='M14.2288 13.0058C14.1953 13.0047 14.1624 12.9969 14.1319 12.9831C14.1014 12.9692 14.0739 12.9494 14.051 12.9249C14.0281 12.9004 14.0103 12.8717 13.9986 12.8403C13.9868 12.8089 13.9814 12.7755 13.9826 12.742C13.9935 12.4681 14.0583 12.199 14.1734 11.9502C14.2885 11.7014 14.4515 11.4777 14.6531 11.292C14.8548 11.1064 15.0911 10.9623 15.3485 10.8681C15.606 10.7739 15.8795 10.7314 16.1533 10.7431C16.221 10.7431 16.2859 10.77 16.3337 10.8178C16.3815 10.8656 16.4084 10.9305 16.4084 10.9982C16.4084 11.0658 16.3815 11.1307 16.3337 11.1785C16.2859 11.2263 16.221 11.2532 16.1533 11.2532C15.7351 11.2367 15.3273 11.3867 15.0194 11.6702C14.7114 11.9537 14.5283 12.3477 14.5103 12.7659C14.5103 12.8336 14.4834 12.8985 14.4356 12.9463C14.3877 12.9941 14.3229 13.021 14.2552 13.021L14.2288 13.0058Z' fill='#8254C6'/>\r\n<path d='M16.056 13.8471H16.0121C15.7507 13.8414 15.5021 13.7327 15.3203 13.5448C15.1385 13.3569 15.0382 13.1048 15.0411 12.8434C15.044 12.5819 15.1499 12.3322 15.3358 12.1483C15.5217 11.9644 15.7726 11.8613 16.0341 11.8613C16.2955 11.8613 16.5464 11.9644 16.7323 12.1483C16.9182 12.3322 17.0241 12.5819 17.027 12.8434C17.0299 13.1048 16.9296 13.3569 16.7478 13.5448C16.566 13.7327 16.3174 13.8414 16.056 13.8471ZM16.056 12.3176C15.9615 12.3202 15.8699 12.3505 15.7926 12.405C15.7153 12.4594 15.6558 12.5355 15.6216 12.6236C15.5874 12.7117 15.58 12.808 15.6003 12.9003C15.6207 12.9926 15.6678 13.0769 15.7359 13.1425C15.8039 13.2081 15.8898 13.2522 15.9828 13.2691C16.0758 13.2861 16.1718 13.2752 16.2586 13.2378C16.3454 13.2004 16.4192 13.1382 16.4708 13.059C16.5224 12.9798 16.5495 12.8871 16.5486 12.7926C16.5479 12.7289 16.5347 12.6659 16.5095 12.6074C16.4843 12.549 16.4477 12.4961 16.4018 12.4518C16.356 12.4076 16.3018 12.373 16.2424 12.35C16.1831 12.3269 16.1197 12.3159 16.056 12.3176Z' fill='#8254C6'/>\r\n<path d='M32.5997 22.8655C32.5006 19.0538 31.5441 15.3135 29.8013 11.9221C28.8198 10.0677 27.3524 8.51515 25.5563 7.43068C23.7601 6.3462 21.7029 5.77066 19.6047 5.76567C17.9819 5.7609 16.3786 6.11915 14.9122 6.81418C13.4458 7.50922 12.1533 8.52344 11.1296 9.78257C10.8745 10.1024 10.6499 10.3982 10.6722 10.6621C10.6879 10.7456 10.7201 10.8252 10.7669 10.8962C10.8138 10.9672 10.8743 11.0281 10.9449 11.0754C11.0567 11.177 11.1989 11.2388 11.3495 11.2513C11.6485 11.2513 11.9563 10.9315 12.229 10.6621L12.4576 10.4334C13.1113 9.71802 13.8456 9.0808 14.646 8.53448C16.1275 7.60952 17.839 7.11917 19.5855 7.11929C21.423 7.13786 23.2219 7.64925 24.7943 8.6001C26.3668 9.55094 27.6552 10.9064 28.5252 12.525C30.6176 16.322 31.1005 20.5204 31.3116 24.4965C31.3732 25.6567 31.3556 26.8152 31.3116 27.925V29.5952L23.7959 28.2152L24.0686 27.9426C26.9165 24.9843 28.0415 21.3416 27.4882 16.8289C27.3739 15.9494 27.0085 15.7216 26.4864 15.7216H26.1434C25.9104 15.7554 25.6753 15.773 25.4398 15.7743C24.1453 15.7546 22.8994 15.2783 21.9218 14.4295C21.315 13.9498 20.9623 13.6564 20.7177 13.6564C20.473 13.6564 20.19 14.0345 19.6783 14.7197C18.3247 16.5395 16.8127 17.4182 15.0457 17.4182C14.1985 17.3983 13.3618 17.2255 12.576 16.9081C12.3858 16.8295 12.1834 16.7848 11.9779 16.7762C11.818 16.7762 11.3447 16.7762 11.2743 17.6557C10.9545 21.6374 11.9339 24.8196 14.2454 27.3949C14.3637 27.527 14.4752 27.6649 14.5796 27.8082L14.7395 28.0017L14.9594 28.2744L8.05054 29.5313H7.9642C7.77071 29.5313 7.74433 29.3554 7.72434 29.1267C7.35617 25.2129 7.67739 21.2649 8.67339 17.4622C8.84929 16.7154 8.67339 16.4779 8.25123 16.3548C8.16604 16.3268 8.07706 16.312 7.98738 16.3108C7.87305 16.3108 7.53005 16.3108 7.33656 17.0488C6.15978 21.3244 5.84024 25.7905 6.3963 30.1901C6.40152 30.2721 6.40152 30.3543 6.3963 30.4363C7.89065 30.1165 9.40257 29.8383 10.9233 29.6456C11.2412 29.5567 11.5639 29.4862 11.8899 29.4345C12.1879 29.4031 12.4823 29.3442 12.7694 29.2586C13.259 29.1113 13.7629 29.017 14.2726 28.9772C14.3186 28.964 14.3673 28.964 14.4133 28.9772C14.9456 28.7718 15.5269 28.7289 16.0836 28.854H16.3826C16.4398 28.8698 16.49 28.9045 16.5252 28.9524C16.5603 29.0002 16.5782 29.0586 16.5761 29.1179C17.582 29.3461 18.6131 29.4437 19.6439 29.4081C20.7854 29.2624 21.9027 28.9667 22.9668 28.5286C23.0234 28.507 23.0861 28.507 23.1427 28.5286C23.6433 28.5101 24.1417 28.6033 24.6019 28.8013C24.761 28.7973 24.9193 28.8245 25.068 28.8812C27.4762 29.7607 30.0691 29.8743 32.487 30.6402C32.4769 30.532 32.4769 30.4231 32.487 30.3148C32.487 29.4353 32.5397 28.4951 32.5749 27.6076C32.5997 26.1004 32.6788 24.4654 32.5997 22.8655ZM22.667 27.263C21.7355 27.9973 20.5914 28.4105 19.4056 28.4407C18.4159 28.436 17.447 28.1561 16.6073 27.6323C14.0407 26.0764 12.1506 21.9012 12.6431 18.8422V18.6023L12.863 18.6639C13.5112 18.8379 14.1787 18.9296 14.8499 18.9365C15.963 18.9098 17.0549 18.627 18.0412 18.1103C19.0274 17.5935 19.8814 16.8566 20.537 15.9566L20.6249 15.8423L26.0746 17.6812V17.7868C26.9006 20.7139 25.1951 25.4344 22.6638 27.3013L22.667 27.263Z' fill='#8254C6'/>\r\n<path d='M6.60938 30.3646L16.1287 28.6057C16.1287 28.6057 18.6873 30.3023 23.0048 28.3242C32.0676 30.3726 32.0788 30.4686 32.0788 30.4686' stroke='#8254C6' stroke-width='0.262956' stroke-miterlimit='10'/>\r\n<path d='M8.91211 14.4964L9.59812 12.8877' stroke='#8254C6' stroke-width='0.797349' stroke-miterlimit='10' stroke-linecap='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_16159_32828'>\r\n<rect width='34.778' height='34.778' fill='white' transform='translate(0.113281 0.111328)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
                            },
                            {
                              value: "stomach_ache",
                              meaning: "\u062f\u0644\u200c\u062f\u0631\u062f",
                              icon: "\ud83e\udd22"
                            },
                            {
                              value: "chest_pain",
                              meaning:
                                "\u062f\u0631\u062f \u0642\u0641\u0633\u0647 \u0633\u06cc\u0646\u0647",
                              icon: "\ud83d\udc94"
                            },
                            {
                              value: "contusion",
                              meaning: "\u06a9\u0628\u0648\u062f\u06cc",
                              icon: "\ud83e\ude79"
                            },
                            {
                              value: "back_ache",
                              meaning: "\u06a9\u0645\u0631\u062f\u0631\u062f",
                              icon: "\ud83d\udeb6\u200d\u2642\ufe0f\ud83d\udca2"
                            },
                            {
                              value: "foot_ache",
                              meaning: "\u062f\u0631\u062f \u067e\u0627",
                              icon: "\ud83e\uddb6\ud83d\udca5"
                            },
                            {
                              value: "nausea",
                              meaning:
                                "\u062d\u0627\u0644\u062a \u062a\u0647\u0648\u0639",
                              icon: "\ud83e\udd2e"
                            }
                          ];
                        }
                        throw e;
                      }
                    })()}
                    className={classNames("__wab_instance", sty.womans)}
                    list={generateStateValueProp($state, ["womans", "list"])}
                    onListChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "womans",
                        "list"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    onSelectOneChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "womans",
                        "selectOne"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    selectOne={generateStateValueProp($state, [
                      "womans",
                      "selectOne"
                    ])}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"selectionBox6"}
                  data-plasmic-override={overrides.selectionBox6}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.selectionBox6)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__io863
                    )}
                  >
                    {
                      "\u0628\u06cc\u0645\u0627\u0631\u06cc \u0627\u0631\u062b\u06cc"
                    }
                  </div>
                  <Choices
                    data-plasmic-name={"hereditary"}
                    data-plasmic-override={overrides.hereditary}
                    beforList={(() => {
                      try {
                        return $state.signs.hereditary;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [
                            {
                              value: "headache",
                              meaning: "\u0633\u0631\u062f\u0631\u062f",
                              icon: "<svg width='35' height='35' viewBox='0 0 35 35' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_16159_32828)'>\r\n<path d='M4.98039 9.10027H4.91003C4.82972 9.08719 4.75405 9.0539 4.69015 9.00352L1.17217 6.2435C1.11967 6.20828 1.07462 6.16306 1.0396 6.11042C1.00458 6.05778 0.980266 5.99876 0.968053 5.93673C0.95584 5.8747 0.955964 5.81087 0.968419 5.74889C0.980874 5.68691 1.00542 5.62799 1.04064 5.57549C1.07587 5.52299 1.12109 5.47794 1.17373 5.44292C1.22636 5.4079 1.28538 5.38359 1.34741 5.37137C1.40944 5.35916 1.47327 5.35928 1.53526 5.37174C1.59724 5.38419 1.65616 5.40874 1.70866 5.44396H1.76143L4.61979 7.68508L4.84846 6.05001C4.86447 5.93542 4.92135 5.83048 5.00862 5.75452C5.0959 5.67856 5.20769 5.6367 5.3234 5.63665H5.39375C5.47324 5.64713 5.54883 5.67737 5.61362 5.7246L8.83978 8.22077C8.89784 8.25377 8.9483 8.29864 8.98785 8.35246C9.0274 8.40628 9.05514 8.46783 9.06929 8.5331C9.08343 8.59838 9.08365 8.6659 9.06993 8.73126C9.05621 8.79662 9.02885 8.85835 8.98966 8.91243C8.95046 8.9665 8.9003 9.0117 8.84245 9.04507C8.7846 9.07845 8.72036 9.09924 8.65392 9.1061C8.58749 9.11297 8.52035 9.10574 8.4569 9.08489C8.39345 9.06405 8.33512 9.03006 8.2857 8.98513L5.64721 7.05104L5.40734 8.71249C5.3875 8.81514 5.33465 8.9085 5.25686 8.97836C5.17906 9.04821 5.08058 9.09074 4.97639 9.09947L4.98039 9.10027Z' fill='#8254C6'/>\r\n<path d='M11.0898 6.07609C11.0094 6.07631 10.9301 6.05629 10.8594 6.01787C10.7887 5.97945 10.7288 5.92386 10.6853 5.85622L9.75378 4.39706L9.39318 5.03669C9.3525 5.11344 9.29174 5.1777 9.21739 5.22262C9.14304 5.26754 9.05789 5.29144 8.97102 5.29174C8.88699 5.29281 8.80409 5.27236 8.7302 5.23233C8.6563 5.19231 8.59388 5.13404 8.54887 5.06308L7.13368 2.68124C7.08823 2.62737 7.05486 2.56437 7.03584 2.4965C7.01682 2.42863 7.0126 2.35747 7.02345 2.28783C7.03429 2.21819 7.05995 2.15168 7.09871 2.09281C7.13746 2.03394 7.1884 1.98407 7.24808 1.94657C7.30777 1.90907 7.37479 1.88482 7.44465 1.87546C7.51451 1.86609 7.58557 1.87184 7.65302 1.89229C7.72047 1.91274 7.78275 1.94744 7.83564 1.99402C7.88853 2.04061 7.9308 2.09801 7.9596 2.16233L8.97023 3.82378L9.32203 3.19934C9.36446 3.12757 9.42486 3.0681 9.49727 3.02678C9.56969 2.98547 9.65162 2.96374 9.73499 2.96374C9.81836 2.96374 9.90029 2.98547 9.97271 3.02678C10.0451 3.0681 10.1055 3.12757 10.148 3.19934L11.528 5.34371C11.5626 5.39723 11.5863 5.45713 11.5976 5.51991C11.6088 5.58268 11.6075 5.64707 11.5935 5.70931C11.5796 5.77155 11.5534 5.83039 11.5165 5.88238C11.4796 5.93438 11.4326 5.97849 11.3784 6.01213L11.2817 6.0649C11.2185 6.08096 11.1526 6.08395 11.0882 6.0737L11.0898 6.07609Z' fill='#8254C6'/>\r\n<path d='M7.54056 1.9894C7.61081 1.9891 7.67998 2.00671 7.74153 2.04057C7.80309 2.07442 7.855 2.12341 7.89236 2.18289L8.83262 3.7388L8.95575 3.94109L9.07009 3.73001L9.34273 3.2111C9.37929 3.14928 9.43134 3.09805 9.49373 3.06247C9.55612 3.02688 9.6267 3.00816 9.69853 3.00816C9.77035 3.00816 9.84094 3.02688 9.90333 3.06247C9.96572 3.09805 10.0178 3.14928 10.0543 3.2111L11.4343 5.35548C11.4638 5.40109 11.484 5.45207 11.4938 5.50549C11.5035 5.55891 11.5027 5.61374 11.4912 5.66683C11.4798 5.71992 11.458 5.77023 11.4271 5.8149C11.3962 5.85957 11.3568 5.89771 11.3112 5.92715H11.2233V6.03269V5.93594C11.1344 5.9687 11.0371 5.96997 10.9474 5.93956C10.8578 5.90914 10.7813 5.84888 10.7307 5.76884L9.85124 4.40962L9.72811 4.21613L9.61378 4.41841L9.30596 4.97249C9.26877 5.0362 9.21553 5.08905 9.15156 5.12578C9.0876 5.16251 9.01512 5.18184 8.94136 5.18184C8.86759 5.18184 8.79512 5.16251 8.73115 5.12578C8.66718 5.08905 8.61396 5.0362 8.57677 4.97249L7.16158 2.58186C7.12221 2.51919 7.10038 2.44709 7.09839 2.3731C7.0964 2.29911 7.11432 2.22594 7.15027 2.16124C7.18621 2.09654 7.23887 2.04267 7.30275 2.00527C7.36662 1.96787 7.43936 1.94831 7.51338 1.94863M7.51338 1.80791C7.40973 1.80456 7.30721 1.83037 7.2175 1.8824C7.12779 1.93443 7.05448 2.0106 7.00592 2.10223C6.95735 2.19386 6.93548 2.29728 6.94278 2.40073C6.95009 2.50418 6.98628 2.60351 7.04724 2.6874L8.49762 5.08603C8.54638 5.16873 8.61578 5.23733 8.69904 5.28513C8.7823 5.33292 8.87654 5.35827 8.97254 5.35867C9.06935 5.3591 9.16459 5.33415 9.24876 5.28632C9.33293 5.23848 9.4031 5.16943 9.45227 5.08603L9.76009 4.53195L10.6396 5.89117C10.7083 5.99956 10.8125 6.08073 10.9344 6.12083C11.0563 6.16093 11.1884 6.15747 11.308 6.11104C11.3866 6.08238 11.4578 6.03629 11.516 5.9762C11.5743 5.91612 11.6182 5.84362 11.6444 5.76414C11.6707 5.68466 11.6786 5.60027 11.6675 5.51731C11.6565 5.43434 11.6268 5.35496 11.5807 5.28512L10.2006 3.14074C10.1513 3.05897 10.0817 2.99132 9.9986 2.94436C9.91546 2.8974 9.8216 2.87272 9.72611 2.87272C9.63063 2.87272 9.53675 2.8974 9.45361 2.94436C9.37047 2.99132 9.30088 3.05897 9.25158 3.14074L8.97893 3.65965L8.03788 2.10374C7.98778 2.02558 7.91882 1.96126 7.83738 1.91669C7.75593 1.87212 7.66459 1.84874 7.57174 1.84868L7.51338 1.80791Z' fill='#8254C6'/>\r\n<path d='M16.0555 15.9995C15.6679 15.999 15.2836 15.9275 14.9218 15.7885C14.8861 15.7816 14.8523 15.7672 14.8226 15.7462C14.793 15.7253 14.7681 15.6982 14.7498 15.6668C14.7314 15.6355 14.72 15.6006 14.7162 15.5644C14.7125 15.5283 14.7164 15.4918 14.7279 15.4573C14.7394 15.4229 14.7581 15.3912 14.7828 15.3646C14.8075 15.338 14.8376 15.3169 14.8711 15.3028C14.9046 15.2888 14.9407 15.282 14.977 15.283C15.0134 15.284 15.049 15.2928 15.0817 15.3087C15.4086 15.4381 15.758 15.5009 16.1095 15.4934C16.461 15.4858 16.8074 15.4081 17.1285 15.2648C17.4495 15.1215 17.7386 14.9155 17.9789 14.6589C18.2192 14.4022 18.4058 14.1002 18.5277 13.7704C18.5346 13.7347 18.549 13.7009 18.5699 13.6713C18.5909 13.6416 18.618 13.6168 18.6493 13.5984C18.6807 13.5801 18.7156 13.5686 18.7517 13.5649C18.7879 13.5611 18.8244 13.5651 18.8588 13.5766C18.8933 13.5881 18.9249 13.6068 18.9516 13.6315C18.9782 13.6562 18.9993 13.6863 19.0133 13.7198C19.0274 13.7532 19.0342 13.7894 19.0331 13.8257C19.0321 13.862 19.0234 13.8977 19.0074 13.9303C18.7832 14.5346 18.3807 15.0565 17.8533 15.427C17.3259 15.7975 16.6984 15.9991 16.0539 16.0051L16.0555 15.9995Z' fill='#8254C6'/>\r\n<path d='M13.3309 12.0362H13.2429C13.1802 12.0125 13.1294 11.965 13.1014 11.9041C13.0734 11.8433 13.0706 11.7738 13.0934 11.7108C13.2414 11.321 13.4648 10.9642 13.7509 10.6607C14.0369 10.3573 14.3799 10.1132 14.7603 9.94244C15.1407 9.77165 15.551 9.67752 15.9678 9.6654C16.3846 9.65329 16.7998 9.72344 17.1894 9.87184C17.245 9.89894 17.2889 9.94531 17.3128 10.0023C17.3367 10.0593 17.3392 10.1231 17.3196 10.1817C17.3001 10.2404 17.2599 10.29 17.2065 10.3212C17.1531 10.3524 17.0902 10.3632 17.0295 10.3516C16.7021 10.2224 16.3521 10.16 16.0002 10.1681C15.6483 10.1762 15.3016 10.2547 14.9805 10.3989C14.6593 10.543 14.3703 10.75 14.1304 11.0076C13.8905 11.2652 13.7045 11.5681 13.5835 11.8987C13.5591 11.9437 13.5218 11.9804 13.4763 12.0039C13.4308 12.0275 13.3793 12.0368 13.3284 12.0306L13.3309 12.0362Z' fill='#8254C6'/>\r\n<path d='M16.0578 14.9099H15.9699C15.9023 14.9099 15.8374 14.883 15.7895 14.8352C15.7417 14.7874 15.7148 14.7225 15.7148 14.6549C15.7148 14.5872 15.7417 14.5223 15.7895 14.4745C15.8374 14.4267 15.9023 14.3998 15.9699 14.3998C16.1773 14.4092 16.3845 14.3775 16.5796 14.3065C16.7747 14.2355 16.9538 14.1266 17.1066 13.9861C17.2594 13.8455 17.3829 13.6761 17.4699 13.4876C17.557 13.2992 17.6058 13.0953 17.6138 12.8879C17.6138 12.8202 17.6406 12.7553 17.6885 12.7075C17.7363 12.6597 17.8012 12.6328 17.8688 12.6328C17.9365 12.6328 18.0013 12.6597 18.0492 12.7075C18.097 12.7553 18.1239 12.8202 18.1239 12.8879C18.106 13.4261 17.8812 13.9366 17.4964 14.3133C17.1116 14.6899 16.5963 14.9036 16.0578 14.9099Z' fill='#8254C6'/>\r\n<path d='M14.2288 13.0058C14.1953 13.0047 14.1624 12.9969 14.1319 12.9831C14.1014 12.9692 14.0739 12.9494 14.051 12.9249C14.0281 12.9004 14.0103 12.8717 13.9986 12.8403C13.9868 12.8089 13.9814 12.7755 13.9826 12.742C13.9935 12.4681 14.0583 12.199 14.1734 11.9502C14.2885 11.7014 14.4515 11.4777 14.6531 11.292C14.8548 11.1064 15.0911 10.9623 15.3485 10.8681C15.606 10.7739 15.8795 10.7314 16.1533 10.7431C16.221 10.7431 16.2859 10.77 16.3337 10.8178C16.3815 10.8656 16.4084 10.9305 16.4084 10.9982C16.4084 11.0658 16.3815 11.1307 16.3337 11.1785C16.2859 11.2263 16.221 11.2532 16.1533 11.2532C15.7351 11.2367 15.3273 11.3867 15.0194 11.6702C14.7114 11.9537 14.5283 12.3477 14.5103 12.7659C14.5103 12.8336 14.4834 12.8985 14.4356 12.9463C14.3877 12.9941 14.3229 13.021 14.2552 13.021L14.2288 13.0058Z' fill='#8254C6'/>\r\n<path d='M16.056 13.8471H16.0121C15.7507 13.8414 15.5021 13.7327 15.3203 13.5448C15.1385 13.3569 15.0382 13.1048 15.0411 12.8434C15.044 12.5819 15.1499 12.3322 15.3358 12.1483C15.5217 11.9644 15.7726 11.8613 16.0341 11.8613C16.2955 11.8613 16.5464 11.9644 16.7323 12.1483C16.9182 12.3322 17.0241 12.5819 17.027 12.8434C17.0299 13.1048 16.9296 13.3569 16.7478 13.5448C16.566 13.7327 16.3174 13.8414 16.056 13.8471ZM16.056 12.3176C15.9615 12.3202 15.8699 12.3505 15.7926 12.405C15.7153 12.4594 15.6558 12.5355 15.6216 12.6236C15.5874 12.7117 15.58 12.808 15.6003 12.9003C15.6207 12.9926 15.6678 13.0769 15.7359 13.1425C15.8039 13.2081 15.8898 13.2522 15.9828 13.2691C16.0758 13.2861 16.1718 13.2752 16.2586 13.2378C16.3454 13.2004 16.4192 13.1382 16.4708 13.059C16.5224 12.9798 16.5495 12.8871 16.5486 12.7926C16.5479 12.7289 16.5347 12.6659 16.5095 12.6074C16.4843 12.549 16.4477 12.4961 16.4018 12.4518C16.356 12.4076 16.3018 12.373 16.2424 12.35C16.1831 12.3269 16.1197 12.3159 16.056 12.3176Z' fill='#8254C6'/>\r\n<path d='M32.5997 22.8655C32.5006 19.0538 31.5441 15.3135 29.8013 11.9221C28.8198 10.0677 27.3524 8.51515 25.5563 7.43068C23.7601 6.3462 21.7029 5.77066 19.6047 5.76567C17.9819 5.7609 16.3786 6.11915 14.9122 6.81418C13.4458 7.50922 12.1533 8.52344 11.1296 9.78257C10.8745 10.1024 10.6499 10.3982 10.6722 10.6621C10.6879 10.7456 10.7201 10.8252 10.7669 10.8962C10.8138 10.9672 10.8743 11.0281 10.9449 11.0754C11.0567 11.177 11.1989 11.2388 11.3495 11.2513C11.6485 11.2513 11.9563 10.9315 12.229 10.6621L12.4576 10.4334C13.1113 9.71802 13.8456 9.0808 14.646 8.53448C16.1275 7.60952 17.839 7.11917 19.5855 7.11929C21.423 7.13786 23.2219 7.64925 24.7943 8.6001C26.3668 9.55094 27.6552 10.9064 28.5252 12.525C30.6176 16.322 31.1005 20.5204 31.3116 24.4965C31.3732 25.6567 31.3556 26.8152 31.3116 27.925V29.5952L23.7959 28.2152L24.0686 27.9426C26.9165 24.9843 28.0415 21.3416 27.4882 16.8289C27.3739 15.9494 27.0085 15.7216 26.4864 15.7216H26.1434C25.9104 15.7554 25.6753 15.773 25.4398 15.7743C24.1453 15.7546 22.8994 15.2783 21.9218 14.4295C21.315 13.9498 20.9623 13.6564 20.7177 13.6564C20.473 13.6564 20.19 14.0345 19.6783 14.7197C18.3247 16.5395 16.8127 17.4182 15.0457 17.4182C14.1985 17.3983 13.3618 17.2255 12.576 16.9081C12.3858 16.8295 12.1834 16.7848 11.9779 16.7762C11.818 16.7762 11.3447 16.7762 11.2743 17.6557C10.9545 21.6374 11.9339 24.8196 14.2454 27.3949C14.3637 27.527 14.4752 27.6649 14.5796 27.8082L14.7395 28.0017L14.9594 28.2744L8.05054 29.5313H7.9642C7.77071 29.5313 7.74433 29.3554 7.72434 29.1267C7.35617 25.2129 7.67739 21.2649 8.67339 17.4622C8.84929 16.7154 8.67339 16.4779 8.25123 16.3548C8.16604 16.3268 8.07706 16.312 7.98738 16.3108C7.87305 16.3108 7.53005 16.3108 7.33656 17.0488C6.15978 21.3244 5.84024 25.7905 6.3963 30.1901C6.40152 30.2721 6.40152 30.3543 6.3963 30.4363C7.89065 30.1165 9.40257 29.8383 10.9233 29.6456C11.2412 29.5567 11.5639 29.4862 11.8899 29.4345C12.1879 29.4031 12.4823 29.3442 12.7694 29.2586C13.259 29.1113 13.7629 29.017 14.2726 28.9772C14.3186 28.964 14.3673 28.964 14.4133 28.9772C14.9456 28.7718 15.5269 28.7289 16.0836 28.854H16.3826C16.4398 28.8698 16.49 28.9045 16.5252 28.9524C16.5603 29.0002 16.5782 29.0586 16.5761 29.1179C17.582 29.3461 18.6131 29.4437 19.6439 29.4081C20.7854 29.2624 21.9027 28.9667 22.9668 28.5286C23.0234 28.507 23.0861 28.507 23.1427 28.5286C23.6433 28.5101 24.1417 28.6033 24.6019 28.8013C24.761 28.7973 24.9193 28.8245 25.068 28.8812C27.4762 29.7607 30.0691 29.8743 32.487 30.6402C32.4769 30.532 32.4769 30.4231 32.487 30.3148C32.487 29.4353 32.5397 28.4951 32.5749 27.6076C32.5997 26.1004 32.6788 24.4654 32.5997 22.8655ZM22.667 27.263C21.7355 27.9973 20.5914 28.4105 19.4056 28.4407C18.4159 28.436 17.447 28.1561 16.6073 27.6323C14.0407 26.0764 12.1506 21.9012 12.6431 18.8422V18.6023L12.863 18.6639C13.5112 18.8379 14.1787 18.9296 14.8499 18.9365C15.963 18.9098 17.0549 18.627 18.0412 18.1103C19.0274 17.5935 19.8814 16.8566 20.537 15.9566L20.6249 15.8423L26.0746 17.6812V17.7868C26.9006 20.7139 25.1951 25.4344 22.6638 27.3013L22.667 27.263Z' fill='#8254C6'/>\r\n<path d='M6.60938 30.3646L16.1287 28.6057C16.1287 28.6057 18.6873 30.3023 23.0048 28.3242C32.0676 30.3726 32.0788 30.4686 32.0788 30.4686' stroke='#8254C6' stroke-width='0.262956' stroke-miterlimit='10'/>\r\n<path d='M8.91211 14.4964L9.59812 12.8877' stroke='#8254C6' stroke-width='0.797349' stroke-miterlimit='10' stroke-linecap='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_16159_32828'>\r\n<rect width='34.778' height='34.778' fill='white' transform='translate(0.113281 0.111328)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
                            },
                            {
                              value: "stomach_ache",
                              meaning: "\u062f\u0644\u200c\u062f\u0631\u062f",
                              icon: "\ud83e\udd22"
                            },
                            {
                              value: "chest_pain",
                              meaning:
                                "\u062f\u0631\u062f \u0642\u0641\u0633\u0647 \u0633\u06cc\u0646\u0647",
                              icon: "\ud83d\udc94"
                            },
                            {
                              value: "contusion",
                              meaning: "\u06a9\u0628\u0648\u062f\u06cc",
                              icon: "\ud83e\ude79"
                            },
                            {
                              value: "back_ache",
                              meaning: "\u06a9\u0645\u0631\u062f\u0631\u062f",
                              icon: "\ud83d\udeb6\u200d\u2642\ufe0f\ud83d\udca2"
                            },
                            {
                              value: "foot_ache",
                              meaning: "\u062f\u0631\u062f \u067e\u0627",
                              icon: "\ud83e\uddb6\ud83d\udca5"
                            },
                            {
                              value: "nausea",
                              meaning:
                                "\u062d\u0627\u0644\u062a \u062a\u0647\u0648\u0639",
                              icon: "\ud83e\udd2e"
                            }
                          ];
                        }
                        throw e;
                      }
                    })()}
                    className={classNames("__wab_instance", sty.hereditary)}
                    list={generateStateValueProp($state, [
                      "hereditary",
                      "list"
                    ])}
                    onListChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "hereditary",
                        "list"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    onSelectOneChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "hereditary",
                        "selectOne"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    selectOne={generateStateValueProp($state, [
                      "hereditary",
                      "selectOne"
                    ])}
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"selectionBox7"}
                  data-plasmic-override={overrides.selectionBox7}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.selectionBox7)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nGJqJ
                    )}
                  >
                    {
                      "\u0628\u06cc\u0645\u0627\u0631\u06cc \u0645\u0642\u0627\u0631\u0628\u062a\u06cc"
                    }
                  </div>
                  <Choices
                    data-plasmic-name={"venereal"}
                    data-plasmic-override={overrides.venereal}
                    beforList={(() => {
                      try {
                        return $state.signs.venereal;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [
                            {
                              value: "headache",
                              meaning: "\u0633\u0631\u062f\u0631\u062f",
                              icon: "<svg width='35' height='35' viewBox='0 0 35 35' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n<g clip-path='url(#clip0_16159_32828)'>\r\n<path d='M4.98039 9.10027H4.91003C4.82972 9.08719 4.75405 9.0539 4.69015 9.00352L1.17217 6.2435C1.11967 6.20828 1.07462 6.16306 1.0396 6.11042C1.00458 6.05778 0.980266 5.99876 0.968053 5.93673C0.95584 5.8747 0.955964 5.81087 0.968419 5.74889C0.980874 5.68691 1.00542 5.62799 1.04064 5.57549C1.07587 5.52299 1.12109 5.47794 1.17373 5.44292C1.22636 5.4079 1.28538 5.38359 1.34741 5.37137C1.40944 5.35916 1.47327 5.35928 1.53526 5.37174C1.59724 5.38419 1.65616 5.40874 1.70866 5.44396H1.76143L4.61979 7.68508L4.84846 6.05001C4.86447 5.93542 4.92135 5.83048 5.00862 5.75452C5.0959 5.67856 5.20769 5.6367 5.3234 5.63665H5.39375C5.47324 5.64713 5.54883 5.67737 5.61362 5.7246L8.83978 8.22077C8.89784 8.25377 8.9483 8.29864 8.98785 8.35246C9.0274 8.40628 9.05514 8.46783 9.06929 8.5331C9.08343 8.59838 9.08365 8.6659 9.06993 8.73126C9.05621 8.79662 9.02885 8.85835 8.98966 8.91243C8.95046 8.9665 8.9003 9.0117 8.84245 9.04507C8.7846 9.07845 8.72036 9.09924 8.65392 9.1061C8.58749 9.11297 8.52035 9.10574 8.4569 9.08489C8.39345 9.06405 8.33512 9.03006 8.2857 8.98513L5.64721 7.05104L5.40734 8.71249C5.3875 8.81514 5.33465 8.9085 5.25686 8.97836C5.17906 9.04821 5.08058 9.09074 4.97639 9.09947L4.98039 9.10027Z' fill='#8254C6'/>\r\n<path d='M11.0898 6.07609C11.0094 6.07631 10.9301 6.05629 10.8594 6.01787C10.7887 5.97945 10.7288 5.92386 10.6853 5.85622L9.75378 4.39706L9.39318 5.03669C9.3525 5.11344 9.29174 5.1777 9.21739 5.22262C9.14304 5.26754 9.05789 5.29144 8.97102 5.29174C8.88699 5.29281 8.80409 5.27236 8.7302 5.23233C8.6563 5.19231 8.59388 5.13404 8.54887 5.06308L7.13368 2.68124C7.08823 2.62737 7.05486 2.56437 7.03584 2.4965C7.01682 2.42863 7.0126 2.35747 7.02345 2.28783C7.03429 2.21819 7.05995 2.15168 7.09871 2.09281C7.13746 2.03394 7.1884 1.98407 7.24808 1.94657C7.30777 1.90907 7.37479 1.88482 7.44465 1.87546C7.51451 1.86609 7.58557 1.87184 7.65302 1.89229C7.72047 1.91274 7.78275 1.94744 7.83564 1.99402C7.88853 2.04061 7.9308 2.09801 7.9596 2.16233L8.97023 3.82378L9.32203 3.19934C9.36446 3.12757 9.42486 3.0681 9.49727 3.02678C9.56969 2.98547 9.65162 2.96374 9.73499 2.96374C9.81836 2.96374 9.90029 2.98547 9.97271 3.02678C10.0451 3.0681 10.1055 3.12757 10.148 3.19934L11.528 5.34371C11.5626 5.39723 11.5863 5.45713 11.5976 5.51991C11.6088 5.58268 11.6075 5.64707 11.5935 5.70931C11.5796 5.77155 11.5534 5.83039 11.5165 5.88238C11.4796 5.93438 11.4326 5.97849 11.3784 6.01213L11.2817 6.0649C11.2185 6.08096 11.1526 6.08395 11.0882 6.0737L11.0898 6.07609Z' fill='#8254C6'/>\r\n<path d='M7.54056 1.9894C7.61081 1.9891 7.67998 2.00671 7.74153 2.04057C7.80309 2.07442 7.855 2.12341 7.89236 2.18289L8.83262 3.7388L8.95575 3.94109L9.07009 3.73001L9.34273 3.2111C9.37929 3.14928 9.43134 3.09805 9.49373 3.06247C9.55612 3.02688 9.6267 3.00816 9.69853 3.00816C9.77035 3.00816 9.84094 3.02688 9.90333 3.06247C9.96572 3.09805 10.0178 3.14928 10.0543 3.2111L11.4343 5.35548C11.4638 5.40109 11.484 5.45207 11.4938 5.50549C11.5035 5.55891 11.5027 5.61374 11.4912 5.66683C11.4798 5.71992 11.458 5.77023 11.4271 5.8149C11.3962 5.85957 11.3568 5.89771 11.3112 5.92715H11.2233V6.03269V5.93594C11.1344 5.9687 11.0371 5.96997 10.9474 5.93956C10.8578 5.90914 10.7813 5.84888 10.7307 5.76884L9.85124 4.40962L9.72811 4.21613L9.61378 4.41841L9.30596 4.97249C9.26877 5.0362 9.21553 5.08905 9.15156 5.12578C9.0876 5.16251 9.01512 5.18184 8.94136 5.18184C8.86759 5.18184 8.79512 5.16251 8.73115 5.12578C8.66718 5.08905 8.61396 5.0362 8.57677 4.97249L7.16158 2.58186C7.12221 2.51919 7.10038 2.44709 7.09839 2.3731C7.0964 2.29911 7.11432 2.22594 7.15027 2.16124C7.18621 2.09654 7.23887 2.04267 7.30275 2.00527C7.36662 1.96787 7.43936 1.94831 7.51338 1.94863M7.51338 1.80791C7.40973 1.80456 7.30721 1.83037 7.2175 1.8824C7.12779 1.93443 7.05448 2.0106 7.00592 2.10223C6.95735 2.19386 6.93548 2.29728 6.94278 2.40073C6.95009 2.50418 6.98628 2.60351 7.04724 2.6874L8.49762 5.08603C8.54638 5.16873 8.61578 5.23733 8.69904 5.28513C8.7823 5.33292 8.87654 5.35827 8.97254 5.35867C9.06935 5.3591 9.16459 5.33415 9.24876 5.28632C9.33293 5.23848 9.4031 5.16943 9.45227 5.08603L9.76009 4.53195L10.6396 5.89117C10.7083 5.99956 10.8125 6.08073 10.9344 6.12083C11.0563 6.16093 11.1884 6.15747 11.308 6.11104C11.3866 6.08238 11.4578 6.03629 11.516 5.9762C11.5743 5.91612 11.6182 5.84362 11.6444 5.76414C11.6707 5.68466 11.6786 5.60027 11.6675 5.51731C11.6565 5.43434 11.6268 5.35496 11.5807 5.28512L10.2006 3.14074C10.1513 3.05897 10.0817 2.99132 9.9986 2.94436C9.91546 2.8974 9.8216 2.87272 9.72611 2.87272C9.63063 2.87272 9.53675 2.8974 9.45361 2.94436C9.37047 2.99132 9.30088 3.05897 9.25158 3.14074L8.97893 3.65965L8.03788 2.10374C7.98778 2.02558 7.91882 1.96126 7.83738 1.91669C7.75593 1.87212 7.66459 1.84874 7.57174 1.84868L7.51338 1.80791Z' fill='#8254C6'/>\r\n<path d='M16.0555 15.9995C15.6679 15.999 15.2836 15.9275 14.9218 15.7885C14.8861 15.7816 14.8523 15.7672 14.8226 15.7462C14.793 15.7253 14.7681 15.6982 14.7498 15.6668C14.7314 15.6355 14.72 15.6006 14.7162 15.5644C14.7125 15.5283 14.7164 15.4918 14.7279 15.4573C14.7394 15.4229 14.7581 15.3912 14.7828 15.3646C14.8075 15.338 14.8376 15.3169 14.8711 15.3028C14.9046 15.2888 14.9407 15.282 14.977 15.283C15.0134 15.284 15.049 15.2928 15.0817 15.3087C15.4086 15.4381 15.758 15.5009 16.1095 15.4934C16.461 15.4858 16.8074 15.4081 17.1285 15.2648C17.4495 15.1215 17.7386 14.9155 17.9789 14.6589C18.2192 14.4022 18.4058 14.1002 18.5277 13.7704C18.5346 13.7347 18.549 13.7009 18.5699 13.6713C18.5909 13.6416 18.618 13.6168 18.6493 13.5984C18.6807 13.5801 18.7156 13.5686 18.7517 13.5649C18.7879 13.5611 18.8244 13.5651 18.8588 13.5766C18.8933 13.5881 18.9249 13.6068 18.9516 13.6315C18.9782 13.6562 18.9993 13.6863 19.0133 13.7198C19.0274 13.7532 19.0342 13.7894 19.0331 13.8257C19.0321 13.862 19.0234 13.8977 19.0074 13.9303C18.7832 14.5346 18.3807 15.0565 17.8533 15.427C17.3259 15.7975 16.6984 15.9991 16.0539 16.0051L16.0555 15.9995Z' fill='#8254C6'/>\r\n<path d='M13.3309 12.0362H13.2429C13.1802 12.0125 13.1294 11.965 13.1014 11.9041C13.0734 11.8433 13.0706 11.7738 13.0934 11.7108C13.2414 11.321 13.4648 10.9642 13.7509 10.6607C14.0369 10.3573 14.3799 10.1132 14.7603 9.94244C15.1407 9.77165 15.551 9.67752 15.9678 9.6654C16.3846 9.65329 16.7998 9.72344 17.1894 9.87184C17.245 9.89894 17.2889 9.94531 17.3128 10.0023C17.3367 10.0593 17.3392 10.1231 17.3196 10.1817C17.3001 10.2404 17.2599 10.29 17.2065 10.3212C17.1531 10.3524 17.0902 10.3632 17.0295 10.3516C16.7021 10.2224 16.3521 10.16 16.0002 10.1681C15.6483 10.1762 15.3016 10.2547 14.9805 10.3989C14.6593 10.543 14.3703 10.75 14.1304 11.0076C13.8905 11.2652 13.7045 11.5681 13.5835 11.8987C13.5591 11.9437 13.5218 11.9804 13.4763 12.0039C13.4308 12.0275 13.3793 12.0368 13.3284 12.0306L13.3309 12.0362Z' fill='#8254C6'/>\r\n<path d='M16.0578 14.9099H15.9699C15.9023 14.9099 15.8374 14.883 15.7895 14.8352C15.7417 14.7874 15.7148 14.7225 15.7148 14.6549C15.7148 14.5872 15.7417 14.5223 15.7895 14.4745C15.8374 14.4267 15.9023 14.3998 15.9699 14.3998C16.1773 14.4092 16.3845 14.3775 16.5796 14.3065C16.7747 14.2355 16.9538 14.1266 17.1066 13.9861C17.2594 13.8455 17.3829 13.6761 17.4699 13.4876C17.557 13.2992 17.6058 13.0953 17.6138 12.8879C17.6138 12.8202 17.6406 12.7553 17.6885 12.7075C17.7363 12.6597 17.8012 12.6328 17.8688 12.6328C17.9365 12.6328 18.0013 12.6597 18.0492 12.7075C18.097 12.7553 18.1239 12.8202 18.1239 12.8879C18.106 13.4261 17.8812 13.9366 17.4964 14.3133C17.1116 14.6899 16.5963 14.9036 16.0578 14.9099Z' fill='#8254C6'/>\r\n<path d='M14.2288 13.0058C14.1953 13.0047 14.1624 12.9969 14.1319 12.9831C14.1014 12.9692 14.0739 12.9494 14.051 12.9249C14.0281 12.9004 14.0103 12.8717 13.9986 12.8403C13.9868 12.8089 13.9814 12.7755 13.9826 12.742C13.9935 12.4681 14.0583 12.199 14.1734 11.9502C14.2885 11.7014 14.4515 11.4777 14.6531 11.292C14.8548 11.1064 15.0911 10.9623 15.3485 10.8681C15.606 10.7739 15.8795 10.7314 16.1533 10.7431C16.221 10.7431 16.2859 10.77 16.3337 10.8178C16.3815 10.8656 16.4084 10.9305 16.4084 10.9982C16.4084 11.0658 16.3815 11.1307 16.3337 11.1785C16.2859 11.2263 16.221 11.2532 16.1533 11.2532C15.7351 11.2367 15.3273 11.3867 15.0194 11.6702C14.7114 11.9537 14.5283 12.3477 14.5103 12.7659C14.5103 12.8336 14.4834 12.8985 14.4356 12.9463C14.3877 12.9941 14.3229 13.021 14.2552 13.021L14.2288 13.0058Z' fill='#8254C6'/>\r\n<path d='M16.056 13.8471H16.0121C15.7507 13.8414 15.5021 13.7327 15.3203 13.5448C15.1385 13.3569 15.0382 13.1048 15.0411 12.8434C15.044 12.5819 15.1499 12.3322 15.3358 12.1483C15.5217 11.9644 15.7726 11.8613 16.0341 11.8613C16.2955 11.8613 16.5464 11.9644 16.7323 12.1483C16.9182 12.3322 17.0241 12.5819 17.027 12.8434C17.0299 13.1048 16.9296 13.3569 16.7478 13.5448C16.566 13.7327 16.3174 13.8414 16.056 13.8471ZM16.056 12.3176C15.9615 12.3202 15.8699 12.3505 15.7926 12.405C15.7153 12.4594 15.6558 12.5355 15.6216 12.6236C15.5874 12.7117 15.58 12.808 15.6003 12.9003C15.6207 12.9926 15.6678 13.0769 15.7359 13.1425C15.8039 13.2081 15.8898 13.2522 15.9828 13.2691C16.0758 13.2861 16.1718 13.2752 16.2586 13.2378C16.3454 13.2004 16.4192 13.1382 16.4708 13.059C16.5224 12.9798 16.5495 12.8871 16.5486 12.7926C16.5479 12.7289 16.5347 12.6659 16.5095 12.6074C16.4843 12.549 16.4477 12.4961 16.4018 12.4518C16.356 12.4076 16.3018 12.373 16.2424 12.35C16.1831 12.3269 16.1197 12.3159 16.056 12.3176Z' fill='#8254C6'/>\r\n<path d='M32.5997 22.8655C32.5006 19.0538 31.5441 15.3135 29.8013 11.9221C28.8198 10.0677 27.3524 8.51515 25.5563 7.43068C23.7601 6.3462 21.7029 5.77066 19.6047 5.76567C17.9819 5.7609 16.3786 6.11915 14.9122 6.81418C13.4458 7.50922 12.1533 8.52344 11.1296 9.78257C10.8745 10.1024 10.6499 10.3982 10.6722 10.6621C10.6879 10.7456 10.7201 10.8252 10.7669 10.8962C10.8138 10.9672 10.8743 11.0281 10.9449 11.0754C11.0567 11.177 11.1989 11.2388 11.3495 11.2513C11.6485 11.2513 11.9563 10.9315 12.229 10.6621L12.4576 10.4334C13.1113 9.71802 13.8456 9.0808 14.646 8.53448C16.1275 7.60952 17.839 7.11917 19.5855 7.11929C21.423 7.13786 23.2219 7.64925 24.7943 8.6001C26.3668 9.55094 27.6552 10.9064 28.5252 12.525C30.6176 16.322 31.1005 20.5204 31.3116 24.4965C31.3732 25.6567 31.3556 26.8152 31.3116 27.925V29.5952L23.7959 28.2152L24.0686 27.9426C26.9165 24.9843 28.0415 21.3416 27.4882 16.8289C27.3739 15.9494 27.0085 15.7216 26.4864 15.7216H26.1434C25.9104 15.7554 25.6753 15.773 25.4398 15.7743C24.1453 15.7546 22.8994 15.2783 21.9218 14.4295C21.315 13.9498 20.9623 13.6564 20.7177 13.6564C20.473 13.6564 20.19 14.0345 19.6783 14.7197C18.3247 16.5395 16.8127 17.4182 15.0457 17.4182C14.1985 17.3983 13.3618 17.2255 12.576 16.9081C12.3858 16.8295 12.1834 16.7848 11.9779 16.7762C11.818 16.7762 11.3447 16.7762 11.2743 17.6557C10.9545 21.6374 11.9339 24.8196 14.2454 27.3949C14.3637 27.527 14.4752 27.6649 14.5796 27.8082L14.7395 28.0017L14.9594 28.2744L8.05054 29.5313H7.9642C7.77071 29.5313 7.74433 29.3554 7.72434 29.1267C7.35617 25.2129 7.67739 21.2649 8.67339 17.4622C8.84929 16.7154 8.67339 16.4779 8.25123 16.3548C8.16604 16.3268 8.07706 16.312 7.98738 16.3108C7.87305 16.3108 7.53005 16.3108 7.33656 17.0488C6.15978 21.3244 5.84024 25.7905 6.3963 30.1901C6.40152 30.2721 6.40152 30.3543 6.3963 30.4363C7.89065 30.1165 9.40257 29.8383 10.9233 29.6456C11.2412 29.5567 11.5639 29.4862 11.8899 29.4345C12.1879 29.4031 12.4823 29.3442 12.7694 29.2586C13.259 29.1113 13.7629 29.017 14.2726 28.9772C14.3186 28.964 14.3673 28.964 14.4133 28.9772C14.9456 28.7718 15.5269 28.7289 16.0836 28.854H16.3826C16.4398 28.8698 16.49 28.9045 16.5252 28.9524C16.5603 29.0002 16.5782 29.0586 16.5761 29.1179C17.582 29.3461 18.6131 29.4437 19.6439 29.4081C20.7854 29.2624 21.9027 28.9667 22.9668 28.5286C23.0234 28.507 23.0861 28.507 23.1427 28.5286C23.6433 28.5101 24.1417 28.6033 24.6019 28.8013C24.761 28.7973 24.9193 28.8245 25.068 28.8812C27.4762 29.7607 30.0691 29.8743 32.487 30.6402C32.4769 30.532 32.4769 30.4231 32.487 30.3148C32.487 29.4353 32.5397 28.4951 32.5749 27.6076C32.5997 26.1004 32.6788 24.4654 32.5997 22.8655ZM22.667 27.263C21.7355 27.9973 20.5914 28.4105 19.4056 28.4407C18.4159 28.436 17.447 28.1561 16.6073 27.6323C14.0407 26.0764 12.1506 21.9012 12.6431 18.8422V18.6023L12.863 18.6639C13.5112 18.8379 14.1787 18.9296 14.8499 18.9365C15.963 18.9098 17.0549 18.627 18.0412 18.1103C19.0274 17.5935 19.8814 16.8566 20.537 15.9566L20.6249 15.8423L26.0746 17.6812V17.7868C26.9006 20.7139 25.1951 25.4344 22.6638 27.3013L22.667 27.263Z' fill='#8254C6'/>\r\n<path d='M6.60938 30.3646L16.1287 28.6057C16.1287 28.6057 18.6873 30.3023 23.0048 28.3242C32.0676 30.3726 32.0788 30.4686 32.0788 30.4686' stroke='#8254C6' stroke-width='0.262956' stroke-miterlimit='10'/>\r\n<path d='M8.91211 14.4964L9.59812 12.8877' stroke='#8254C6' stroke-width='0.797349' stroke-miterlimit='10' stroke-linecap='round'/>\r\n</g>\r\n<defs>\r\n<clipPath id='clip0_16159_32828'>\r\n<rect width='34.778' height='34.778' fill='white' transform='translate(0.113281 0.111328)'/>\r\n</clipPath>\r\n</defs>\r\n</svg>\r\n"
                            },
                            {
                              value: "stomach_ache",
                              meaning: "\u062f\u0644\u200c\u062f\u0631\u062f",
                              icon: "\ud83e\udd22"
                            },
                            {
                              value: "chest_pain",
                              meaning:
                                "\u062f\u0631\u062f \u0642\u0641\u0633\u0647 \u0633\u06cc\u0646\u0647",
                              icon: "\ud83d\udc94"
                            },
                            {
                              value: "contusion",
                              meaning: "\u06a9\u0628\u0648\u062f\u06cc",
                              icon: "\ud83e\ude79"
                            },
                            {
                              value: "back_ache",
                              meaning: "\u06a9\u0645\u0631\u062f\u0631\u062f",
                              icon: "\ud83d\udeb6\u200d\u2642\ufe0f\ud83d\udca2"
                            },
                            {
                              value: "foot_ache",
                              meaning: "\u062f\u0631\u062f \u067e\u0627",
                              icon: "\ud83e\uddb6\ud83d\udca5"
                            },
                            {
                              value: "nausea",
                              meaning:
                                "\u062d\u0627\u0644\u062a \u062a\u0647\u0648\u0639",
                              icon: "\ud83e\udd2e"
                            }
                          ];
                        }
                        throw e;
                      }
                    })()}
                    className={classNames("__wab_instance", sty.venereal)}
                    list={generateStateValueProp($state, ["venereal", "list"])}
                    onListChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "venereal",
                        "list"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    onSelectOneChange={async (...eventArgs: any) => {
                      generateStateOnChangeProp($state, [
                        "venereal",
                        "selectOne"
                      ]).apply(null, eventArgs);

                      if (
                        eventArgs.length > 1 &&
                        eventArgs[1] &&
                        eventArgs[1]._plasmic_state_init_
                      ) {
                        return;
                      }
                    }}
                    selectOne={generateStateValueProp($state, [
                      "venereal",
                      "selectOne"
                    ])}
                  />
                </Stack__>
                <section
                  className={classNames(projectcss.all, sty.section__nkbVb)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__aZ6Jv)}
                  >
                    <Button
                      data-plasmic-name={"button"}
                      data-plasmic-override={overrides.button}
                      className={classNames("__wab_instance", sty.button)}
                      color={generateStateValueProp($state, [
                        "button",
                        "color"
                      ])}
                      onClick={async event => {
                        const $steps = {};

                        $steps["invokeGlobalAction"] = true
                          ? (() => {
                              const actionArgs = {
                                args: [
                                  "POST",
                                  "https://n8n.staas.ir/webhook/calendar/getSign",
                                  undefined,
                                  (() => {
                                    try {
                                      return {
                                        authorization: $state.token,
                                        before: $state.befur.list,
                                        current: $state.befur.list,
                                        psychological:
                                          $state.psychological.list,
                                        vaginal: $state.vaginal.list,
                                        hereditary: $state.hereditary.list,
                                        venereal: $state.venereal.list,
                                        womans: $state.womans.list,
                                        others: ["stomach_ache"]
                                      };
                                    } catch (e) {
                                      if (
                                        e instanceof TypeError ||
                                        e?.plasmicType ===
                                          "PlasmicUndefinedDataError"
                                      ) {
                                        return undefined;
                                      }
                                      throw e;
                                    }
                                  })()
                                ]
                              };
                              return $globalActions[
                                "Fragment.apiRequest"
                              ]?.apply(null, [...actionArgs.args]);
                            })()
                          : undefined;
                        if (
                          $steps["invokeGlobalAction"] != null &&
                          typeof $steps["invokeGlobalAction"] === "object" &&
                          typeof $steps["invokeGlobalAction"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction"] = await $steps[
                            "invokeGlobalAction"
                          ];
                        }

                        $steps["invokeGlobalAction2"] =
                          $steps.invokeGlobalAction?.data?.result == true
                            ? (() => {
                                const actionArgs = {
                                  args: [
                                    undefined,
                                    "\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0628\u0627 \u0645\u0648\u0641\u0642\u06cc\u062a \u062b\u0628\u062a \u0634\u062f.",
                                    "bottom-center"
                                  ]
                                };
                                return $globalActions[
                                  "Fragment.showToast"
                                ]?.apply(null, [...actionArgs.args]);
                              })()
                            : undefined;
                        if (
                          $steps["invokeGlobalAction2"] != null &&
                          typeof $steps["invokeGlobalAction2"] === "object" &&
                          typeof $steps["invokeGlobalAction2"].then ===
                            "function"
                        ) {
                          $steps["invokeGlobalAction2"] = await $steps[
                            "invokeGlobalAction2"
                          ];
                        }

                        $steps["runCode"] =
                          $steps.invokeGlobalAction?.data?.result == true
                            ? (() => {
                                const actionArgs = {
                                  customFunction: async () => {
                                    return (() => {
                                      return window.history.back();
                                    })();
                                  }
                                };
                                return (({ customFunction }) => {
                                  return customFunction();
                                })?.apply(null, [actionArgs]);
                              })()
                            : undefined;
                        if (
                          $steps["runCode"] != null &&
                          typeof $steps["runCode"] === "object" &&
                          typeof $steps["runCode"].then === "function"
                        ) {
                          $steps["runCode"] = await $steps["runCode"];
                        }
                      }}
                      onColorChange={async (...eventArgs: any) => {
                        ((...eventArgs) => {
                          generateStateOnChangeProp($state, [
                            "button",
                            "color"
                          ])(eventArgs[0]);
                        }).apply(null, eventArgs);

                        if (
                          eventArgs.length > 1 &&
                          eventArgs[1] &&
                          eventArgs[1]._plasmic_state_init_
                        ) {
                          return;
                        }
                      }}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ya8SZ
                        )}
                      >
                        {
                          "\u0630\u062e\u06cc\u0631\u0647 \u0639\u0644\u0627\u0626\u0645"
                        }
                      </div>
                    </Button>
                  </div>
                </section>
              </Stack__>
            ) : null}
          </ApiRequest>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "headerLiom",
    "img",
    "number2",
    "textInput",
    "antdInput",
    "button2",
    "name2",
    "textInput2",
    "antdInput2",
    "radioGrop",
    "button3",
    "sms",
    "button4",
    "button5",
    "remove",
    "removeBtn",
    "button9",
    "getSign",
    "selectionBox",
    "choices",
    "selectionBox2",
    "befur",
    "selectionBox3",
    "psychological",
    "selectionBox4",
    "vaginal",
    "selectionBox5",
    "womans",
    "selectionBox6",
    "hereditary",
    "selectionBox7",
    "venereal",
    "button"
  ],
  headerLiom: ["headerLiom", "img"],
  img: ["img"],
  number2: ["number2", "textInput", "antdInput", "button2"],
  textInput: ["textInput", "antdInput"],
  antdInput: ["antdInput"],
  button2: ["button2"],
  name2: ["name2", "textInput2", "antdInput2", "radioGrop", "button3"],
  textInput2: ["textInput2", "antdInput2"],
  antdInput2: ["antdInput2"],
  radioGrop: ["radioGrop"],
  button3: ["button3"],
  sms: ["sms", "button4", "button5"],
  button4: ["button4"],
  button5: ["button5"],
  remove: ["remove", "removeBtn", "button9"],
  removeBtn: ["removeBtn"],
  button9: ["button9"],
  getSign: [
    "getSign",
    "selectionBox",
    "choices",
    "selectionBox2",
    "befur",
    "selectionBox3",
    "psychological",
    "selectionBox4",
    "vaginal",
    "selectionBox5",
    "womans",
    "selectionBox6",
    "hereditary",
    "selectionBox7",
    "venereal",
    "button"
  ],
  selectionBox: ["selectionBox", "choices"],
  choices: ["choices"],
  selectionBox2: ["selectionBox2", "befur"],
  befur: ["befur"],
  selectionBox3: ["selectionBox3", "psychological"],
  psychological: ["psychological"],
  selectionBox4: ["selectionBox4", "vaginal"],
  vaginal: ["vaginal"],
  selectionBox5: ["selectionBox5", "womans"],
  womans: ["womans"],
  selectionBox6: ["selectionBox6", "hereditary"],
  hereditary: ["hereditary"],
  selectionBox7: ["selectionBox7", "venereal"],
  venereal: ["venereal"],
  button: ["button"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  headerLiom: typeof HeaderLiom;
  img: typeof PlasmicImg__;
  number2: typeof AntdModal;
  textInput: typeof TextInput;
  antdInput: typeof Input;
  button2: typeof Button;
  name2: typeof AntdModal;
  textInput2: typeof TextInput;
  antdInput2: typeof Input;
  radioGrop: typeof RadioGrop;
  button3: typeof Button;
  sms: typeof AntdModal;
  button4: typeof Button;
  button5: typeof Button;
  remove: typeof AntdModal;
  removeBtn: typeof Button;
  button9: typeof Button;
  getSign: typeof ApiRequest;
  selectionBox: "div";
  choices: typeof Choices;
  selectionBox2: "div";
  befur: typeof Choices;
  selectionBox3: "div";
  psychological: typeof Choices;
  selectionBox4: "div";
  vaginal: typeof Choices;
  selectionBox5: "div";
  womans: typeof Choices;
  selectionBox6: "div";
  hereditary: typeof Choices;
  selectionBox7: "div";
  venereal: typeof Choices;
  button: typeof Button;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicSignsPage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicSignsPage__VariantsArgs;
    args?: PlasmicSignsPage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicSignsPage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicSignsPage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicSignsPage__ArgProps,
          internalVariantPropNames: PlasmicSignsPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicSignsPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicSignsPage";
  } else {
    func.displayName = `PlasmicSignsPage.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "suVPi77vb6vv9K5rYJwyxC"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicSignsPage = Object.assign(
  // Top-level PlasmicSignsPage renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    headerLiom: makeNodeComponent("headerLiom"),
    img: makeNodeComponent("img"),
    number2: makeNodeComponent("number2"),
    textInput: makeNodeComponent("textInput"),
    antdInput: makeNodeComponent("antdInput"),
    button2: makeNodeComponent("button2"),
    name2: makeNodeComponent("name2"),
    textInput2: makeNodeComponent("textInput2"),
    antdInput2: makeNodeComponent("antdInput2"),
    radioGrop: makeNodeComponent("radioGrop"),
    button3: makeNodeComponent("button3"),
    sms: makeNodeComponent("sms"),
    button4: makeNodeComponent("button4"),
    button5: makeNodeComponent("button5"),
    remove: makeNodeComponent("remove"),
    removeBtn: makeNodeComponent("removeBtn"),
    button9: makeNodeComponent("button9"),
    getSign: makeNodeComponent("getSign"),
    selectionBox: makeNodeComponent("selectionBox"),
    choices: makeNodeComponent("choices"),
    selectionBox2: makeNodeComponent("selectionBox2"),
    befur: makeNodeComponent("befur"),
    selectionBox3: makeNodeComponent("selectionBox3"),
    psychological: makeNodeComponent("psychological"),
    selectionBox4: makeNodeComponent("selectionBox4"),
    vaginal: makeNodeComponent("vaginal"),
    selectionBox5: makeNodeComponent("selectionBox5"),
    womans: makeNodeComponent("womans"),
    selectionBox6: makeNodeComponent("selectionBox6"),
    hereditary: makeNodeComponent("hereditary"),
    selectionBox7: makeNodeComponent("selectionBox7"),
    venereal: makeNodeComponent("venereal"),
    button: makeNodeComponent("button"),

    // Metadata about props expected for PlasmicSignsPage
    internalVariantProps: PlasmicSignsPage__VariantProps,
    internalArgProps: PlasmicSignsPage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicSignsPage;
/* prettier-ignore-end */
