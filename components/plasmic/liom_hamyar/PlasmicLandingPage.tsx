// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: suVPi77vb6vv9K5rYJwyxC
// Component: j6Q-FbS-KGQL

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "../todo_mvc_app/plasmic.module.css"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/projectcss
import sty from "./PlasmicLandingPage.module.css"; // plasmic-import: j6Q-FbS-KGQL/css

createPlasmicElementProxy;

export type PlasmicLandingPage__VariantMembers = {};
export type PlasmicLandingPage__VariantsArgs = {};
type VariantPropType = keyof PlasmicLandingPage__VariantsArgs;
export const PlasmicLandingPage__VariantProps = new Array<VariantPropType>();

export type PlasmicLandingPage__ArgsType = {};
type ArgPropType = keyof PlasmicLandingPage__ArgsType;
export const PlasmicLandingPage__ArgProps = new Array<ArgPropType>();

export type PlasmicLandingPage__OverridesType = {
  root?: Flex__<"div">;
};

export interface DefaultLandingPageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicLandingPage__RenderFunc(props: {
  variants: PlasmicLandingPage__VariantsArgs;
  args: PlasmicLandingPage__ArgsType;
  overrides: PlasmicLandingPage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__vrjas)}>
            <div className={classNames(projectcss.all, sty.freeBox___1XH0I)}>
              <div className={classNames(projectcss.all, sty.freeBox__xr4BV)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__go9Yl
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-IdKt2w2aRFZS)" }}
                    >
                      {"\u0647\u062f\u06cc\u0647 \u0648\u06cc\u0698\u0647"}
                    </span>
                    <React.Fragment>{"\n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-7fkkqjqo9aea)" }}
                    >
                      {"aaaaa"}
                    </span>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__grted
                  )}
                >
                  {
                    "\u0647\u062f\u06cc\u0647 \u0648\u06cc\u0698\u0647  \u0628\u0627 \u062a\u062e\u0641\u06cc\u0641 40\u066a"
                  }
                </div>
              </div>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__jqgab
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "var(--token-55cSeNPovQFh)" }}
                >
                  {
                    "\u0628\u0627 \u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u0627\u0634\u062a\u0631\u0627\u06a9 \u0648\u06cc\u0698\u0647 \u0642\u0627\u0628\u0644\u06cc\u062a \u0647\u0627\u06cc \u0632\u06cc\u0631 \u0628\u0631\u0627\u062a \u0641\u0639\u0627\u0644 \u0645\u06cc\u0634\u0647 "
                  }
                </span>
              </React.Fragment>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___5U1Z3)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__pbmjc)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__oxnKi)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"80px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/liom_hamyar/images/image51.svg",
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: 1
                  }}
                />
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___5TWC
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{
                      fontWeight: 700,
                      color: "var(--token-IdKt2w2aRFZS)"
                    }}
                  >
                    {
                      "\u062f\u06cc\u06af\u0647 \u063a\u0627\u0641\u0644\u06af\u06cc\u0631 \u0646\u0634\u0648!"
                    }
                  </span>
                  <React.Fragment>
                    {
                      "\n\u06cc\u0647\u0648 \u067e\u0631\u06cc\u0648\u062f \u0634\u062f\u0646 \u0648 \u0622\u0645\u0627\u062f\u0647 \u0646\u0628\u0648\u062f\u0646 \u062a\u0645\u0648\u0645 \u0634\u062f. \u0628\u0627 \u067e\u06cc\u0627\u0645\u06a9 \u0647\u0627\u06cc\u06cc \u06a9\u0647 \u0628\u0631\u0627\u062a \u0627\u0631\u0633\u0627\u0644 \u0645\u06cc\u0634\u0647 \u0686\u0631\u062e\u0647\u200c\u062a \u0647\u0645\u06cc\u0634\u0647 \u06cc\u0627\u062f\u062a \u0645\u06cc\u200c\u0645\u0648\u0646\u0647."
                    }
                  </React.Fragment>
                </React.Fragment>
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__curiS)}>
              <div className={classNames(projectcss.all, sty.freeBox__is9Ui)} />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__zs2)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"20px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/liom_hamyar/images/image54.svg",
                  fullWidth: 512,
                  fullHeight: 512,
                  aspectRatio: 1
                }}
              />

              <div className={classNames(projectcss.all, sty.freeBox__nThY)} />
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hHd5Z)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vFvyy
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{
                      fontWeight: 700,
                      color: "var(--token-SX03PBUzWAqr)"
                    }}
                  >
                    {
                      "\u0631\u0627\u0628\u0637\u0647\u200c\u0647\u0627\u062a \u0631\u0648 \u0646\u062c\u0627\u062a \u0628\u062f\u0647!"
                    }
                  </span>
                  <React.Fragment>
                    {
                      "\n\u0645\u0627 \u0628\u0647 \u0647\u0645\u0633\u0631\u062a \u06a9\u0645\u06a9 \u0645\u06cc\u200c\u06a9\u0646\u06cc\u0645 \u062a\u0648 \u0631\u0648\u0632\u0627\u06cc PMS \u0628\u06cc\u0634\u062a\u0631 \u062f\u0631\u06a9\u062a \u06a9\u0646\u0647. \u0648 \u0645\u0631\u0627\u0642\u0628\u062a \u0628\u0627\u0634\u0647 \u0648 \u0628\u0641\u0647\u0645\u0647 \u06a9\u0644\u0627\u0641\u0647 \u0628\u0648\u062f\u0646 \u06cc\u0639\u0646\u06cc \u0686\u06cc."
                    }
                  </React.Fragment>
                </React.Fragment>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__dEa3S)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__mqLRd)}
                  displayHeight={"100%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"80px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/liom_hamyar/images/image52.svg",
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: 1
                  }}
                />
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__aZbr5)}>
              <div className={classNames(projectcss.all, sty.freeBox__iEPdX)} />

              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__oeTkj)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"20px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/liom_hamyar/images/image54.svg",
                  fullWidth: 512,
                  fullHeight: 512,
                  aspectRatio: 1
                }}
              />

              <div className={classNames(projectcss.all, sty.freeBox__r43LM)} />
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___2Da6N)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__n0E2H)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__oY1Z)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"80px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/liom_hamyar/images/image53.svg",
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: 1
                  }}
                />
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zUpFa
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{
                      fontWeight: 700,
                      color: "var(--token-LqD8W4lcEdIj)"
                    }}
                  >
                    {
                      "\u0628\u062f\u0648\u0646 \u06a9\u06cc \u0622\u0645\u0627\u062f\u0647\u200c\u0627\u06cc!"
                    }
                  </span>
                  <React.Fragment>
                    {
                      "\n\u0628\u0627 \u0645\u0627 \u0632\u0645\u0627\u0646 \u062f\u0642\u06cc\u0642 \u062a\u062e\u0645\u06a9\u200c\u06af\u0630\u0627\u0631\u06cc \u0631\u0648 \u0645\u06cc\u200c\u062f\u0648\u0646\u06cc \u0648 \u0627\u0632 \u0628\u062f\u0646\u062a \u0628\u0647\u062a\u0631 \u0622\u06af\u0627\u0647 \u0645\u06cc\u200c\u0634\u06cc \u0648 \u0645\u06cc\u062a\u0648\u0646\u06cc \u0632\u0645\u0627\u0646\u06cc \u06a9\u0647 \u062a\u0648 \u0628\u0647\u062a\u0631\u06cc\u0646 \u062d\u0627\u0644\u062a \u0631\u0648\u062d\u06cc \u0648 \u0631\u0648\u0627\u0646\u06cc \u062e\u0648\u062f\u062a \u0647\u0633\u062a\u06cc \u062a\u0635\u0645\u06cc\u0645 \u0647\u0627\u06cc \u0645\u0647\u0645\u062a \u0631\u0648 \u0628\u06af\u06cc\u0631\u06cc"
                    }
                  </React.Fragment>
                </React.Fragment>
              </div>
            </Stack__>
            <div
              className={classNames(
                projectcss.all,
                sty.freeBox__q9Ozk,
                "pulse-animation"
              )}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tZ1P5
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#FFFFFF" }}
                  >
                    {
                      "\u0641\u0639\u0627\u0644\u0633\u0627\u0632\u06cc \u0627\u0634\u062a\u0631\u0627\u06a9 \u0648\u06cc\u0698\u0647"
                    }
                  </span>
                </React.Fragment>
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicLandingPage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicLandingPage__VariantsArgs;
    args?: PlasmicLandingPage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicLandingPage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicLandingPage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicLandingPage__ArgProps,
          internalVariantPropNames: PlasmicLandingPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicLandingPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLandingPage";
  } else {
    func.displayName = `PlasmicLandingPage.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const WithUsePlasmicAuthComponent: React.FC<P> = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "suVPi77vb6vv9K5rYJwyxC"
    });

    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicLandingPage = Object.assign(
  // Top-level PlasmicLandingPage renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for PlasmicLandingPage
    internalVariantProps: PlasmicLandingPage__VariantProps,
    internalArgProps: PlasmicLandingPage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicLandingPage;
/* prettier-ignore-end */
