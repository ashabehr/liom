/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: suVPi77vb6vv9K5rYJwyxC
// Component: Y_O8FNCBMxb-

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import LineClomp from "../../LineClomp"; // plasmic-import: XsM8QG4wUKlk/component
import Switchbest from "../../Switchbest"; // plasmic-import: ofUp1AS5glz5/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/styleTokensProvider
import { _useStyleTokens as useStyleTokens_antd_5_hostless } from "../antd_5_hostless/PlasmicStyleTokensProvider"; // plasmic-import: ohDidvG9XsCeFumugENU3J/styleTokensProvider
import { _useStyleTokens as useStyleTokens_plasmic_rich_components } from "../plasmic_rich_components/PlasmicStyleTokensProvider"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: suVPi77vb6vv9K5rYJwyxC/projectcss
import sty from "./PlasmicUserPage.module.css"; // plasmic-import: Y_O8FNCBMxb-/css

import ChevronRightIcon from "../fragment_icons/icons/PlasmicIcon__ChevronRight"; // plasmic-import: GHdF3hS-oP_3/icon
import Line3Icon from "./icons/PlasmicIcon__Line3"; // plasmic-import: cDBsZfQFOOWa/icon

createPlasmicElementProxy;

export type PlasmicUserPage__VariantMembers = {};
export type PlasmicUserPage__VariantsArgs = {};
type VariantPropType = keyof PlasmicUserPage__VariantsArgs;
export const PlasmicUserPage__VariantProps = new Array<VariantPropType>();

export type PlasmicUserPage__ArgsType = {
  header?: any;
  data?: any;
  onBack?: (event: any) => void;
  children?: React.ReactNode;
};
type ArgPropType = keyof PlasmicUserPage__ArgsType;
export const PlasmicUserPage__ArgProps = new Array<ArgPropType>(
  "header",
  "data",
  "onBack",
  "children"
);

export type PlasmicUserPage__OverridesType = {
  frame49?: Flex__<"div">;
  frame25?: Flex__<"div">;
  frame48?: Flex__<"div">;
  frame47?: Flex__<"div">;
  frame41?: Flex__<"div">;
  frame35?: Flex__<"div">;
  frame46?: Flex__<"div">;
  frame42?: Flex__<"div">;
  frame43?: Flex__<"div">;
  lineClomp?: Flex__<typeof LineClomp>;
  switchbest?: Flex__<typeof Switchbest>;
};

export interface DefaultUserPageProps {
  header?: any;
  data?: any;
  onBack?: (event: any) => void;
  children?: React.ReactNode;
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicUserPage__RenderFunc(props: {
  variants: PlasmicUserPage__VariantsArgs;
  args: PlasmicUserPage__ArgsType;
  overrides: PlasmicUserPage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {
          header: [
            { field: "id", label_fa: "#", width: 80, type: "number" },
            {
              field: "username",
              label_fa:
                "\u0646\u0627\u0645 \u06a9\u0627\u0631\u0628\u0631\u06cc",
              width: 150,
              type: "text"
            },
            {
              field: "mobile",
              label_fa:
                "\u0634\u0645\u0627\u0631\u0647 \u0645\u0648\u0628\u0627\u06cc\u0644",
              width: 130,
              type: "text"
            },
            {
              field: "refcode",
              label_fa: "\u06a9\u062f \u0645\u0639\u0631\u0641",
              width: 100,
              type: "text"
            },
            {
              field: "activeTel",
              label_fa:
                "\u062a\u0644\u06af\u0631\u0627\u0645 \u0641\u0639\u0627\u0644",
              width: 90,
              type: "bool"
            },
            {
              field: "countBuyHusbandSms",
              label_fa:
                "\u062a\u0639\u062f\u0627\u062f \u062e\u0631\u06cc\u062f \u0647\u0645\u06cc\u0627\u0631 \u0622\u0642\u0627",
              width: 120,
              type: "number"
            },
            {
              field: "countBuySelfSms",
              label_fa:
                "\u062a\u0639\u062f\u0627\u062f \u062e\u0631\u06cc\u062f \u0647\u0645\u06cc\u0627\u0631 \u062e\u0648\u062f",
              width: 120,
              type: "number"
            },
            {
              field: "lastActivity",
              label_fa:
                "\u0622\u062e\u0631\u06cc\u0646 \u0641\u0639\u0627\u0644\u06cc\u062a",
              width: 160,
              type: "datetime"
            },
            {
              field: "husbandSmsSubTime",
              label_fa:
                "\u067e\u0627\u06cc\u0627\u0646 \u0627\u0634\u062a\u0631\u0627\u06a9 \u0647\u0645\u06cc\u0627\u0631 \u0622\u0642\u0627",
              width: 160,
              type: "datetime"
            },
            {
              field: "selfHamyarSmsSubTime",
              label_fa:
                "\u067e\u0627\u06cc\u0627\u0646 \u0627\u0634\u062a\u0631\u0627\u06a9 \u0647\u0645\u06cc\u0627\u0631 \u062e\u0648\u062f",
              width: 160,
              type: "datetime"
            },
            {
              field: "hamyarData",
              label_fa:
                "\u0627\u0637\u0644\u0627\u0639\u0627\u062a \u0647\u0645\u06cc\u0627\u0631\u0647\u0627",
              width: 220,
              type: "array"
            }
          ],
          data: {
            result: [
              {
                user: {
                  countBuyHusbandSms: 1,
                  countBuySelfSms: 1,
                  activeTel: false,
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 7,
                    minute: 47,
                    second: 37,
                    nanosecond: 199000000,
                    timeZoneOffsetSeconds: 0
                  },
                  selfHamyarSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 7,
                    minute: 45,
                    second: 26,
                    nanosecond: 126000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09228371639",
                  id: "43241",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 25,
                    hour: 4,
                    minute: 42,
                    second: 17,
                    nanosecond: 527000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "guest_20iSiPN4lgvU",
                  refcode: "123b99"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09050429221",
                      id: "c5f2176d-11df-4903-8599-9e9b25127ade",
                      username: "guest_Qma1OlNwLJ",
                      refcode: "NpcFUHWfE"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHusbandSms: 1,
                  activeTel: false,
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 8,
                    minute: 51,
                    second: 42,
                    nanosecond: 771000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09054480677",
                  id: "1068329",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 19,
                    hour: 6,
                    minute: 34,
                    second: 11,
                    nanosecond: 991000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "83_Inazanin",
                  refcode: "90880b"
                },
                hamyarData: [
                  {
                    statusSms: false,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09336634207",
                      id: "fcb7024f-5f6d-48d1-8db4-022dc6c346ac",
                      lastActivity: {
                        year: 2025,
                        month: 8,
                        day: 18,
                        hour: 6,
                        minute: 5,
                        second: 24,
                        nanosecond: 535000000,
                        timeZoneOffsetSeconds: 0
                      },
                      username: "guest_95ARdzWbyr",
                      refcode: "YGkmUolJ4"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHamyarStatus: 1,
                  activeTel: false,
                  breastCancerSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 6,
                    minute: 5,
                    second: 7,
                    nanosecond: 133000000,
                    timeZoneOffsetSeconds: 0
                  },
                  hamyarTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 6,
                    minute: 5,
                    second: 7,
                    nanosecond: 84000000,
                    timeZoneOffsetSeconds: 0
                  },
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 6,
                    minute: 5,
                    second: 7,
                    nanosecond: 133000000,
                    timeZoneOffsetSeconds: 0
                  },
                  motherSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 6,
                    minute: 5,
                    second: 7,
                    nanosecond: 133000000,
                    timeZoneOffsetSeconds: 0
                  },
                  selfHamyarSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 6,
                    minute: 5,
                    second: 7,
                    nanosecond: 133000000,
                    timeZoneOffsetSeconds: 0
                  },
                  specialAdviceSubTim: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 6,
                    minute: 5,
                    second: 7,
                    nanosecond: 133000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09210796191",
                  id: "1c88ae11-1f21-42ac-af76-70cd3df00c1a",
                  lastActivity: {
                    year: 2025,
                    month: 6,
                    day: 26,
                    hour: 19,
                    minute: 34,
                    second: 53,
                    nanosecond: 845000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "hanadzl",
                  refcode: "1m1hy4"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09302245412",
                      id: "9f7e6b3b-58fa-4dab-8a8d-7563e3910ba9",
                      username: "guest_hgggexYi5X",
                      refcode: "fwCqC7p3B"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHamyarStatus: 1,
                  countBuyHusbandSms: 1,
                  activeTel: false,
                  hamyarTime: {
                    year: 2024,
                    month: 11,
                    day: 27,
                    hour: 7,
                    minute: 6,
                    second: 57,
                    nanosecond: 310000000,
                    timeZoneOffsetSeconds: 0
                  },
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 12,
                    minute: 53,
                    second: 0,
                    nanosecond: 275000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09160989976",
                  id: "4fe0c83d-8edb-4355-97d9-910b12dc033c",
                  lastActivity: {
                    year: 2025,
                    month: 7,
                    day: 9,
                    hour: 20,
                    minute: 58,
                    second: 39,
                    nanosecond: 829000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "ramezaaninasab",
                  refcode: "4o7nn1"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "husband",
                    active: false,
                    man: {
                      activeTel: false,
                      mobile: "09130790089",
                      id: "5ab098d9-f0da-4f42-a39e-1c19ae8a3736",
                      username: "guest_waQZOT4TFH",
                      refcode: "VxRqvSTQr"
                    }
                  },
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      countBuyHamyarSubMan: 1,
                      activeTel: false,
                      hamyarTime: {
                        year: 2025,
                        month: 10,
                        day: 4,
                        hour: 13,
                        minute: 39,
                        second: 22,
                        nanosecond: 197000000,
                        timeZoneOffsetSeconds: 0
                      },
                      mobile: "09133900964",
                      id: "334cdb4e-c48d-4573-a935-cdcb325755a5",
                      username: "guest_MRj9ieXumD",
                      refcode: "AkUqKzfg5"
                    }
                  },
                  {
                    statusSms: false,
                    relation: "husband",
                    active: false,
                    man: {
                      activeTel: false,
                      mobile: "09910891544",
                      id: "3e2d4cab-0dcf-4aba-826e-e430fad64d41",
                      username: "guest_gPwQd0nadw",
                      refcode: "97v0kGa9v"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHamyarStatus: 1,
                  activeTel: false,
                  breastCancerSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 10,
                    minute: 49,
                    second: 5,
                    nanosecond: 593000000,
                    timeZoneOffsetSeconds: 0
                  },
                  hamyarTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 10,
                    minute: 49,
                    second: 5,
                    nanosecond: 513000000,
                    timeZoneOffsetSeconds: 0
                  },
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 10,
                    minute: 49,
                    second: 5,
                    nanosecond: 593000000,
                    timeZoneOffsetSeconds: 0
                  },
                  motherSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 10,
                    minute: 49,
                    second: 5,
                    nanosecond: 593000000,
                    timeZoneOffsetSeconds: 0
                  },
                  selfHamyarSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 10,
                    minute: 49,
                    second: 5,
                    nanosecond: 593000000,
                    timeZoneOffsetSeconds: 0
                  },
                  specialAdviceSubTim: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 10,
                    minute: 49,
                    second: 5,
                    nanosecond: 593000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09336386063",
                  id: "1f5cf24f-acda-4d41-b92c-207ab84a4d46",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 10,
                    hour: 2,
                    minute: 43,
                    second: 40,
                    nanosecond: 66000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "Zahrafrj",
                  refcode: "eilksl"
                },
                hamyarData: []
              },
              {
                user: {
                  countBuyHusbandSms: 1,
                  activeTel: false,
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 7,
                    minute: 28,
                    second: 4,
                    nanosecond: 160000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09196989370",
                  id: "404e1402-1852-494d-b5ec-5a6436adc1b9",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 11,
                    hour: 11,
                    minute: 2,
                    second: 42,
                    nanosecond: 529000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "guest_qhb4re8p36",
                  refcode: "v88e8p"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09198473955",
                      id: "352b7ab4-3368-4773-a2d9-ed5f17ef4600",
                      lastActivity: {
                        year: 2024,
                        month: 9,
                        day: 26,
                        hour: 18,
                        minute: 11,
                        second: 25,
                        nanosecond: 696000000,
                        timeZoneOffsetSeconds: 0
                      },
                      username: "guest_fuDHnWINgo",
                      refcode: "znsb6vQkW"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHamyarStatus: 2,
                  activeTel: false,
                  breastCancerSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 5,
                    minute: 54,
                    second: 55,
                    nanosecond: 33000000,
                    timeZoneOffsetSeconds: 0
                  },
                  hamyarTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 5,
                    minute: 54,
                    second: 54,
                    nanosecond: 918000000,
                    timeZoneOffsetSeconds: 0
                  },
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 5,
                    minute: 54,
                    second: 55,
                    nanosecond: 33000000,
                    timeZoneOffsetSeconds: 0
                  },
                  motherSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 5,
                    minute: 54,
                    second: 55,
                    nanosecond: 33000000,
                    timeZoneOffsetSeconds: 0
                  },
                  selfHamyarSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 5,
                    minute: 54,
                    second: 55,
                    nanosecond: 33000000,
                    timeZoneOffsetSeconds: 0
                  },
                  specialAdviceSubTim: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 5,
                    minute: 54,
                    second: 55,
                    nanosecond: 33000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09158645459",
                  id: "5c0a1980-0323-4968-8692-11f4319826df",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 16,
                    hour: 22,
                    minute: 4,
                    second: 14,
                    nanosecond: 852000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "guest_m7g2Hgnztu",
                  refcode: "sSn4JFgYa"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09150261900",
                      id: "38b92407-e7d3-4449-998e-91e557419454",
                      username: "guest_AJtHShkXKp",
                      refcode: "NEjJKFm3J"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHamyarStatus: 1,
                  activeTel: false,
                  breastCancerSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 6,
                    minute: 36,
                    second: 40,
                    nanosecond: 700000000,
                    timeZoneOffsetSeconds: 0
                  },
                  hamyarTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 6,
                    minute: 36,
                    second: 40,
                    nanosecond: 596000000,
                    timeZoneOffsetSeconds: 0
                  },
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 6,
                    minute: 36,
                    second: 40,
                    nanosecond: 700000000,
                    timeZoneOffsetSeconds: 0
                  },
                  motherSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 6,
                    minute: 36,
                    second: 40,
                    nanosecond: 700000000,
                    timeZoneOffsetSeconds: 0
                  },
                  selfHamyarSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 6,
                    minute: 36,
                    second: 40,
                    nanosecond: 700000000,
                    timeZoneOffsetSeconds: 0
                  },
                  specialAdviceSubTim: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 6,
                    minute: 36,
                    second: 40,
                    nanosecond: 700000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09903519389",
                  id: "57d8f464-8b51-440e-b1e8-dd715bc5fece",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 24,
                    hour: 14,
                    minute: 48,
                    second: 40,
                    nanosecond: 916000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "fazix",
                  refcode: "KGcVx8qQY"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09058348794",
                      id: "f52d52a4-5896-4095-a2a2-bf49bee8c2fb",
                      username: "guest_g2iRatoEYq",
                      refcode: "gxJAb7RfL"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHusbandSms: 1,
                  activeTel: false,
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 18,
                    minute: 7,
                    second: 14,
                    nanosecond: 178000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09147043904",
                  id: "4c9ea867-287b-41fd-b858-6bb94ed1ed6d",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 11,
                    hour: 13,
                    minute: 29,
                    second: 21,
                    nanosecond: 775000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "guest_18wgPkiVTK",
                  refcode: "LnqO0p1IU"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09381288449",
                      id: "965e8db4-36a5-4cac-9a91-ba3343a46c35",
                      username: "guest_hIaKhWZnzI",
                      refcode: "a1TZhO9mk"
                    }
                  },
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09147037543",
                      id: "537329",
                      lastActivity: {
                        year: 2025,
                        month: 8,
                        day: 22,
                        hour: 19,
                        minute: 11,
                        second: 18,
                        nanosecond: 255000000,
                        timeZoneOffsetSeconds: 0
                      },
                      username: "kHASTEH",
                      refcode: "c429a0"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHusbandSms: 1,
                  activeTel: false,
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 18,
                    minute: 12,
                    second: 59,
                    nanosecond: 968000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09368377700",
                  id: "d0f454f5-3fb9-4e03-86ff-a5ae338a88ef",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 25,
                    hour: 4,
                    minute: 19,
                    second: 46,
                    nanosecond: 800000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "guest_rmGlLVQYH7",
                  refcode: "Y0PEBdqV9"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09100154413",
                      id: "62305360-1ce9-4d67-b01c-7d22cef2d472",
                      lastActivity: {
                        year: 2025,
                        month: 8,
                        day: 21,
                        hour: 7,
                        minute: 42,
                        second: 10,
                        nanosecond: 981000000,
                        timeZoneOffsetSeconds: 0
                      },
                      username: "guest_C8twcg24qg",
                      refcode: "1tRFV5Nx6"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHusbandSms: 1,
                  activeTel: false,
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 11,
                    minute: 49,
                    second: 58,
                    nanosecond: 577000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09960590720",
                  id: "a971f7a7-0a96-4de6-af52-82363b2f6d36",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 24,
                    hour: 16,
                    minute: 42,
                    second: 52,
                    nanosecond: 201000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "guest_L45w4E6O3F",
                  refcode: "WnucIJgwh"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09154940971",
                      id: "bcc0b33e-a80c-4438-a0f1-401be47e054b",
                      lastActivity: {
                        year: 2025,
                        month: 7,
                        day: 26,
                        hour: 17,
                        minute: 55,
                        second: 59,
                        nanosecond: 909000000,
                        timeZoneOffsetSeconds: 0
                      },
                      username: "guest_1dTlYgSpXo",
                      refcode: "cLwFDFKki"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHusbandSms: 1,
                  activeTel: false,
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 18,
                    minute: 32,
                    second: 26,
                    nanosecond: 777000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09919428101",
                  id: "339c1eb9-b6e0-47fd-9325-1a45db81a329",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 24,
                    hour: 16,
                    minute: 1,
                    second: 2,
                    nanosecond: 979000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "guest_PPAUHZoGof",
                  refcode: "eoxEW9dOU"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09101157086",
                      id: "3a1ac4f3-47d3-4864-8d2d-bdd075423442",
                      username: "guest_8XsZ7tGTeM",
                      refcode: "eF9guJW2p"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHusbandSms: 1,
                  activeTel: false,
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 5,
                    minute: 37,
                    second: 50,
                    nanosecond: 923000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09180609078",
                  id: "78ccd866-bb0d-45f3-a001-ba550592e7e9",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 25,
                    hour: 6,
                    minute: 2,
                    second: 29,
                    nanosecond: 875000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "guest_OIWQnyr0bt",
                  refcode: "Em9K3pa8c"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "mother",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09306985876",
                      id: "f56214be-e6a9-4c51-b4d0-8a042dd1a761",
                      username: "guest_BwArZXdFBH",
                      refcode: "16592OUvf"
                    }
                  },
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09012849707",
                      id: "3a815c4b-1809-4b46-a541-30ba61a8fc0d",
                      username: "guest_kwuauLeCiO",
                      refcode: "2MjfDKfJN"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHusbandSms: 1,
                  countBuySelfSms: 1,
                  activeTel: false,
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 11,
                    minute: 47,
                    second: 56,
                    nanosecond: 426000000,
                    timeZoneOffsetSeconds: 0
                  },
                  selfHamyarSmsSubTime: {
                    year: 2025,
                    month: 12,
                    day: 10,
                    hour: 22,
                    minute: 0,
                    second: 23,
                    nanosecond: 171000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09162072105",
                  id: "b193bfcc-096f-47cd-b2bb-e99831592a88",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 25,
                    hour: 9,
                    minute: 22,
                    second: 6,
                    nanosecond: 716000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "guest_e4dz0yEiQU",
                  refcode: "i5Zi94It7"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09168445038",
                      id: "fa0c3057-d741-4553-a565-906711b32e40",
                      username: "guest_OFbp7c9EAz",
                      refcode: "FRikep8xO"
                    }
                  }
                ]
              },
              {
                user: {
                  countBuyHamyarStatus: 1,
                  activeTel: false,
                  breastCancerSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 20,
                    minute: 25,
                    second: 38,
                    nanosecond: 737000000,
                    timeZoneOffsetSeconds: 0
                  },
                  hamyarTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 20,
                    minute: 25,
                    second: 38,
                    nanosecond: 34000000,
                    timeZoneOffsetSeconds: 0
                  },
                  husbandSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 20,
                    minute: 25,
                    second: 38,
                    nanosecond: 737000000,
                    timeZoneOffsetSeconds: 0
                  },
                  motherSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 20,
                    minute: 25,
                    second: 38,
                    nanosecond: 737000000,
                    timeZoneOffsetSeconds: 0
                  },
                  selfHamyarSmsSubTime: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 20,
                    minute: 25,
                    second: 38,
                    nanosecond: 737000000,
                    timeZoneOffsetSeconds: 0
                  },
                  specialAdviceSubTim: {
                    year: 2025,
                    month: 9,
                    day: 4,
                    hour: 20,
                    minute: 25,
                    second: 38,
                    nanosecond: 737000000,
                    timeZoneOffsetSeconds: 0
                  },
                  mobile: "09184956451",
                  id: "b0f37f7e-7da5-45e1-b243-16c687dfb7bf",
                  lastActivity: {
                    year: 2025,
                    month: 8,
                    day: 7,
                    hour: 8,
                    minute: 39,
                    second: 39,
                    nanosecond: 95000000,
                    timeZoneOffsetSeconds: 0
                  },
                  username: "guest_da7XFVuuQu",
                  refcode: "81el1o39z"
                },
                hamyarData: [
                  {
                    statusSms: true,
                    relation: "husband",
                    active: true,
                    man: {
                      activeTel: false,
                      mobile: "09036228414",
                      id: "45a31598-cd61-4752-86b4-a69a94f9e30c",
                      username: "guest_bQKcrlaZo3",
                      refcode: "OXiYeCYFH"
                    }
                  }
                ]
              }
            ]
          }
        },
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "lineClomp[][].line",
        type: "private",
        variableType: "boolean"
      },
      {
        path: "switchbest[][].isChecked",
        type: "private",
        variableType: "boolean"
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const styleTokensClassNames = _useStyleTokens();
  const styleTokensClassNames_antd_5_hostless =
    useStyleTokens_antd_5_hostless();
  const styleTokensClassNames_plasmic_rich_components =
    useStyleTokens_plasmic_rich_components();

  return (
    <div
      data-plasmic-name={"frame49"}
      data-plasmic-override={overrides.frame49}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        styleTokensClassNames,
        styleTokensClassNames_antd_5_hostless,
        styleTokensClassNames_plasmic_rich_components,
        sty.frame49
      )}
    >
      <div
        data-plasmic-name={"frame25"}
        data-plasmic-override={overrides.frame25}
        className={classNames(projectcss.all, sty.frame25)}
      >
        <ChevronRightIcon
          className={classNames(projectcss.all, sty.svg__upYe4)}
          onClick={args.onBack}
          role={"img"}
        />

        <div className={classNames(projectcss.all, sty.freeBox__tkYxQ)}>
          {renderPlasmicSlot({
            defaultContents: "Journal Name",
            value: args.children,
            className: classNames(sty.slotTargetChildren)
          })}
        </div>
      </div>
      <div
        data-plasmic-name={"frame48"}
        data-plasmic-override={overrides.frame48}
        className={classNames(projectcss.all, sty.frame48)}
      >
        <div className={classNames(projectcss.all, sty.freeBox__iyLtr)}>
          <Line3Icon
            className={classNames(projectcss.all, sty.svg__umadD)}
            role={"img"}
          />
        </div>
        <div
          data-plasmic-name={"frame47"}
          data-plasmic-override={overrides.frame47}
          className={classNames(projectcss.all, sty.frame47)}
        >
          <div
            data-plasmic-name={"frame41"}
            data-plasmic-override={overrides.frame41}
            className={classNames(projectcss.all, sty.frame41)}
          >
            {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
              (() => {
                try {
                  return $props.header;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return [];
                  }
                  throw e;
                }
              })()
            ).map((__plasmic_item_0, __plasmic_idx_0) => {
              const currentItem = __plasmic_item_0;
              const currentIndex = __plasmic_idx_0;
              return (
                <div
                  data-plasmic-name={"frame35"}
                  data-plasmic-override={overrides.frame35}
                  className={classNames(projectcss.all, sty.frame35)}
                  key={currentIndex}
                  style={(() => {
                    try {
                      return {
                        width: currentItem.width + "px"
                      };
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return undefined;
                      }
                      throw e;
                    }
                  })()}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ljvUq
                    )}
                  >
                    <React.Fragment>
                      {(() => {
                        try {
                          return currentItem.label_fa;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return "Date";
                          }
                          throw e;
                        }
                      })()}
                    </React.Fragment>
                  </div>
                </div>
              );
            })}
          </div>
          <div
            data-plasmic-name={"frame46"}
            data-plasmic-override={overrides.frame46}
            className={classNames(projectcss.all, sty.frame46)}
          >
            {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
              (() => {
                try {
                  return $props.data.result;
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return [];
                  }
                  throw e;
                }
              })()
            ).map((__plasmic_item_0, __plasmic_idx_0) => {
              const item = __plasmic_item_0;
              const currentIndex = __plasmic_idx_0;
              return (
                <div
                  data-plasmic-name={"frame42"}
                  data-plasmic-override={overrides.frame42}
                  className={classNames(projectcss.all, sty.frame42)}
                  key={currentIndex}
                >
                  {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                    (() => {
                      try {
                        return $props.header;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()
                  ).map((__plasmic_item_1, __plasmic_idx_1) => {
                    const textItem = __plasmic_item_1;
                    const currentIndex = __plasmic_idx_1;
                    return (
                      <div
                        data-plasmic-name={"frame43"}
                        data-plasmic-override={overrides.frame43}
                        className={classNames(projectcss.all, sty.frame43)}
                        key={currentIndex}
                        style={(() => {
                          try {
                            return {
                              width: textItem.width + "px"
                            };
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return undefined;
                            }
                            throw e;
                          }
                        })()}
                      >
                        {(() => {
                          try {
                            return textItem.type != "bool";
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return true;
                            }
                            throw e;
                          }
                        })() ? (
                          <LineClomp
                            data-plasmic-name={"lineClomp"}
                            data-plasmic-override={overrides.lineClomp}
                            className={classNames(
                              "__wab_instance",
                              sty.lineClomp
                            )}
                            numberOfLine={1}
                            onLineChange={async (...eventArgs: any) => {
                              generateStateOnChangeProp($state, [
                                "lineClomp",
                                __plasmic_idx_0,
                                __plasmic_idx_1,
                                "line"
                              ]).apply(null, eventArgs);

                              if (
                                eventArgs.length > 1 &&
                                eventArgs[1] &&
                                eventArgs[1]._plasmic_state_init_
                              ) {
                                return;
                              }
                            }}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__eQp1V
                              )}
                            >
                              <React.Fragment>
                                {(() => {
                                  try {
                                    return (() => {
                                      if (textItem.type === "text") {
                                        return item.user[textItem.field];
                                      }
                                      if (textItem.type === "datetime") {
                                        var t = item.user[textItem.field];
                                        if (t) {
                                          var d = new Date(
                                            t.year,
                                            t.month - 1,
                                            t.day,
                                            t.hour,
                                            t.minute,
                                            t.second,
                                            Math.floor(t.nanosecond / 1000000)
                                          );
                                          var formatted =
                                            d.toLocaleDateString("fa-IR");
                                          return formatted;
                                        }
                                      }
                                    })();
                                  } catch (e) {
                                    if (
                                      e instanceof TypeError ||
                                      e?.plasmicType ===
                                        "PlasmicUndefinedDataError"
                                    ) {
                                      return "27 Nov";
                                    }
                                    throw e;
                                  }
                                })()}
                              </React.Fragment>
                            </div>
                          </LineClomp>
                        ) : null}
                        {(() => {
                          try {
                            return textItem.type == "bool";
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return true;
                            }
                            throw e;
                          }
                        })()
                          ? (() => {
                              const child$Props = {
                                children: null,
                                className: classNames(
                                  "__wab_instance",
                                  sty.switchbest
                                ),
                                isChecked:
                                  generateStateValueProp($state, [
                                    "switchbest",
                                    __plasmic_idx_0,
                                    __plasmic_idx_1,
                                    "isChecked"
                                  ]) ?? false,
                                isDisabled: true,
                                onChange: async (...eventArgs: any) => {
                                  ((...eventArgs) => {
                                    generateStateOnChangeProp($state, [
                                      "switchbest",
                                      __plasmic_idx_0,
                                      __plasmic_idx_1,
                                      "isChecked"
                                    ])(eventArgs[0]);
                                  }).apply(null, eventArgs);

                                  if (
                                    eventArgs.length > 1 &&
                                    eventArgs[1] &&
                                    eventArgs[1]._plasmic_state_init_
                                  ) {
                                    return;
                                  }
                                }
                              };

                              initializePlasmicStates(
                                $state,
                                [
                                  {
                                    name: "switchbest[][].isChecked",
                                    initFunc: ({ $props, $state, $queries }) =>
                                      (() => {
                                        try {
                                          return item.user[textItem.field];
                                        } catch (e) {
                                          if (
                                            e instanceof TypeError ||
                                            e?.plasmicType ===
                                              "PlasmicUndefinedDataError"
                                          ) {
                                            return [];
                                          }
                                          throw e;
                                        }
                                      })()
                                  }
                                ],
                                [__plasmic_idx_0, __plasmic_idx_1]
                              );
                              return (
                                <Switchbest
                                  data-plasmic-name={"switchbest"}
                                  data-plasmic-override={overrides.switchbest}
                                  {...child$Props}
                                />
                              );
                            })()
                          : null}
                      </div>
                    );
                  })}
                </div>
              );
            })}
          </div>
        </div>
      </div>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  frame49: [
    "frame49",
    "frame25",
    "frame48",
    "frame47",
    "frame41",
    "frame35",
    "frame46",
    "frame42",
    "frame43",
    "lineClomp",
    "switchbest"
  ],
  frame25: ["frame25"],
  frame48: [
    "frame48",
    "frame47",
    "frame41",
    "frame35",
    "frame46",
    "frame42",
    "frame43",
    "lineClomp",
    "switchbest"
  ],
  frame47: [
    "frame47",
    "frame41",
    "frame35",
    "frame46",
    "frame42",
    "frame43",
    "lineClomp",
    "switchbest"
  ],
  frame41: ["frame41", "frame35"],
  frame35: ["frame35"],
  frame46: ["frame46", "frame42", "frame43", "lineClomp", "switchbest"],
  frame42: ["frame42", "frame43", "lineClomp", "switchbest"],
  frame43: ["frame43", "lineClomp", "switchbest"],
  lineClomp: ["lineClomp"],
  switchbest: ["switchbest"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  frame49: "div";
  frame25: "div";
  frame48: "div";
  frame47: "div";
  frame41: "div";
  frame35: "div";
  frame46: "div";
  frame42: "div";
  frame43: "div";
  lineClomp: typeof LineClomp;
  switchbest: typeof Switchbest;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicUserPage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicUserPage__VariantsArgs;
    args?: PlasmicUserPage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicUserPage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicUserPage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicUserPage__ArgProps,
          internalVariantPropNames: PlasmicUserPage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicUserPage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "frame49") {
    func.displayName = "PlasmicUserPage";
  } else {
    func.displayName = `PlasmicUserPage.${nodeName}`;
  }
  return func;
}

export const PlasmicUserPage = Object.assign(
  // Top-level PlasmicUserPage renders the root element
  makeNodeComponent("frame49"),
  {
    // Helper components rendering sub-elements
    frame25: makeNodeComponent("frame25"),
    frame48: makeNodeComponent("frame48"),
    frame47: makeNodeComponent("frame47"),
    frame41: makeNodeComponent("frame41"),
    frame35: makeNodeComponent("frame35"),
    frame46: makeNodeComponent("frame46"),
    frame42: makeNodeComponent("frame42"),
    frame43: makeNodeComponent("frame43"),
    lineClomp: makeNodeComponent("lineClomp"),
    switchbest: makeNodeComponent("switchbest"),

    // Metadata about props expected for PlasmicUserPage
    internalVariantProps: PlasmicUserPage__VariantProps,
    internalArgProps: PlasmicUserPage__ArgProps
  }
);

export default PlasmicUserPage;
/* prettier-ignore-end */
